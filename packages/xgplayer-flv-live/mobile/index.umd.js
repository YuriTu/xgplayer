(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("xgplayer"));
	else if(typeof define === 'function' && define.amd)
		define(["xgplayer"], factory);
	else if(typeof exports === 'object')
		exports["xgplayer"] = factory(require("xgplayer"));
	else
		root["xgplayer"] = factory(root["xgplayer"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_xgplayer__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../node_modules/events/events.js":
/*!*******************************************************************************************!*\
  !*** /Users/jiangyuqing/Desktop/Projects/devspace/xgplayer/node_modules/events/events.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\n\n//# sourceURL=webpack://xgplayer//Users/jiangyuqing/Desktop/Projects/devspace/xgplayer/node_modules/events/events.js?");

/***/ }),

/***/ "../../node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack://xgplayer/(webpack)/buildin/harmony-module.js?");

/***/ }),

/***/ "../xgplayer-buffer/index.js":
/*!***********************************!*\
  !*** ../xgplayer-buffer/index.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  Track: __webpack_require__(/*! ./src/track */ \"../xgplayer-buffer/src/track.js\").default,\n  Tracks: __webpack_require__(/*! ./src/track */ \"../xgplayer-buffer/src/track.js\").Tracks,\n  AudioTrack: __webpack_require__(/*! ./src/track */ \"../xgplayer-buffer/src/track.js\").AudioTrack,\n  VideoTrack: __webpack_require__(/*! ./src/track */ \"../xgplayer-buffer/src/track.js\").VideoTrack,\n\n  XgBuffer: __webpack_require__(/*! ./src/buffer */ \"../xgplayer-buffer/src/buffer.js\").XgBuffer,\n  RemuxBuffer: __webpack_require__(/*! ./src/buffer */ \"../xgplayer-buffer/src/buffer.js\").RemuxBuffer,\n\n  PreSource: __webpack_require__(/*! ./src/presouce */ \"../xgplayer-buffer/src/presouce.js\").default\n};\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-buffer/index.js?");

/***/ }),

/***/ "../xgplayer-buffer/src/buffer.js":
/*!****************************************!*\
  !*** ../xgplayer-buffer/src/buffer.js ***!
  \****************************************/
/*! exports provided: XgBuffer, RemuxBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XgBuffer\", function() { return XgBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RemuxBuffer\", function() { return RemuxBuffer; });\nclass XgBuffer {\n  /**\n   * A buffer to store loaded data.\n   *\n   * @class LoaderBuffer\n   * @param {number} length - Optional the buffer size\n   */\n  constructor (length) {\n    this.length = length || 0\n    this.historyLen = length || 0\n    this.array = []\n    this.offset = 0\n  }\n\n  /**\n   * The function to push data.\n   *\n   * @param {number} data - The data to push into the buffer\n   */\n  push (data) {\n    this.array.push(data)\n    this.length += data.byteLength\n    this.historyLen += data.byteLength\n  }\n\n  /**\n   * The function to shift data.\n   *\n   * @param {number} length - The size of shift.\n   */\n  shift (length) {\n    if (this.array.length < 1) {\n      return new Uint8Array(0)\n    }\n\n    if (length === undefined) {\n      return this._shiftBuffer()\n    }\n    if ((this.offset + length) === this.array[0].length) {\n      let ret = this.array[0].slice(this.offset, this.offset + length)\n      this.offset = 0\n      this.array.shift()\n      this.length -= length\n      return ret\n    }\n\n    if ((this.offset + length) < this.array[0].length) {\n      let ret = this.array[0].slice(this.offset, this.offset + length)\n      this.offset += length\n      this.length -= length\n      return ret\n    }\n\n    let ret = new Uint8Array(length)\n    let tmpoff = 0\n    while (this.array.length > 0 && length > 0) {\n      if ((this.offset + length) < this.array[0].length) {\n        let tmp = this.array[0].slice(this.offset, this.offset + length)\n        ret.set(tmp, tmpoff)\n        this.offset += length\n        this.length -= length\n        length = 0\n        break\n      } else {\n        let templength = this.array[0].length - this.offset\n        ret.set(this.array[0].slice(this.offset, this.array[0].length), tmpoff)\n        this.array.shift()\n        this.offset = 0\n        tmpoff += templength\n        this.length -= templength\n        length -= templength\n      }\n    }\n    return ret\n  }\n\n  /**\n   * Function to clear the buffer.\n   */\n  clear () {\n    this.array = []\n    this.length = 0\n    this.offset = 0\n  }\n\n  destroy () {\n    this.clear()\n    this.historyLen = 0\n  }\n\n  /**\n   * Function to shift one unit8Array.\n   */\n  _shiftBuffer () {\n    this.length -= this.array[0].length\n    this.offset = 0\n    return this.array.shift()\n  }\n\n  /**\n   * Convert uint8 data to number.\n   *\n   * @param {number} start - the start postion.\n   * @param {number} length - the length of data.\n   */\n  toInt (start, length) {\n    let retInt = 0\n    let i = this.offset + start\n    while (i < this.offset + length + start) {\n      if (i < this.array[0].length) {\n        retInt = retInt * 256 + this.array[0][i]\n      } else if (this.array[1]) {\n        retInt = retInt * 256 + this.array[1][i - this.array[0].length]\n      }\n\n      i++\n    }\n    return retInt\n  }\n}\n\nclass RemuxBuffer {\n  constructor () {\n    this.video = []\n    this.audio = []\n  }\n\n  destroy () {\n    this.video = []\n    this.audio = []\n  }\n}\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-buffer/src/buffer.js?");

/***/ }),

/***/ "../xgplayer-buffer/src/presouce.js":
/*!******************************************!*\
  !*** ../xgplayer-buffer/src/presouce.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Source {\n  constructor () {\n    this.mimetype = '';\n    this.init = null;\n    this.data = [];\n  }\n}\n\nclass PreSource {\n  constructor () {\n    this.sources = {};\n  }\n\n  getSource (source) {\n    return this.sources[source];\n  }\n\n  createSource (name) {\n    this.sources[name] = new Source();\n    return this.sources[name];\n  }\n\n  clear () {\n    this.sources = {};\n  }\n\n  destroy () {\n    this.sources = {};\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (PreSource);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-buffer/src/presouce.js?");

/***/ }),

/***/ "../xgplayer-buffer/src/track.js":
/*!***************************************!*\
  !*** ../xgplayer-buffer/src/track.js ***!
  \***************************************/
/*! exports provided: default, AudioTrack, VideoTrack, Tracks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Track; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AudioTrack\", function() { return AudioTrack; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VideoTrack\", function() { return VideoTrack; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Tracks\", function() { return Tracks; });\nclass Track {\n  /**\n   * The constructor.\n   */\n  constructor () {\n    this.id = -1\n    this.sequenceNumber = 0\n    this.samples = []\n    this.droppedSamples = []\n    this.length = 0\n  }\n\n  /**\n   * Reset the track.\n   */\n  reset () {\n    this.sequenceNumber = 0\n    this.samples = []\n    this.length = 0\n  }\n  /**\n   * destroy the track.\n   */\n  distroy () {\n    this.reset()\n    this.id = -1\n  }\n}\n\nclass AudioTrack extends Track {\n  /**\n   * The constructor for audio track.\n   */\n  constructor () {\n    super()\n    this.TAG = 'AudioTrack'\n    this.type = 'audio'\n  }\n}\n\nclass VideoTrack extends Track {\n  /**\n   * The constructor for video track.\n   */\n  constructor () {\n    super()\n    this.TAG = 'VideoTrack'\n    this.type = 'video'\n    this.dropped = 0\n  }\n  /**\n   * reset the video track.\n   */\n  reset () {\n    this.sequenceNumber = 0\n    this.samples = []\n    this.length = 0\n    this.dropped = 0\n  }\n}\n\nclass Tracks {\n  constructor () {\n    this.audioTrack = null\n    this.videoTrack = null\n  }\n\n  destroy () {\n    this.audioTrack = null\n    this.videoTrack = null\n  }\n}\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-buffer/src/track.js?");

/***/ }),

/***/ "../xgplayer-codec/index.js":
/*!**********************************!*\
  !*** ../xgplayer-codec/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  Nalunit: __webpack_require__(/*! ./src/h264/nalunit */ \"../xgplayer-codec/src/h264/nalunit/index.js\").default,\n  SpsParser: __webpack_require__(/*! ./src/h264/nalunit/sps */ \"../xgplayer-codec/src/h264/nalunit/sps.js\").default,\n\n  Compatibility: __webpack_require__(/*! ./src/compatibility */ \"../xgplayer-codec/src/compatibility.js\").default\n};\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-codec/index.js?");

/***/ }),

/***/ "../xgplayer-codec/src/aac/aac-helper.js":
/*!***********************************************!*\
  !*** ../xgplayer-codec/src/aac/aac-helper.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\nclass AAC {\n\n  static getSilentFrame(codec, channelCount) {\n    if (codec === 'mp4a.40.2') {\n      // handle LC-AAC\n      if (channelCount === 1) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n      } else if (channelCount === 2) {\n        return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n      } else if (channelCount === 3) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n      } else if (channelCount === 4) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n      } else if (channelCount === 5) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n      } else if (channelCount === 6) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n      }\n    } else {\n      // handle HE-AAC (mp4a.40.5 / mp4a.40.29)\n      if (channelCount === 1) {\n        // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n        return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n      } else if (channelCount === 2) {\n        // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n        return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n      } else if (channelCount === 3) {\n        // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n        return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n      }\n    }\n    return null;\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AAC);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-codec/src/aac/aac-helper.js?");

/***/ }),

/***/ "../xgplayer-codec/src/compatibility.js":
/*!**********************************************!*\
  !*** ../xgplayer-codec/src/compatibility.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xgplayer-utils */ \"../xgplayer-utils/index.js\");\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _aac_aac_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aac/aac-helper */ \"../xgplayer-codec/src/aac/aac-helper.js\");\n\n\n\nconst {REMUX_EVENTS, DEMUX_EVENTS} = xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"EVENTS\"]\n\nclass Compatibility {\n  constructor () {\n    this.nextAudioDts = 0 // 模拟下一段音频数据的dts\n    this.nextVideoDts = 0 // 模拟下一段视频数据的dts\n\n    this.lastAudioSamplesLen = 0 // 上一段音频数据的长度\n    this.lastVideoSamplesLen = 0 // 上一段视频数据的长度\n\n    this.lastVideoDts = undefined // 上一段音频数据的长度\n    this.lastAudioDts = undefined // 上一段视频数据的长度\n\n    this.allAudioSamplesCount = 0 // 音频总数据量(原始帧)\n    this.allVideoSamplesCount = 0 // 视频总数据量(原始帧)\n\n    this._firstAudioSample = null\n    this._firstVideoSample = null\n\n    this.filledAudioSamples = [] // 补充音频帧（）\n    this.filledVideoSamples = [] // 补充视频帧（）\n\n    this._videoLargeGap = 0\n    this._audioLargeGap = 0\n  }\n\n  init () {\n    this.before(REMUX_EVENTS.REMUX_MEDIA, this.doFix.bind(this))\n  }\n\n  reset () {\n    this.nextAudioDts = null // 估算下一段音频数据的dts\n    this.nextVideoDts = null // 估算下一段视频数据的dts\n\n    this.lastAudioSamplesLen = 0 // 上一段音频数据的长度\n    this.lastVideoSamplesLen = 0 // 上一段视频数据的长度\n\n    this.lastVideoDts = undefined // 上一段音频数据的长度\n    this.lastAudioDts = undefined // 上一段视频数据的长度\n\n    // this.allAudioSamplesCount = 0 // 音频总数据量(原始帧)\n    // this.allVideoSamplesCount = 0 // 视频总数据量(原始帧)\n\n    // this._firstAudioSample = null\n    // this._firstVideoSample = null\n\n    this.filledAudioSamples = [] // 补充音频帧（）\n    this.filledVideoSamples = [] // 补充视频帧（）\n  }\n\n  doFix () {\n    const { isFirstAudioSamples, isFirstVideoSamples } = this.getFirstSample()\n\n    // this.removeInvalidSamples()\n\n    this.recordSamplesCount()\n\n    if (this._firstVideoSample) {\n      this.fixRefSampleDuration(this.videoTrack.meta, this.videoTrack.samples)\n    }\n    if (this._firstAudioSample) {\n      this.fixRefSampleDuration(this.audioTrack.meta, this.audioTrack.samples)\n    }\n\n    const { changed: videoChanged, changedIdx: videoChangedIdx } = Compatibility.detactChangeStream(this.videoTrack.samples)\n    if (videoChanged && !isFirstAudioSamples) {\n      this.fixChangeStreamVideo(videoChangedIdx)\n    } else {\n      this.doFixVideo(isFirstVideoSamples)\n    }\n\n    const { changed: audioChanged, changedIdx: audioChangedIdx } = Compatibility.detactChangeStream(this.audioTrack.samples)\n    if (audioChanged) {\n      this.fixChangeStreamAudio(audioChangedIdx)\n    } else {\n      this.doFixAudio(isFirstAudioSamples)\n    }\n\n    // this.removeInvalidSamples()\n  }\n\n  doFixVideo (first, streamChangeStart) {\n    let {samples: videoSamples, meta} = this.videoTrack\n\n    if (meta.frameRate && meta.frameRate.fixed === false) {\n      return;\n    }\n\n    if (!videoSamples || !videoSamples.length || !this._firstVideoSample) {\n      return\n    }\n\n    // console.log(`video lastSample, ${videoSamples[videoSamples.length - 1].dts}`)\n\n    const firstSample = videoSamples[0]\n\n    const samplesLen = videoSamples.length;\n\n    // step0.修复hls流出现巨大gap，需要强制重定位的问题\n    if (this._videoLargeGap > 0) {\n      Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap)\n    }\n\n    if (firstSample.dts !== this._firstVideoSample.dts && (streamChangeStart || Compatibility.detectLargeGap(this.nextVideoDts, firstSample))) {\n      if (streamChangeStart) {\n        this.nextVideoDts = streamChangeStart // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n      }\n\n      this._videoLargeGap = this.nextVideoDts - firstSample.dts\n      Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap)\n    }\n\n    const firstDts = firstSample.dts\n\n    // step1. 修复与audio首帧差距太大的问题\n    if (first && this._firstAudioSample) {\n      const videoFirstDts = this._firstVideoSample.dts\n      const audioFirstDts = this._firstAudioSample.dts\n      const gap = videoFirstDts - audioFirstDts\n      if (gap > (2 * meta.refSampleDuration)) {\n        const fillCount = Math.floor(gap / meta.refSampleDuration)\n\n        for (let i = 0; i < fillCount; i++) {\n          const clonedFirstSample = Object.assign({}, firstSample) // 视频头部帧缺失需要复制第一帧\n          // 重新计算sample的dts和pts\n          clonedFirstSample.dts = videoFirstDts - (i + 1) * meta.refSampleDuration\n          clonedFirstSample.pts = clonedFirstSample.dts + clonedFirstSample.cts\n\n          videoSamples.unshift(clonedFirstSample)\n\n          this.filledVideoSamples.push({\n            dts: clonedFirstSample.dts,\n            size: clonedFirstSample.data.byteLength\n          })\n        }\n      }\n    }\n\n    let gap\n    // step2. 修复samples段之间的间距问题、\n    if (this.nextVideoDts) {\n      // step1. 处理samples段之间的丢帧情况\n      // 当发现duration差距大于2帧时进行补帧\n      gap = firstDts - this.nextVideoDts\n      const absGap = Math.abs(gap)\n      if (gap > (2 * meta.refSampleDuration)) {\n        const fillFrameCount = Math.floor(gap / meta.refSampleDuration)\n\n        for (let i = 0; i < fillFrameCount; i++) {\n          const clonedSample = Object.assign({}, videoSamples[0])\n          const computed = firstDts - (i + 1) * meta.refSampleDuration\n\n          clonedSample.dts = computed > this.nextVideoDts ? computed : this.nextVideoDts // 补的第一帧一定要是nextVideoDts\n          clonedSample.pts = clonedSample.dts + clonedSample.cts\n\n          this.videoTrack.samples.unshift(clonedSample)\n\n          this.filledVideoSamples.push({\n            dts: clonedSample.dts,\n            size: clonedSample.data.byteLength\n          })\n        }\n      } else if (absGap <= meta.refSampleDuration && absGap > 0) {\n        // 当差距在+-一帧之间时将第一帧的dts强行定位到期望位置\n        // console.log('重定位视频帧dts', videoSamples[0].dts, this.nextVideoDts)\n        videoSamples[0].dts = this.nextVideoDts\n        videoSamples[0].originDts = videoSamples[0].dts\n        videoSamples[0].cts = videoSamples[0].cts !== undefined ? videoSamples[0].cts : videoSamples[0].pts - videoSamples[0].dts\n        videoSamples[0].pts = videoSamples[0].dts + videoSamples[0].cts\n      } else if (gap < 0) {\n        // 出现大的gap\n        Compatibility.doFixLargeGap(videoSamples, (-1 * gap))\n      }\n    }\n    const lastDts = videoSamples[videoSamples.length - 1].dts;\n\n    const lastSampleDuration = videoSamples.length >= 2 ? lastDts - videoSamples[videoSamples.length - 2].dts : meta.refSampleDuration\n\n    this.lastVideoSamplesLen = samplesLen\n    this.nextVideoDts = lastDts + lastSampleDuration\n    this.lastVideoDts = lastDts\n\n    // step2. 修复sample段之内的间距问题\n    // step3. 修复samples段内部的dts异常问题\n    for (let i = 0, len = videoSamples.length; i < len; i++) {\n      const current = videoSamples[i]\n      const next = videoSamples[i + 1]\n\n      if (!next) {\n        break;\n      }\n\n      const duration = next.dts - current.dts;\n\n      if (duration > (2 * meta.refSampleDuration)) {\n        // 两帧之间间隔太大，需要补空白帧\n        let fillFrameCount = Math.floor(duration / meta.refSampleDuration)\n\n        let fillFrameIdx = 0\n        while (fillFrameIdx < fillFrameCount) {\n          const fillFrame = Object.assign({}, next)\n          fillFrame.dts = current.dts + (fillFrameIdx + 1) * meta.refSampleDuration\n          fillFrame.pts = fillFrame.dts + fillFrame.cts\n          if (fillFrame < next.dts) {\n            videoSamples.splice(i, 0, fillFrame)\n\n            this.filledVideoSamples.push({\n              dts: fillFrame.dts,\n              size: fillFrame.data.byteLength\n            })\n          }\n\n          fillFrameIdx++\n          i++;\n        }\n      }\n    }\n\n    this.videoTrack.samples = videoSamples;\n  }\n\n  doFixAudio (first, streamChangeStart) {\n    let {samples: audioSamples, meta} = this.audioTrack\n\n    if (!audioSamples || !audioSamples.length) {\n      return\n    }\n    // console.log(`audio lastSample, ${audioSamples[audioSamples.length - 1].dts}`)\n\n    const samplesLen = audioSamples.length;\n    const silentFrame = _aac_aac_helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getSilentFrame(meta.codec, meta.channelCount)\n\n    const firstSample = this._firstAudioSample\n\n    const _firstSample = audioSamples[0]\n    // 对audioSamples按照dts做排序\n    // audioSamples = Compatibility.sortAudioSamples(audioSamples)\n    if (this._audioLargeGap > 0) {\n      Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap)\n    }\n\n    if (_firstSample.dts !== this._firstAudioSample.dts && (streamChangeStart || Compatibility.detectLargeGap(this.nextAudioDts, _firstSample))) {\n      if (streamChangeStart) {\n        this.nextAudioDts = streamChangeStart // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n      }\n      this._audioLargeGap = this.nextAudioDts - _firstSample.dts\n      Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap)\n    }\n    // step0. 首帧与video首帧间距大的问题\n    if (this._firstVideoSample && first) {\n      const videoFirstPts = this._firstVideoSample.pts ? this._firstVideoSample.pts : this._firstVideoSample.dts + this._firstVideoSample.cts\n\n      if (firstSample.dts - videoFirstPts > meta.refSampleDuration) {\n        const silentSampleCount = Math.floor((firstSample.dts - videoFirstPts) / meta.refSampleDuration)\n\n        for (let i = 0; i < silentSampleCount; i++) {\n          const silentSample = {\n            data: silentFrame,\n            datasize: silentFrame.byteLength,\n            dts: firstSample.dts - (i + 1) * meta.refSampleDuration,\n            filtered: 0\n          }\n\n          audioSamples.unshift(silentSample)\n\n          this.filledAudioSamples.push({\n            dts: silentSample.dts,\n            size: silentSample.data.byteLength\n          })\n        }\n      }\n    }\n\n    let gap\n    const firstDts = audioSamples[0].dts\n\n    if (this.nextAudioDts) {\n      // step1. 处理samples段之间的丢帧情况\n      // 当发现duration差距大于1帧时进行补帧\n      gap = firstDts - this.nextAudioDts\n      const absGap = Math.abs(gap)\n\n      if (absGap > meta.refSampleDuration && samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n        meta.refSampleDurationFixed = undefined\n      }\n\n      if (gap > (2 * meta.refSampleDuration)) {\n        if (samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n          // 如果sample的length一直是1，而且一直不符合refSampleDuration，需要动态修改refSampleDuration\n          meta.refSampleDurationFixed = meta.refSampleDurationFixed !== undefined ? meta.refSampleDurationFixed + gap : meta.refSampleDuration + gap\n        } else {\n          const silentFrameCount = Math.floor(gap / meta.refSampleDuration)\n\n          for (let i = 0; i < silentFrameCount; i++) {\n            const computed = firstDts - (i + 1) * meta.refSampleDuration\n            const silentSample = Object.assign({}, audioSamples[0], {\n              dts: computed > this.nextAudioDts ? computed : this.nextAudioDts\n            })\n\n            this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            })\n            this.audioTrack.samples.unshift(silentSample)\n          }\n        }\n      } else if (absGap <= meta.refSampleDuration && absGap > 0) {\n        // 当差距比较小的时候将音频帧重定位\n        // console.log('重定位音频帧dts', audioSamples[0].dts, this.nextAudioDts)\n        audioSamples[0].dts = this.nextAudioDts\n        audioSamples[0].pts = this.nextAudioDts\n      } else if (gap < 0) {\n        Compatibility.doFixLargeGap(audioSamples, (-1 * gap))\n      }\n    }\n    const lastDts = audioSamples[audioSamples.length - 1].dts;\n    const lastSampleDuration = audioSamples.length >= 2 ? lastDts - audioSamples[audioSamples.length - 2].dts : meta.refSampleDuration\n\n    this.lastAudioSamplesLen = samplesLen;\n    this.nextAudioDts = meta.refSampleDurationFixed ? lastDts + meta.refSampleDurationFixed : lastDts + lastSampleDuration\n    this.lastAudioDts = lastDts\n\n    // step3. 修复samples段内部的dts异常问题\n    for (let i = 0, len = audioSamples.length; i < len; i++) {\n      const current = audioSamples[i]\n      const next = audioSamples[i + 1]\n\n      if (!next) {\n        break;\n      }\n\n      const duration = next.dts - current.dts;\n      audioSamples[i].duration = duration;\n      /*\n      if (duration > (2 * meta.refSampleDuration)) {\n        // 两帧之间间隔太大，需要补空白帧\n        /**\n        let silentFrameCount = Math.floor(duration / meta.refSampleDuration)\n        let frameIdx = 0\n\n        while (frameIdx < silentFrameCount) {\n          const silentSample = {\n            data: silentFrame,\n            datasize: silentFrame.byteLength,\n            dts: current.dts + (frameIdx + 1) * meta.refSampleDuration,\n            filtered: 0,\n            isSilent: true\n          }\n\n          audioSamples.splice(i, 0, silentSample)\n\n          this.filledAudioSamples.push({\n            dts: silentSample.dts,\n            size: silentSample.data.byteLength\n          })\n\n          frameIdx++\n          i++ // 不对静音帧做比较\n        }\n      } */\n    }\n\n    this.audioTrack.samples = Compatibility.sortAudioSamples(audioSamples)\n  }\n\n  fixChangeStreamVideo (changeIdx) {\n    const { samples, meta } = this.videoTrack;\n    const prevDts = changeIdx === 0 ? this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n    const curDts = samples[changeIdx].dts;\n    const isContinue = Math.abs(prevDts - curDts) <= 2 * meta.refSampleDuration;\n\n    if (isContinue) {\n      if (!samples[changeIdx].options) {\n        samples[changeIdx].options = {\n          isContinue: true\n        }\n      } else {\n        samples[changeIdx].options.isContinue = true;\n      }\n      return this.doFixVideo(false)\n    }\n\n    const firstPartSamples = samples.slice(0, changeIdx);\n    const secondPartSamples = samples.slice(changeIdx);\n    const firstSample = samples[0]\n\n    const changeSample = secondPartSamples[0]\n    const firstPartDuration = changeSample.dts - firstSample.dts\n    const streamChangeStart = firstSample.options && firstSample.options.start + firstPartDuration ? firstSample.options.start : null\n\n    this.videoTrack.samples = samples.slice(0, changeIdx);\n\n    this.doFixVideo(false);\n\n    this.videoTrack.samples = samples.slice(changeIdx);\n\n    this.doFixVideo(false, streamChangeStart);\n\n    this.videoTrack.samples = firstPartSamples.concat(secondPartSamples)\n  }\n\n  fixChangeStreamAudio (changeIdx) {\n    const { samples, meta } = this.audioTrack;\n\n    const prevDts = changeIdx === 0 ? this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n    const curDts = samples[changeIdx].dts;\n    const isContinue = Math.abs(prevDts - curDts) <= 2 * meta.refSampleDuration;\n\n    if (isContinue) {\n      if (!samples[changeIdx].options) {\n        samples[changeIdx].options = {\n          isContinue: true\n        }\n      } else {\n        samples[changeIdx].options.isContinue = true;\n      }\n      return this.doFixAudio(false)\n    }\n\n    const firstPartSamples = samples.slice(0, changeIdx);\n    const secondPartSamples = samples.slice(changeIdx);\n    const firstSample = samples[0]\n\n    const changeSample = secondPartSamples[0]\n    const firstPartDuration = changeSample.dts - firstSample.dts\n    const streamChangeStart = firstSample.options && firstSample.options.start + firstPartDuration ? firstSample.options.start : null\n\n    this.audioTrack.samples = firstPartSamples;\n\n    this.doFixAudio(false);\n\n    this.audioTrack.samples = secondPartSamples;\n\n    this.doFixAudio(false, streamChangeStart);\n\n    this.audioTrack.samples = firstPartSamples.concat(secondPartSamples)\n  }\n\n  getFirstSample () {\n    // 获取video和audio的首帧数据\n    let {samples: videoSamples} = this.videoTrack\n    let {samples: audioSamples} = this.audioTrack\n\n    let isFirstVideoSamples = false;\n    let isFirstAudioSamples = false;\n\n    if (!this._firstVideoSample && videoSamples.length) {\n      this._firstVideoSample = Compatibility.findFirstVideoSample(videoSamples)\n      isFirstVideoSamples = true\n    }\n\n    if (!this._firstAudioSample && audioSamples.length) {\n      this._firstAudioSample = Compatibility.findFirstAudioSample(audioSamples) // 寻找dts最小的帧作为首个音频帧\n      isFirstAudioSamples = true\n    }\n\n    return {\n      isFirstVideoSamples,\n      isFirstAudioSamples\n    }\n  }\n\n  /**\n   * 在没有refSampleDuration的问题流中，\n   */\n  fixRefSampleDuration (meta, samples) {\n    const isVideo = meta.type === 'video'\n    const allSamplesCount = isVideo ? this.allVideoSamplesCount : this.allAudioSamplesCount\n    const firstDts = isVideo ? this._firstVideoSample.dts : this._firstAudioSample.dts\n    const filledSamplesCount = isVideo ? this.filledVideoSamples.length : this.filledAudioSamples.length\n\n    if (!meta.refSampleDuration || meta.refSampleDuration <= 0 || Number.isNaN(meta.refSampleDuration)) {\n      if (samples.length >= 1) {\n        const lastDts = samples[samples.length - 1].dts\n\n        meta.refSampleDuration = Math.floor((lastDts - firstDts) / ((allSamplesCount + filledSamplesCount) - 1)); // 将refSampleDuration重置为计算后的平均值\n      }\n    } else if (meta.refSampleDuration) {\n      if (samples.length >= 5) {\n        const lastDts = samples[samples.length - 1].dts\n        const firstDts = samples[0].dts\n        const durationAvg = (lastDts - firstDts) / (samples.length - 1)\n\n        meta.refSampleDuration = Math.floor(Math.abs(meta.refSampleDuration - durationAvg) <= 5 ? meta.refSampleDuration : durationAvg); // 将refSampleDuration重置为计算后的平均值\n      }\n    }\n  }\n\n  /**\n   * 记录截止目前一共播放了多少帧\n   */\n  recordSamplesCount () {\n    const { audioTrack, videoTrack } = this\n\n    this.allAudioSamplesCount += audioTrack.samples.length\n    this.allVideoSamplesCount += videoTrack.samples.length\n  }\n\n  /**\n   * 去除不合法的帧（倒退、重复帧）\n   */\n  removeInvalidSamples () {\n    const { _firstVideoSample, _firstAudioSample } = this\n\n    this.audioTrack.samples = this.audioTrack.samples.filter((sample) => {\n      return sample.dts >= _firstAudioSample.dts && (this.lastAudioDts === undefined || sample.dts > this.lastAudioDts)\n    })\n\n    this.videoTrack.samples = this.videoTrack.samples.filter((sample) => {\n      return sample.dts >= _firstVideoSample.dts && (this.lastVideoDts === undefined || sample.dts > this.lastVideoDts)\n    })\n  }\n\n  getStreamChangeStart (sample) {\n    if (sample.options && sample.options.start) {\n      return sample.options.start - this.dtsBase;\n    }\n    return Infinity\n  }\n\n  static sortAudioSamples (samples) {\n    if (samples.length === 1) {\n      return samples\n    }\n\n    return samples.sort((a, b) => {\n      return a.dts - b.dts\n    })\n  }\n\n  /**\n   * 寻找dts最小的sample\n   * @param samples\n   */\n  static findFirstAudioSample (samples) {\n    if (!samples || samples.length === 0) {\n      return null\n    }\n\n    return Compatibility.sortAudioSamples(samples)[0]\n  }\n\n  static findFirstVideoSample (samples) {\n    if (!samples.length) {\n      return null\n    }\n\n    const sorted = samples.sort((a, b) => {\n      return a.dts - b.dts;\n    })\n\n    for (let i = 0, len = sorted.length; i < len; i++) {\n      if (sorted[i].isKeyframe) {\n        return sorted[i]\n      }\n    }\n  }\n\n  static detectLargeGap (nextDts, firstSample) {\n    if (nextDts === null) {\n      return;\n    }\n    const curDts = firstSample.dts || 0\n    const cond1 = nextDts - curDts >= 1000 || curDts - nextDts >= 1000 // fix hls流出现大量流dts间距问题\n    const cond2 = firstSample.options && firstSample.options.discontinue\n\n    return cond1 || cond2\n  }\n\n  static doFixLargeGap (samples, gap) {\n    for (let i = 0, len = samples.length; i < len; i++) {\n      const sample = samples[i];\n      sample.dts += gap\n      if (sample.pts) {\n        sample.pts += gap\n      }\n    }\n  }\n\n  /**\n   * 中途换流\n   */\n  static detactChangeStream (samples) {\n    let changed = false;\n    let changedIdx = -1;\n    for (let i = 0, len = samples.length; i < len; i++) {\n      if (samples[i].options && samples[i].options.meta) {\n        changed = true\n        changedIdx = i;\n        break;\n      }\n    }\n\n    return {\n      changed,\n      changedIdx\n    }\n  }\n\n  get tracks () {\n    return this._context.getInstance('TRACKS')\n  }\n\n  get audioTrack () {\n    if (this.tracks) {\n      return this.tracks.audioTrack\n    }\n    return null\n  }\n\n  get videoTrack () {\n    if (this.tracks) {\n      return this.tracks.videoTrack\n    }\n    return null\n  }\n\n  get dtsBase () {\n    const remuxer = this._context.getInstance('MP4_REMUXER');\n    if (remuxer) {\n      return remuxer._dtsBase\n    }\n    return 0\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Compatibility);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-codec/src/compatibility.js?");

/***/ }),

/***/ "../xgplayer-codec/src/h264/nalunit/golomb.js":
/*!****************************************************!*\
  !*** ../xgplayer-codec/src/h264/nalunit/golomb.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Golomb {\n  constructor (uint8array) {\n    this.TAG = 'Golomb'\n    this._buffer = uint8array\n    this._bufferIndex = 0\n    this._totalBytes = uint8array.byteLength\n    this._totalBits = uint8array.byteLength * 8\n    this._currentWord = 0\n    this._currentWordBitsLeft = 0\n  }\n\n  destroy () {\n    this._buffer = null\n  }\n\n  _fillCurrentWord () {\n    let bufferBytesLeft = this._totalBytes - this._bufferIndex\n    if (bufferBytesLeft <= 0) {\n      // TODO 异常处理\n    }\n\n    let bytesRead = Math.min(4, bufferBytesLeft)\n    let word = new Uint8Array(4)\n    word.set(this._buffer.subarray(this._bufferIndex, this._bufferIndex + bytesRead))\n    this._currentWord = new DataView(word.buffer).getUint32(0)\n\n    this._bufferIndex += bytesRead\n    this._currentWordBitsLeft = bytesRead * 8\n  }\n\n  readBits (size) {\n    let bits = Math.min(this._currentWordBitsLeft, size);// :uint\n    let valu = this._currentWord >>> (32 - bits);\n    if (size > 32) {\n      throw new Error('Cannot read more than 32 bits at a time');\n    }\n    this._currentWordBitsLeft -= bits;\n    if (this._currentWordBitsLeft > 0) {\n      this._currentWord <<= bits;\n    } else if (this._totalBytes - this._bufferIndex > 0) {\n      this._fillCurrentWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0 && this._currentWordBitsLeft) {\n      return valu << bits | this.readBits(bits);\n    } else {\n      return valu;\n    }\n  }\n\n  readBool () {\n    return this.readBits(1) === 1\n  }\n\n  readByte () {\n    return this.readBits(8)\n  }\n\n  _skipLeadingZero () {\n    let zeroCount\n    for (zeroCount = 0; zeroCount < this._currentWordBitsLeft; zeroCount++) {\n      if ((this._currentWord & (0x80000000 >>> zeroCount)) !== 0) {\n        this._currentWord <<= zeroCount\n        this._currentWordBitsLeft -= zeroCount\n        return zeroCount\n      }\n    }\n    this._fillCurrentWord()\n    return zeroCount + this._skipLeadingZero()\n  }\n\n  readUEG () { // unsigned exponential golomb\n    let leadingZeros = this._skipLeadingZero()\n    return this.readBits(leadingZeros + 1) - 1\n  }\n\n  readSEG () { // signed exponential golomb\n    let value = this.readUEG()\n    if (value & 0x01) {\n      return (value + 1) >>> 1\n    } else {\n      return -1 * (value >>> 1)\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Golomb);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-codec/src/h264/nalunit/golomb.js?");

/***/ }),

/***/ "../xgplayer-codec/src/h264/nalunit/index.js":
/*!***************************************************!*\
  !*** ../xgplayer-codec/src/h264/nalunit/index.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sps */ \"../xgplayer-codec/src/h264/nalunit/sps.js\");\n\nclass Nalunit {\n  static getNalunits (buffer) {\n    if (buffer.length - buffer.position < 4) {\n      return [];\n    }\n\n    let buf = buffer.dataview;\n    let position = buffer.position;\n    if (buf.getInt32(position) === 1 ||\n    (buf.getInt16(position) === 0 && buf.getInt8(position + 2) === 1)) {\n      return Nalunit.getAnnexbNals(buffer);\n    } else {\n      return Nalunit.getAvccNals(buffer);\n    }\n  }\n\n  static getAnnexbNals (buffer) {\n    let nals = [];\n    let position = Nalunit.getHeaderPositionAnnexB(buffer);\n    let start = position.pos;\n    let end = start;\n    while (start < buffer.length - 4) {\n      let header = buffer.buffer.slice(start, start + position.headerLength);\n      if (position.pos === buffer.position) {\n        buffer.skip(position.headerLength);\n      }\n      position = Nalunit.getHeaderPositionAnnexB(buffer);\n      end = position.pos;\n      let body = new Uint8Array(buffer.buffer.slice(start + header.byteLength, end));\n      let unit = {header, body};\n      Nalunit.analyseNal(unit);\n      nals.push(unit);\n      buffer.skip(end - buffer.position);\n      start = end;\n    }\n    return nals;\n  }\n\n  static getAvccNals (buffer) {\n    let nals = [];\n    while (buffer.position < buffer.length - 4) {\n      let length = buffer.dataview.getInt32(buffer.position);\n      if (buffer.length - buffer.position >= length) {\n        let header = buffer.buffer.slice(buffer.position, buffer.position + 4);\n        buffer.skip(4)\n        let body = buffer.buffer.slice(buffer.position, buffer.position + length);\n        buffer.skip(length);\n        let unit = {header, body};\n        Nalunit.analyseNal(unit);\n        nals.push(unit);\n      } else {\n        break;\n      }\n    }\n    return nals;\n  }\n\n  static analyseNal (unit) {\n    let type = unit.body[0] & 0x1f;\n    switch (type) {\n      case 1:\n        // NDR\n        unit.ndr = true;\n        break;\n      case 5:\n        // IDR\n        unit.idr = true;\n        break;\n      case 6:\n        // SEI\n        break;\n      case 7:\n        // SPS\n        unit.sps = _sps__WEBPACK_IMPORTED_MODULE_0__[\"default\"].parseSPS(unit.body);\n        break;\n      case 8:\n        // PPS\n        unit.pps = true;\n        break;\n      case 9:\n        // AUD\n        break;\n      default:\n        break;\n    }\n  }\n\n  static getHeaderPositionAnnexB (buffer) {\n    // seperate\n    let pos = buffer.position;\n    let headerLength = 0;\n    while (headerLength !== 3 && headerLength !== 4 && pos < buffer.length - 4) {\n      if (buffer.dataview.getInt16(pos) === 0) {\n        if (buffer.dataview.getInt16(pos + 2) === 1) {\n          // 0x000001\n          headerLength = 4;\n        } else if (buffer.dataview.getInt8(pos + 2) === 1) {\n          headerLength = 3;\n        } else {\n          pos++;\n        }\n      } else {\n        pos++;\n      }\n    }\n\n    if (pos === buffer.length - 4) {\n      if (buffer.dataview.getInt16(pos) === 0) {\n        if (buffer.dataview.getInt16(pos + 2) === 1) {\n          // 0x000001\n          headerLength = 4;\n        }\n      } else {\n        pos++;\n        if (buffer.dataview.getInt16(pos) === 0 && buffer.dataview.getInt8(pos) === 1) {\n          // 0x0000001\n          headerLength = 3;\n        } else {\n          pos = buffer.length;\n        }\n      }\n    }\n    return {pos, headerLength};\n  }\n\n  static getAvcc (sps, pps) {\n    let ret = new Uint8Array(sps.byteLength + pps.byteLength + 11);\n    ret[0] = 0x01;\n    ret[1] = sps[1];\n    ret[2] = sps[2];\n    ret[3] = sps[3];\n    ret[4] = 255;\n    ret[5] = 225;\n\n    let offset = 6;\n\n    ret.set(new Uint8Array([(sps.byteLength >>> 8) & 0xff, sps.byteLength & 0xff]), offset);\n    offset += 2;\n    ret.set(sps, offset);\n    offset += sps.byteLength;\n\n    ret[offset] = 1;\n    offset++;\n\n    ret.set(new Uint8Array([(pps.byteLength >>> 8) & 0xff, pps.byteLength & 0xff]), offset);\n    offset += 2;\n    ret.set(pps, offset);\n    return ret;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Nalunit);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-codec/src/h264/nalunit/index.js?");

/***/ }),

/***/ "../xgplayer-codec/src/h264/nalunit/sps.js":
/*!*************************************************!*\
  !*** ../xgplayer-codec/src/h264/nalunit/sps.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _golomb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./golomb */ \"../xgplayer-codec/src/h264/nalunit/golomb.js\");\n/* eslint-disable camelcase  */\n/* eslint-disable one-var  */\n\n\nclass SPSParser {\n  static _ebsp2rbsp (uint8array) {\n    let src = uint8array\n    let srcLength = src.byteLength\n    let dst = new Uint8Array(srcLength)\n    let dstIdx = 0\n\n    for (let i = 0; i < srcLength; i++) {\n      if (i >= 2) {\n        if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n          continue\n        }\n      }\n      dst[dstIdx] = src[i]\n      dstIdx++\n    }\n\n    return new Uint8Array(dst.buffer, 0, dstIdx)\n  }\n\n  static parseSPS (uint8array) {\n    let rbsp = SPSParser._ebsp2rbsp(uint8array)\n    let gb = new _golomb__WEBPACK_IMPORTED_MODULE_0__[\"default\"](rbsp)\n\n    gb.readByte()\n    let profileIdc = gb.readByte()\n    gb.readByte()\n    let levelIdc = gb.readByte()\n    gb.readUEG()\n\n    let profile_string = SPSParser.getProfileString(profileIdc)\n    let level_string = SPSParser.getLevelString(levelIdc)\n    let chroma_format_idc = 1\n    let chroma_format = 420\n    let chroma_format_table = [0, 420, 422, 444]\n    let bit_depth = 8\n\n    if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 ||\n      profileIdc === 244 || profileIdc === 44 || profileIdc === 83 ||\n      profileIdc === 86 || profileIdc === 118 || profileIdc === 128 ||\n      profileIdc === 138 || profileIdc === 144) {\n      chroma_format_idc = gb.readUEG()\n      if (chroma_format_idc === 3) {\n        gb.readBits(1)\n      }\n      if (chroma_format_idc <= 3) {\n        chroma_format = chroma_format_table[chroma_format_idc]\n      }\n\n      bit_depth = gb.readUEG() + 8\n      gb.readUEG()\n      gb.readBits(1)\n      if (gb.readBool()) {\n        let scaling_list_count = (chroma_format_idc !== 3) ? 8 : 12\n        for (let i = 0; i < scaling_list_count; i++) {\n          if (gb.readBool()) {\n            if (i < 6) {\n              SPSParser._skipScalingList(gb, 16)\n            } else {\n              SPSParser._skipScalingList(gb, 64)\n            }\n          }\n        }\n      }\n    }\n    gb.readUEG()\n    let pic_order_cnt_type = gb.readUEG()\n    if (pic_order_cnt_type === 0) {\n      gb.readUEG()\n    } else if (pic_order_cnt_type === 1) {\n      gb.readBits(1)\n      gb.readSEG()\n      gb.readSEG()\n      let num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG()\n      for (let i = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i++) {\n        gb.readSEG()\n      }\n    }\n    gb.readUEG()\n    gb.readBits(1)\n\n    let pic_width_in_mbs_minus1 = gb.readUEG()\n    let pic_height_in_map_units_minus1 = gb.readUEG()\n\n    let frame_mbs_only_flag = gb.readBits(1)\n    if (frame_mbs_only_flag === 0) {\n      gb.readBits(1)\n    }\n    gb.readBits(1)\n\n    let frame_crop_left_offset = 0\n    let frame_crop_right_offset = 0\n    let frame_crop_top_offset = 0\n    let frame_crop_bottom_offset = 0\n\n    let frame_cropping_flag = gb.readBool()\n    if (frame_cropping_flag) {\n      frame_crop_left_offset = gb.readUEG()\n      frame_crop_right_offset = gb.readUEG()\n      frame_crop_top_offset = gb.readUEG()\n      frame_crop_bottom_offset = gb.readUEG()\n    }\n\n    let par_width = 1, par_height = 1\n    let fps = 0, fps_fixed = true, fps_num = 0, fps_den = 0\n\n    let vui_parameters_present_flag = gb.readBool()\n    if (vui_parameters_present_flag) {\n      if (gb.readBool()) { // aspect_ratio_info_present_flag\n        let aspect_ratio_idc = gb.readByte()\n        let par_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2]\n        let par_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1]\n\n        if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n          par_width = par_w_table[aspect_ratio_idc - 1]\n          par_height = par_h_table[aspect_ratio_idc - 1]\n        } else if (aspect_ratio_idc === 255) {\n          par_width = gb.readByte() << 8 | gb.readByte()\n          par_height = gb.readByte() << 8 | gb.readByte()\n        }\n      }\n\n      if (gb.readBool()) {\n        gb.readBool()\n      }\n      if (gb.readBool()) {\n        gb.readBits(4)\n        if (gb.readBool()) {\n          gb.readBits(24)\n        }\n      }\n      if (gb.readBool()) {\n        gb.readUEG()\n        gb.readUEG()\n      }\n      if (gb.readBool()) {\n        let num_units_in_tick = gb.readBits(32)\n        let time_scale = gb.readBits(32)\n        fps_fixed = gb.readBool()\n\n        fps_num = time_scale\n        fps_den = num_units_in_tick * 2\n        fps = fps_num / fps_den\n      }\n    }\n\n    let parScale = 1\n    if (par_width !== 1 || par_height !== 1) {\n      parScale = par_width / par_height\n    }\n\n    let crop_unit_x = 0, crop_unit_y = 0\n    if (chroma_format_idc === 0) {\n      crop_unit_x = 1\n      crop_unit_y = 2 - frame_mbs_only_flag\n    } else {\n      let sub_wc = (chroma_format_idc === 3) ? 1 : 2\n      let sub_hc = (chroma_format_idc === 1) ? 2 : 1\n      crop_unit_x = sub_wc\n      crop_unit_y = sub_hc * (2 - frame_mbs_only_flag)\n    }\n\n    let codec_width = (pic_width_in_mbs_minus1 + 1) * 16\n    let codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16)\n\n    codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x\n    codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y\n\n    let present_width = Math.ceil(codec_width * parScale)\n\n    gb.destroy()\n    gb = null\n\n    return {\n      profile_string: profile_string,\n      level_string: level_string,\n      bit_depth: bit_depth,\n      chroma_format: chroma_format,\n      chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n      frame_rate: {\n        fixed: fps_fixed,\n        fps: fps,\n        fps_den: fps_den,\n        fps_num: fps_num\n      },\n\n      par_ratio: {\n        width: par_width,\n        height: par_height\n      },\n\n      codec_size: {\n        width: codec_width,\n        height: codec_height\n      },\n\n      present_size: {\n        width: present_width,\n        height: codec_height\n      }\n    }\n  }\n\n  static _skipScalingList (gb, count) {\n    let last_scale = 8, next_scale = 8\n    let delta_scale = 0\n    for (let i = 0; i < count; i++) {\n      if (next_scale !== 0) {\n        delta_scale = gb.readSEG()\n        next_scale = (last_scale + delta_scale + 256) % 256\n      }\n      last_scale = (next_scale === 0) ? last_scale : next_scale\n    }\n  }\n\n  static getProfileString (profileIdc) {\n    switch (profileIdc) {\n      case 66:\n        return 'Baseline'\n      case 77:\n        return 'Main'\n      case 88:\n        return 'Extended'\n      case 100:\n        return 'High'\n      case 110:\n        return 'High10'\n      case 122:\n        return 'High422'\n      case 244:\n        return 'High444'\n      default:\n        return 'Unknown'\n    }\n  }\n\n  static getLevelString (levelIdc) {\n    return (levelIdc / 10).toFixed(1)\n  }\n\n  static getChromaFormatString (chroma) {\n    switch (chroma) {\n      case 420:\n        return '4:2:0'\n      case 422:\n        return '4:2:2'\n      case 444:\n        return '4:4:4'\n      default:\n        return 'Unknown'\n    }\n  }\n\n  static toVideoMeta (spsConfig) {\n    let meta = {}\n    if (spsConfig && spsConfig.codec_size) {\n      meta.codecWidth = spsConfig.codec_size.width\n      meta.codecHeight = spsConfig.codec_size.height\n      meta.presentWidth = spsConfig.present_size.width\n      meta.presentHeight = spsConfig.present_size.height\n    }\n\n    meta.profile = spsConfig.profile_string\n    meta.level = spsConfig.level_string\n    meta.bitDepth = spsConfig.bit_depth\n    meta.chromaFormat = spsConfig.chroma_format\n\n    meta.parRatio = {\n      width: spsConfig.par_ratio.width,\n      height: spsConfig.par_ratio.height\n    }\n\n    meta.frameRate = spsConfig.frame_rate\n\n    let fpsDen = meta.frameRate.fps_den\n    let fpsNum = meta.frameRate.fps_num\n    meta.refSampleDuration = Math.floor(meta.timescale * (fpsDen / fpsNum))\n    return meta;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SPSParser);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-codec/src/h264/nalunit/sps.js?");

/***/ }),

/***/ "../xgplayer-demux/index.js":
/*!**********************************!*\
  !*** ../xgplayer-demux/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  // HLS\n  M3U8Parser: __webpack_require__(/*! ./src/hls/demuxer/m3u8parser */ \"../xgplayer-demux/src/hls/demuxer/m3u8parser.js\").default,\n  TsDemuxer: __webpack_require__(/*! ./src/hls/demuxer/ts */ \"../xgplayer-demux/src/hls/demuxer/ts.js\").default,\n  Playlist: __webpack_require__(/*! ./src/hls/playlist */ \"../xgplayer-demux/src/hls/playlist.js\").default,\n  FlvDemuxer: __webpack_require__(/*! ./src/flv/index */ \"../xgplayer-demux/src/flv/index.js\").default\n};\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-demux/index.js?");

/***/ }),

/***/ "../xgplayer-demux/src/flv/amf-parser.js":
/*!***********************************************!*\
  !*** ../xgplayer-demux/src/flv/amf-parser.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AMFParser; });\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xgplayer-utils */ \"../xgplayer-utils/index.js\");\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst DATA_TYPES = {\n  NUMBER: 0,\n  BOOLEAN: 1,\n  STRING: 2,\n  OBJECT: 3,\n  MIX_ARRAY: 8,\n  OBJECT_END: 9,\n  STRICT_ARRAY: 10,\n  DATE: 11,\n  LONE_STRING: 12\n}\n\n/**\n * meta信息解析\n */\nclass AMFParser {\n  constructor () {\n    this.offset = 0\n    this.readOffset = this.offset\n  }\n\n  resolve (meta, size) {\n    if (size < 3) {\n      throw new Error('not enough data for metainfo')\n    }\n    const metaData = {}\n    const name = this.parseValue(meta)\n    const value = this.parseValue(meta, size - name.bodySize)\n    metaData[name.data] = value.data\n\n    this.resetStatus()\n    return metaData\n  }\n\n  resetStatus () {\n    this.offset = 0\n    this.readOffset = this.offset\n  }\n\n  parseString (buffer) {\n    const dv = new DataView(buffer, this.readOffset)\n    const strLen = dv.getUint16(0, !xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"isLe\"])\n    let str = ''\n    if (strLen > 0) {\n      str = xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"UTF8\"].decode(new Uint8Array(buffer, this.readOffset + 2, strLen))\n    } else {\n      str = ''\n    }\n    let size = strLen + 2\n    this.readOffset += size\n    return {\n      data: str,\n      bodySize: strLen + 2\n    }\n  }\n\n  parseDate (buffer, size) {\n    const dv = new DataView(buffer, this.readOffset, size)\n    let ts = dv.getFloat64(0, !xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"isLe\"])\n    const timeOffset = dv.getInt16(8, !xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"isLe\"])\n    ts += timeOffset * 60 * 1000\n\n    this.readOffset += 10\n    return {\n      data: new Date(ts),\n      bodySize: 10\n    }\n  }\n\n  parseObject (buffer, size) {\n    const name = this.parseString(buffer, size)\n    const value = this.parseValue(buffer, size - name.bodySize)\n    return {\n      data: {\n        name: name.data,\n        value: value.data\n      },\n      bodySize: name.bodySize + value.bodySize,\n      isObjEnd: value.isObjEnd\n    }\n  }\n\n  parseLongString (buffer) {\n    const dv = new DataView(buffer, this.readOffset)\n    const strLen = dv.getUint32(0, !xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"isLe\"])\n    let str = ''\n    if (strLen > 0) {\n      str = xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"UTF8\"].decode(new Uint8Array(buffer, this.readOffset + 2, strLen))\n    } else {\n      str = ''\n    }\n    // const size = strLen + 4;\n    this.readOffset += strLen + 4\n    return {\n      data: str,\n      bodySize: strLen + 4\n    }\n  }\n\n  /**\n   * 解析meta中的变量\n   */\n  parseValue (data, size) {\n    let buffer = new ArrayBuffer()\n    if (data instanceof ArrayBuffer) {\n      buffer = data\n    } else {\n      buffer = data.buffer\n    }\n    const {\n      NUMBER,\n      BOOLEAN,\n      STRING,\n      OBJECT,\n      MIX_ARRAY,\n      OBJECT_END,\n      STRICT_ARRAY,\n      DATE,\n      LONE_STRING\n    } = DATA_TYPES\n    const dataView = new DataView(buffer, this.readOffset, size)\n    let isObjEnd = false\n    const type = dataView.getUint8(0)\n    let offset = 1\n    this.readOffset += 1\n    let value = null\n\n    switch (type) {\n      case NUMBER: {\n        value = dataView.getFloat64(1, !xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"isLe\"])\n        this.readOffset += 8\n        offset += 8\n        break\n      }\n      case BOOLEAN: {\n        const boolNum = dataView.getUint8(1)\n        value = !!boolNum\n        this.readOffset += 1\n        offset += 1\n        break\n      }\n      case STRING: {\n        const str = this.parseString(buffer)\n        value = str.data\n        offset += str.bodySize\n        break\n      }\n      case OBJECT: {\n        value = {}\n        let objEndSize = 0\n        if (dataView.getUint32(size - 4, !xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"isLe\"]) & 0x00FFFFFF) {\n          objEndSize = 3\n        }\n        // this.readOffset += offset - 1;\n        while (offset < size - 4) {\n          const amfObj = this.parseObject(buffer, size - offset - objEndSize)\n          if (amfObj.isObjectEnd) { break }\n          value[amfObj.data.name] = amfObj.data.value\n          offset += amfObj.bodySize\n        }\n        if (offset <= size - 3) {\n          const mark = dataView.getUint32(offset - 1, !xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"isLe\"]) & 0x00FFFFFF\n          if (mark === 9) {\n            this.readOffset += 3\n            offset += 3\n          }\n        }\n        break\n      }\n      case MIX_ARRAY: {\n        value = {}\n        offset += 4\n        this.readOffset += 4\n        let objEndSize = 0\n        if ((dataView.getUint32(size - 4, !xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"isLe\"]) & 0x00FFFFFF) === 9) {\n          objEndSize = 3\n        }\n\n        while (offset < size - 8) {\n          const amfVar = this.parseObject(buffer, size - offset - objEndSize)\n          if (amfVar.isObjectEnd) { break }\n          value[amfVar.data.name] = amfVar.data.value\n          offset += amfVar.bodySize\n        }\n        if (offset <= size - 3) {\n          const marker = dataView.getUint32(offset - 1, !xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"isLe\"]) & 0x00FFFFFF\n          if (marker === 9) {\n            offset += 3\n            this.readOffset += 3\n          }\n        }\n        break\n      }\n\n      case OBJECT_END: {\n        value = null\n        isObjEnd = true\n        break\n      }\n\n      case STRICT_ARRAY: {\n        value = []\n        const arrLength = dataView.getUint32(1, !xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"isLe\"])\n        offset += 4\n        this.readOffset += 4\n        for (let i = 0; i < arrLength; i++) {\n          const script = this.parseValue(buffer, size - offset)\n          value.push(script.data)\n          offset += script.bodySize\n        }\n        break\n      }\n\n      case DATE: {\n        const date = this.parseDate(buffer, size - 1)\n        value = date.data\n        offset += date.bodySize\n        break\n      }\n\n      case LONE_STRING: {\n        const longStr = this.parseLongString(buffer, size - 1)\n        value = longStr.data\n        offset += longStr.bodySize\n        break\n      }\n\n      default: {\n        offset = size\n      }\n    }\n\n    return {\n      data: value,\n      bodySize: offset,\n      isObjEnd: isObjEnd\n    }\n  }\n}\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-demux/src/flv/amf-parser.js?");

/***/ }),

/***/ "../xgplayer-demux/src/flv/index.js":
/*!******************************************!*\
  !*** ../xgplayer-demux/src/flv/index.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xgplayer-utils */ \"../xgplayer-utils/index.js\");\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var xgplayer_codec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! xgplayer-codec */ \"../xgplayer-codec/index.js\");\n/* harmony import */ var xgplayer_codec__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(xgplayer_codec__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var xgplayer_buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! xgplayer-buffer */ \"../xgplayer-buffer/index.js\");\n/* harmony import */ var xgplayer_buffer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(xgplayer_buffer__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _amf_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./amf-parser */ \"../xgplayer-demux/src/flv/amf-parser.js\");\n\n\n\n\n\nconst DEMUX_EVENTS = xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"EVENTS\"].DEMUX_EVENTS;\n\nclass FlvDemuxer {\n  constructor () {\n    this._firstFragmentLoaded = false\n    this._trackNum = 0\n    this._hasScript = false\n  }\n\n  init () {\n    this.on(DEMUX_EVENTS.DEMUX_START, this.doParseFlv.bind(this))\n  }\n\n  /**\n   * if the flv head is valid\n   * @param data\n   * @returns {boolean}\n   */\n  static isFlvFile (data) {\n    return !(data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01)\n  }\n\n  /**\n   * If the stream has audio or video.\n   * @param {number} streamFlag - Data from the stream which is define whether the audio / video track is exist.\n   */\n  static getPlayType (streamFlag) {\n    const result = {\n      hasVideo: false,\n      hasAudio: false\n    }\n\n    if (streamFlag & 0x01 > 0) {\n      result.hasVideo = true\n    }\n\n    if (streamFlag & 0x04 > 0) {\n      result.hasAudio = true\n    }\n\n    return result\n  }\n\n  doParseFlv () {\n    if (!this._firstFragmentLoaded) {\n      if (this.loaderBuffer.length < 13) {\n        return\n      }\n      const header = this.loaderBuffer.shift(13)\n      this.parseFlvHeader(header)\n      this.doParseFlv() // 递归调用，继续解析flv流\n    } else {\n      if (this.loaderBuffer.length < 11) {\n        return\n      }\n      let chunk;\n\n      let loopMax = 100000 // 防止死循环产生\n      do {\n        chunk = this._parseFlvTag()\n      } while (chunk && loopMax-- > 0)\n\n      this.emit(DEMUX_EVENTS.DEMUX_COMPLETE)\n    }\n  }\n\n  parseFlvHeader (header) {\n    if (!FlvDemuxer.isFlvFile(header)) {\n      this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid flv file'))\n      this.doParseFlv()\n    } else {\n      this._firstFragmentLoaded = true\n      const playType = FlvDemuxer.getPlayType(header[4])\n\n      if (playType.hasVideo) {\n        this.initVideoTrack()\n      }\n\n      if (playType.hasAudio) {\n        this.initAudioTrack()\n      }\n    }\n    this.doParseFlv()\n  }\n\n  /**\n   * init default video track configs\n   */\n  initVideoTrack () {\n    this._trackNum++\n    let videoTrack = new xgplayer_buffer__WEBPACK_IMPORTED_MODULE_2__[\"VideoTrack\"]()\n    videoTrack.meta = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"VideoTrackMeta\"]()\n    videoTrack.id = videoTrack.meta.id = this._trackNum\n\n    this.tracks.videoTrack = videoTrack\n  }\n\n  /**\n   * init default audio track configs\n   */\n  initAudioTrack () {\n    this._trackNum++\n    let audioTrack = new xgplayer_buffer__WEBPACK_IMPORTED_MODULE_2__[\"AudioTrack\"]()\n    audioTrack.meta = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"AudioTrackMeta\"]()\n    audioTrack.id = audioTrack.meta.id = this._trackNum\n\n    this.tracks.audioTrack = audioTrack\n  }\n\n  /**\n   * Package the data as the following data structure\n   * {\n   *    data: Uint8Array. the Stream data.\n   *    info: The first byte info of the Tag.\n   *    tagType: 8、9、18\n   *    timeStamp: the timestemp\n   * }\n   */\n  _parseFlvTag () {\n    if (this.loaderBuffer.length < 11) {\n      return null\n    }\n    let chunk = this._parseFlvTagHeader()\n    if (chunk) {\n      this._processChunk(chunk)\n    }\n    return chunk\n  }\n\n  /**\n   * Parse the 11 byte tag Header\n   */\n  _parseFlvTagHeader () {\n    let offset = 0\n    let chunk = {}\n\n    let tagType = this.loaderBuffer.toInt(offset, 1)\n    offset += 1\n\n    // 2 bit FMS reserved, 1 bit filtered, 5 bit tag type\n    chunk.filtered = (tagType & 32) >>> 5\n    chunk.tagType = tagType & 31\n\n    // 3 Byte datasize\n    chunk.datasize = this.loaderBuffer.toInt(offset, 3)\n    offset += 3\n\n    if ((chunk.tagType !== 8 && chunk.tagType !== 9 && chunk.tagType !== 11 && chunk.tagType !== 18) ||\n      this.loaderBuffer.toInt(8, 3) !== 0) {\n      if (this.loaderBuffer && this.loaderBuffer.length > 0) {\n        this.loaderBuffer.shift(1)\n      }\n      this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('tagType ' + chunk.tagType), false)\n      return null\n    }\n\n    if (this.loaderBuffer.length < chunk.datasize + 15) {\n      return null\n    }\n\n    // read the data.\n    this.loaderBuffer.shift(4)\n\n    // 3 Byte timestamp\n    let timestamp = this.loaderBuffer.toInt(0, 3)\n    this.loaderBuffer.shift(3)\n\n    // 1 Byte timestampExt\n    let timestampExt = this.loaderBuffer.shift(1)[0]\n    if (timestampExt > 0) {\n      timestamp += timestampExt * 0x1000000\n    }\n\n    chunk.dts = timestamp\n\n    // streamId\n    this.loaderBuffer.shift(3)\n    return chunk\n  }\n\n  _processChunk (chunk) {\n    switch (chunk.tagType) {\n      case 18:\n        this._parseScriptData(chunk)\n        break\n      case 8:\n        this._parseAACData(chunk)\n        break\n      case 9:\n        this._parseHevcData(chunk)\n        break\n      case 11:\n        // for some CDN that did not process the currect RTMP messages\n        this.loaderBuffer.shift(3)\n        break\n      default:\n        this.loaderBuffer.shift(1)\n    }\n  }\n\n  /**\n   * parse flv script data\n   * @param chunk\n   * @private\n   */\n  _parseScriptData (chunk) {\n    let audioTrack = this.tracks.audioTrack\n    let videoTrack = this.tracks.videoTrack\n\n    let data = this.loaderBuffer.shift(chunk.datasize)\n\n    const info = new _amf_parser__WEBPACK_IMPORTED_MODULE_3__[\"default\"]().resolve(data, data.length)\n\n    const onMetaData = this._context.onMetaData = info ? info.onMetaData : undefined\n\n    // fill mediaInfo\n    this._context.mediaInfo.duration = onMetaData.duration\n    this._context.mediaInfo.hasVideo = onMetaData.hasVideo\n    this._context.mediaInfo.hsaAudio = onMetaData.hasAudio\n\n    let validate = this._datasizeValidator(chunk.datasize)\n    if (validate) {\n      this.emit(DEMUX_EVENTS.MEDIA_INFO)\n      this._hasScript = true\n    }\n\n    // Edit default meta.\n    if (audioTrack && !audioTrack.hasSpecificConfig) {\n      let meta = audioTrack.meta\n      if (onMetaData.audiosamplerate) {\n        meta.sampleRate = onMetaData.audiosamplerate\n      }\n\n      if (onMetaData.audiochannels) {\n        meta.channelCount = onMetaData.audiochannels\n      }\n\n      switch (onMetaData.audiosamplerate) {\n        case 44100:\n          meta.sampleRateIndex = 4\n          break\n        case 22050:\n          meta.sampleRateIndex = 7\n          break\n        case 11025:\n          meta.sampleRateIndex = 10\n          break\n      }\n    }\n    if (videoTrack && !videoTrack.hasSpecificConfig) {\n      let meta = videoTrack.meta\n      if (typeof onMetaData.framerate === 'number') {\n        let fpsNum = Math.floor(onMetaData.framerate * 1000)\n        if (fpsNum > 0) {\n          let fps = fpsNum / 1000\n          if (!meta.frameRate) {\n            meta.frameRate = {}\n          }\n          meta.frameRate.fixed = true\n          meta.frameRate.fps = fps\n          meta.frameRate.fps_num = fpsNum\n          meta.frameRate.fps_den = 1000\n        }\n      }\n    }\n  }\n\n  _aacSequenceHeaderParser (data) {\n    let ret = {}\n    ret.hasSpecificConfig = true\n    ret.objectType = data[1] >>> 3\n    ret.originObjectType = ret.objectType\n    ret.sampleRateIndex = ((data[1] & 7) << 1) | (data[2] >>> 7)\n    ret.audiosamplerate = this._switchAudioSampleRate(ret.sampleRateIndex)\n    ret.channelCount = (data[2] & 120) >>> 3\n    ret.frameLength = (data[2] & 4) >>> 2\n    ret.dependsOnCoreCoder = (data[2] & 2) >>> 1\n    ret.extensionFlagIndex = data[2] & 1\n\n    ret.codec = `mp4a.40.${ret.objectType}`\n    let userAgent = window.navigator.userAgent.toLowerCase();\n    let extensionSamplingIndex;\n\n    let config;\n    let samplingIndex = ret.sampleRateIndex;\n\n    if (userAgent.indexOf('firefox') !== -1) {\n      // firefox: use SBR (HE-AAC) if freq less than 24kHz\n      if (ret.sampleRateIndex >= 6) {\n        ret.objectType = 5;\n        config = new Array(4);\n        extensionSamplingIndex = samplingIndex - 3;\n      } else { // use LC-AAC\n        ret.objectType = 2;\n        config = new Array(2);\n        extensionSamplingIndex = samplingIndex;\n      }\n    } else if (userAgent.indexOf('android') !== -1 || xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"sniffer\"].browser === 'safari') {\n      // android: always use LC-AAC\n      ret.objectType = 2;\n      config = new Array(2);\n      extensionSamplingIndex = samplingIndex;\n    } else {\n      // for other browsers, e.g. chrome...\n      // Always use HE-AAC to make it easier to switch aac codec profile\n      ret.objectType = 5;\n      extensionSamplingIndex = ret.sampleRateIndex;\n      config = new Array(4);\n\n      if (ret.sampleRateIndex >= 6) {\n        extensionSamplingIndex = ret.sampleRateIndex - 3;\n      } else if (ret.channelCount === 1) { // Mono channel\n        ret.objectType = 2;\n        config = new Array(2);\n        extensionSamplingIndex = ret.sampleRateIndex;\n      }\n    }\n\n    config[0] = ret.objectType << 3;\n    config[0] |= (ret.sampleRateIndex & 0x0F) >>> 1;\n    config[1] = (ret.sampleRateIndex & 0x0F) << 7;\n    config[1] |= (ret.channelCount & 0x0F) << 3;\n    if (ret.objectType === 5) {\n      config[1] |= ((extensionSamplingIndex & 0x0F) >>> 1);\n      config[2] = (extensionSamplingIndex & 0x01) << 7;\n      // extended audio object type: force to 2 (LC-AAC)\n      config[2] |= (2 << 2);\n      config[3] = 0;\n    }\n    ret.config = config\n    return ret\n  }\n\n  _parseAACData (chunk) {\n    let track = this.tracks.audioTrack\n    if (!track) {\n      return\n    }\n\n    let meta = track.meta\n\n    if (!meta) {\n      track.meta = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"AudioTrackMeta\"]()\n      meta = track.meta;\n    }\n\n    let info = this.loaderBuffer.shift(1)[0]\n\n    chunk.data = this.loaderBuffer.shift(chunk.datasize - 1)\n\n    let format = (info & 240) >>> 4\n\n    track.format = format\n\n    if (format !== 10) {\n      this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error(`invalid audio format: ${format}`))\n    }\n\n    if (format === 10 && !this._hasAudioSequence) {\n      meta.sampleRate = this._switchAudioSamplingFrequency(info)\n      meta.sampleRateIndex = (info & 12) >>> 2\n      meta.frameLenth = (info & 2) >>> 1\n      meta.channelCount = info & 1\n      meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale)\n    }\n\n    let audioSampleRate = meta.audioSampleRate\n    let audioSampleRateIndex = meta.sampleRateIndex\n    let refSampleDuration = meta.refSampleDuration\n\n    delete chunk.tagType\n    let validate = this._datasizeValidator(chunk.datasize)\n\n    if (chunk.data[0] === 0) { // AAC Sequence Header\n      let aacHeader = this._aacSequenceHeaderParser(chunk.data)\n      audioSampleRate = aacHeader.audiosamplerate || meta.audioSampleRate\n      audioSampleRateIndex = aacHeader.sampleRateIndex || meta.sampleRateIndex\n      refSampleDuration = Math.floor(1024 / audioSampleRate * meta.timescale)\n\n      meta.channelCount = aacHeader.channelCount\n      meta.sampleRate = audioSampleRate\n      meta.sampleRateIndex = audioSampleRateIndex\n      meta.refSampleDuration = refSampleDuration\n      meta.duration = this._context.mediaInfo.duration * meta.timescale\n      meta.config = aacHeader.config\n      meta.objectType = aacHeader.objectType;\n      meta.originObjectType = aacHeader.originObjectType;\n\n      const audioMedia = this._context.mediaInfo.audio\n\n      // fill audio media info\n      audioMedia.codec = aacHeader.codec\n      audioMedia.channelCount = aacHeader.channelCount\n      audioMedia.sampleRate = audioSampleRate\n      audioMedia.sampleRateIndex = aacHeader.audioSampleRateIndex\n\n      if (this._hasScript && !this._hasAudioSequence) {\n        this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio')\n      } else if (this._hasScript && this._hasAudioSequence) {\n        this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio')\n        this.emit(DEMUX_EVENTS.AUDIO_METADATA_CHANGE)\n        // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio')\n      }\n      this._hasAudioSequence = true\n\n      this._metaChange = true\n    } else {\n      if (this._metaChange) {\n        chunk.options = {\n          meta: track.meta\n        };\n        this._metaChange = false\n      }\n\n      chunk.data = chunk.data.slice(1, chunk.data.length)\n      track.samples.push(chunk)\n    }\n    if (!validate) {\n      this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('TAG length error at ' + chunk.datasize), false)\n      // this.logger.warn(this.TAG, error.message)\n    }\n  }\n\n  /**\n   * parse hevc/avc video data\n   * @param chunk\n   * @private\n   */\n  _parseHevcData (chunk) {\n    // header\n    let info = this.loaderBuffer.shift(1)[0]\n    chunk.frameType = (info & 0xf0) >>> 4\n    chunk.isKeyframe = chunk.frameType === 1\n    // let tempCodecID = this.tracks.videoTrack.codecID\n    let codecID = info & 0x0f\n    this.tracks.videoTrack.codecID = codecID\n\n    // hevc和avc的header解析方式一样\n    chunk.avcPacketType = this.loaderBuffer.shift(1)[0]\n    chunk.cts = this.loaderBuffer.toInt(0, 3)\n    this.loaderBuffer.shift(3)\n\n    // 12 for hevc, 7 for avc\n    if (codecID === 12) {\n      const data = this.loaderBuffer.shift(chunk.datasize - 5)\n      chunk.data = data\n\n      if (Number.parseInt(chunk.avcPacketType) !== 0) {\n        if (!this._datasizeValidator(chunk.datasize)) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error(`invalid video tag datasize: ${chunk.datasize}`), false)\n        }\n        let nalu = {}\n        let r = 0\n        nalu.cts = chunk.cts\n        nalu.dts = chunk.dts\n        while (chunk.data.length > r) {\n          let sizes = chunk.data.slice(Number.parseInt(r), 4 + r)\n          nalu.size = sizes[3]\n          nalu.size += sizes[2] * 256\n          nalu.size += sizes[1] * 256 * 256\n          nalu.size += sizes[0] * 256 * 256 * 256\n          r += 4\n          nalu.data = chunk.data.slice(Number.parseInt(r), nalu.size + r)\n          r += nalu.size\n          this.tracks.videoTrack.samples.push(nalu)\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video')\n        }\n      } else if (Number.parseInt(chunk.avcPacketType) === 0) {\n        if (!this._datasizeValidator(chunk.datasize)) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error(`invalid video tag datasize: ${chunk.datasize}`), false)\n        } else {\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video')\n        }\n      }\n    } else if (codecID === 7) {\n      let data = this.loaderBuffer.shift(chunk.datasize - 5)\n      if (data[4] === 0 && data[5] === 0 && data[6] === 0 && data[7] === 1) {\n        let avcclength = 0\n        for (let i = 0; i < 4; i++) {\n          avcclength = avcclength * 256 + data[i]\n        }\n        avcclength -= 4\n        data = data.slice(4, data.length)\n        data[3] = avcclength % 256\n        avcclength = (avcclength - data[3]) / 256\n        data[2] = avcclength % 256\n        avcclength = (avcclength - data[2]) / 256\n        data[1] = avcclength % 256\n        data[0] = (avcclength - data[1]) / 256\n      }\n\n      chunk.data = data\n      // If it is AVC sequece Header.\n      if (chunk.avcPacketType === 0) {\n        this._avcSequenceHeaderParser(chunk.data)\n        let validate = this._datasizeValidator(chunk.datasize)\n        if (validate) {\n          if (this._hasScript && !this._hasVideoSequence) {\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video')\n          } else if (this._hasScript && this._hasVideoSequence) {\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio')\n            this.emit(DEMUX_EVENTS.VIDEO_METADATA_CHANGE)\n            // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video')\n          }\n          this._hasVideoSequence = true\n        }\n        this._metaChange = true\n      } else {\n        if (!this._datasizeValidator(chunk.datasize)) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error(`invalid video tag datasize: ${chunk.datasize}`), false)\n          return;\n        }\n        if (this._metaChange) {\n          chunk.options = {\n            meta: Object.assign({}, this.tracks.videoTrack.meta)\n          }\n          this._metaChange = false\n        }\n        this.tracks.videoTrack.samples.push(chunk)\n        // this.emit(DEMUX_EVENTS.DEMUX_COMPLETE)\n      }\n    } else {\n      this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error(`video codeid is ${codecID}`), false)\n      chunk.data = this.loaderBuffer.shift(chunk.datasize - 1)\n      if (!this._datasizeValidator(chunk.datasize)) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error(`invalid video tag datasize: ${chunk.datasize}`), false)\n      }\n      this.tracks.videoTrack.samples.push(chunk)\n      this.emit(DEMUX_EVENTS.DEMUX_COMPLETE)\n    }\n    delete chunk.tagType\n  }\n\n  /**\n   * parse avc metadata\n   * @param data\n   * @private\n   */\n  _avcSequenceHeaderParser (data) {\n    let track = this.tracks.videoTrack\n\n    if (!track) {\n      return\n    }\n\n    let offset = 0\n\n    if (!track.meta) {\n      track.meta = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"VideoTrackMeta\"]()\n    }\n    let meta = track.meta\n\n    meta.configurationVersion = data[0]\n    meta.avcProfileIndication = data[1]\n    meta.profileCompatibility = data[2]\n    meta.avcLevelIndication = data[3] / 10\n    meta.nalUnitLength = (data[4] & 0x03) + 1\n\n    let numOfSps = data[5] & 0x1f\n    offset = 6\n    let config = {}\n\n    // parse SPS\n    for (let i = 0; i < numOfSps; i++) {\n      let size = data[offset] * 255 + data[offset + 1]\n      offset += 2\n\n      let sps = new Uint8Array(size)\n      for (let j = 0; j < size; j++) {\n        sps[j] = data[offset + j]\n      }\n\n      // codec string\n      let codecString = 'avc1.'\n      for (let j = 1; j < 4; j++) {\n        let h = sps[j].toString(16)\n        if (h.length < 2) {\n          h = '0' + h\n        }\n        codecString += h\n      }\n\n      meta.codec = codecString\n\n      offset += size\n      this.tracks.videoTrack.meta.sps = sps\n      config = xgplayer_codec__WEBPACK_IMPORTED_MODULE_1__[\"SpsParser\"].parseSPS(sps)\n    }\n\n    let numOfPps = data[offset]\n\n    offset++\n\n    for (let i = 0; i < numOfPps; i++) {\n      let size = data[offset] * 255 + data[offset + 1]\n      offset += 2\n      let pps = new Uint8Array(size)\n      for (let j = 0; j < size; j++) {\n        pps[j] = data[offset + j]\n      }\n      offset += size\n      this.tracks.videoTrack.meta.pps = pps\n    }\n\n    Object.assign(meta, xgplayer_codec__WEBPACK_IMPORTED_MODULE_1__[\"SpsParser\"].toVideoMeta(config))\n\n    // fill video media info\n    const videoMedia = this._context.mediaInfo.video\n\n    videoMedia.codec = meta.codec\n    videoMedia.profile = meta.profile\n    videoMedia.level = meta.level\n    videoMedia.chromaFormat = meta.chromaFormat\n    videoMedia.frameRate = meta.frameRate\n    videoMedia.parRatio = meta.parRatio\n    videoMedia.width = videoMedia.width === meta.presentWidth ? videoMedia.width : meta.presentWidth\n    videoMedia.height = videoMedia.height === meta.presentHeight ? videoMedia.width : meta.presentHeight\n\n    meta.duration = this._context.mediaInfo.duration * meta.timescale\n    meta.avcc = new Uint8Array(data.length)\n    meta.avcc.set(data)\n    track.meta = meta\n  }\n\n  /**\n   * choose audio sample rate\n   * @param samplingFrequencyIndex\n   * @returns {number}\n   * @private\n   */\n  _switchAudioSampleRate (samplingFrequencyIndex) {\n    let samplingFrequencyList = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350]\n    return samplingFrequencyList[samplingFrequencyIndex]\n  }\n\n  /**\n   * choose audio sampling frequence\n   * @param info\n   * @returns {number}\n   * @private\n   */\n  _switchAudioSamplingFrequency (info) {\n    let samplingFrequencyIndex = (info & 12) >>> 2\n    let samplingFrequencyList = [5500, 11025, 22050, 44100, 48000]\n    return samplingFrequencyList[samplingFrequencyIndex]\n  }\n\n  /**\n   * choose audio channel count\n   * @param info\n   * @returns {number}\n   * @private\n   */\n  _switchAudioChannel (info) {\n    let sampleTrackNumIndex = info & 1\n    let sampleTrackNumList = [1, 2]\n    return sampleTrackNumList[sampleTrackNumIndex]\n  }\n\n  /**\n   * check datasize is valid use 4 Byte after current tag\n   * @param datasize\n   * @returns {boolean}\n   * @private\n   */\n  _datasizeValidator (datasize) {\n    let datasizeConfirm = this.loaderBuffer.toInt(0, 4)\n    this.loaderBuffer.shift(4)\n    return datasizeConfirm === datasize + 11\n  }\n\n  get loaderBuffer () {\n    const buffer = this._context.getInstance('LOADER_BUFFER')\n    if (buffer) {\n      return buffer\n    } else {\n      this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('找不到 loaderBuffer 实例'))\n    }\n  }\n\n  get tracks () {\n    return this._context.getInstance('TRACKS')\n  }\n\n  get logger () {\n    return this._context.getInstance('LOGGER')\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (FlvDemuxer);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-demux/src/flv/index.js?");

/***/ }),

/***/ "../xgplayer-demux/src/hls/demuxer/m3u8parser.js":
/*!*******************************************************!*\
  !*** ../xgplayer-demux/src/hls/demuxer/m3u8parser.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * Reference: https://tools.ietf.org/html/rfc8216#section-4.3\n */\nclass M3U8Parser {\n  static parse (text, baseurl = '') {\n    let ret = {\n      duration: 0\n    };\n    if (!text || !text.split) {\n      return;\n    }\n    let refs = text.split(/\\r|\\n/);\n    refs = refs.filter((ref) => {\n      return ref;\n    })\n    let ref = refs.shift()\n    if (!ref.match('#EXTM3U')) {\n      throw new Error(`Invalid m3u8 file: not \"#EXTM3U\"`);\n      return null;\n    }\n    ref = refs.shift()\n    while (ref) {\n      let refm = ref.match(/#(.[A-Z|-]*):(.*)/);\n      let refd = ref.match(/#(.[A-Z|-]*)/);\n      if (refd && refm && refm.length > 2) {\n        switch (refm[1]) {\n          case 'EXT-X-VERSION':\n            ret.version = parseInt(refm[2]);\n            break;\n          case 'EXT-X-MEDIA-SEQUENCE':\n            ret.sequence = parseInt(refm[2]);\n            break;\n          case 'EXT-X-TARGETDURATION':\n            ret.targetduration = parseFloat(refm[2]);\n            break;\n          case 'EXTINF':\n            M3U8Parser.parseFrag(refm, refs, ret, baseurl);\n            break;\n          case 'EXT-X-KEY':\n            M3U8Parser.parseDecrypt(refm[2],ret);\n            break;\n          default:\n            break;\n        }\n      } if(refd && refd.length > 1) {\n        switch(refd[1]) {\n          case 'EXT-X-DISCONTINUITY':\n            ref = refs.shift();\n            let refm = ref.match(/#(.[A-Z|-]*):(.*)/);\n            if(refm.length >2 && refm[1] === 'EXTINF') {\n              M3U8Parser.parseFrag(refm, refs, ret, baseurl, true);\n            }\n            break;\n          default:\n            break;\n        }\n      }\n      ref = refs.shift()\n    }\n    return ret;\n  }\n\n  static parseFrag (refm, refs, ret, baseurl, discontinue) {\n    if (!ret.frags) {\n      ret.frags = []\n    }\n\n    let freg = {\n      start: ret.duration,\n      duration: parseFloat(refm[2]) * 1000\n    }\n\n    ret.duration += freg.duration;\n    let nextline = refs.shift();\n    if (nextline.match(/#(.*):(.*)/)) {\n      nextline = refs.shift();\n    }\n    if (nextline.length > 0 && nextline.charAt(0) === '/' && baseurl.match(/.*\\/\\/.*\\.\\w+/g)) {\n      baseurl = baseurl.match(/.*\\/\\/.*\\.\\w+/g)[0];\n    }\n    if (nextline.match(/.*:\\/\\/.*/)) {\n      freg.url = nextline;\n    } else {\n      freg.url = baseurl + nextline;\n    }\n    freg.discontinue = discontinue;\n    ret.frags.push(freg);\n  }\n\n  static parseURL (url) {\n    let baseurl = '';\n    let urls = url.match(/(.*\\/).*\\.m3u8/);\n    if (urls && urls.length > 0) {\n      for (let i = 0; i < urls.length; i++) {\n        if (urls[i].match(/.*\\/$/g) && urls[i].length > baseurl.length) {\n          baseurl = urls[i];\n        }\n      }\n    }\n    return baseurl;\n  }\n\n  static parseDecrypt(refm, ret) {\n    ret.encrypt = {};\n    let refs = refm.split(',');\n    for (let i in refs) { \n      let cmd = refs[i];\n      if(cmd.match(/METHOD=(.*)/)) {\n        ret.encrypt.method = cmd.match(/METHOD=(.*)/)[1];\n      }\n      if(cmd.match(/URI=\"(.*)\"/)) {\n        ret.encrypt.uri = cmd.match(/URI=\"(.*)\"/)[1];\n      }\n\n      if(cmd.match(/IV=0x(.*)/)) {\n        let iv = cmd.match(/IV=0x(.*)/)[1];\n        let length = Math.ceil(iv.length / 2);\n        ret.encrypt.ivb = new Uint8Array(length);\n        for(let i = length - 1; i >=0; i--) {\n          let im = parseInt(iv.substr(i * 2, 2), 16);\n          ret.encrypt.ivb[i] = im;\n        } \n        ret.encrypt.iv = iv;\n      }\n    };\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (M3U8Parser);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-demux/src/hls/demuxer/m3u8parser.js?");

/***/ }),

/***/ "../xgplayer-demux/src/hls/demuxer/ts.js":
/*!***********************************************!*\
  !*** ../xgplayer-demux/src/hls/demuxer/ts.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var xgplayer_codec__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xgplayer-codec */ \"../xgplayer-codec/index.js\");\n/* harmony import */ var xgplayer_codec__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xgplayer_codec__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var xgplayer_buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! xgplayer-buffer */ \"../xgplayer-buffer/index.js\");\n/* harmony import */ var xgplayer_buffer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(xgplayer_buffer__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! xgplayer-utils */ \"../xgplayer-utils/index.js\");\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(xgplayer_utils__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nconst DEMUX_EVENTS = xgplayer_utils__WEBPACK_IMPORTED_MODULE_2__[\"EVENTS\"].DEMUX_EVENTS;\nconst StreamType = {\n  0x01: ['video', 'MPEG-1'],\n  0x02: ['video', 'MPEG-2'],\n  0x1b: ['video', 'AVC.H264'],\n  0xea: ['video', 'VC-1'],\n  0x03: ['audio', 'MPEG-1'],\n  0x04: ['audio', 'MPEG-2'],\n  0x0f: ['audio', 'MPEG-2.AAC'],\n  0x11: ['audio', 'MPEG-4.AAC'],\n  0x80: ['audio', 'LPCM'],\n  0x81: ['audio', 'AC3'],\n  0x06: ['audio', 'AC3'],\n  0x82: ['audio', 'DTS'],\n  0x83: ['audio', 'Dolby TrueHD'],\n  0x84: ['audio', 'AC3-Plus'],\n  0x85: ['audio', 'DTS-HD'],\n  0x86: ['audio', 'DTS-MA'],\n  0xa1: ['audio', 'AC3-Plus-SEC'],\n  0xa2: ['audio', 'DTS-HD-SEC']\n};\n\nclass TsDemuxer {\n  constructor (configs) {\n    this.configs = Object.assign({}, configs);\n    this.demuxing = false;\n    this.pat = [];\n    this.pmt = [];\n    this._hasVideoMeta = false;\n    this._hasAudioMeta = false;\n  }\n\n  init () {\n    this.on(DEMUX_EVENTS.DEMUX_START, this.demux.bind(this))\n  }\n\n  demux (frag) {\n    if (this.demuxing) {\n      return\n    }\n\n    let buffer = this.inputBuffer;\n    let frags = { pat: [], pmt: [] };\n    let peses = {};\n\n    // Read TS segment\n    while (buffer.length >= 188) {\n      if (buffer.length >= 1 && buffer.array[0][buffer.offset] !== 71) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error(`Untrust sync code: ${buffer.array[0][buffer.offset]}, try to recover;`), false);\n      }\n      while (buffer.length >= 1 && buffer.array[0][buffer.offset] !== 71) {\n        buffer.shift(1);\n      }\n      let buf = buffer.shift(188);\n      // console.log(buf);\n      let tsStream = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_2__[\"Stream\"](buf.buffer);\n      let ts = {};\n      TsDemuxer.read(tsStream, ts, frags);\n      if (ts.pes) {\n        if (!peses[ts.header.pid]) {\n          peses[ts.header.pid] = [];\n        }\n        peses[ts.header.pid].push(ts.pes);\n        ts.pes.ES.buffer = [ts.pes.ES.buffer];\n      } else if (peses[ts.header.pid]) {\n        peses[ts.header.pid][peses[ts.header.pid].length - 1].ES.buffer.push(ts.payload.stream);\n      }\n    }\n\n    let AudioOptions = frag;\n    let VideoOptions = frag;\n\n    // Get Frames data\n    for (let i = 0; i < Object.keys(peses).length; i++) {\n      let epeses = peses[Object.keys(peses)[i]];\n      for (let j = 0; j < epeses.length; j++) {\n        epeses[j].id = Object.keys(peses)[i];\n        epeses[j].ES.buffer = TsDemuxer.Merge(epeses[j].ES.buffer);\n        if (epeses[j].type === 'audio') {\n          this.pushAudioSample(epeses[j], AudioOptions);\n          AudioOptions = {};\n        } else if (epeses[j].type === 'video') {\n          this.pushVideoSample(epeses[j], VideoOptions);\n          VideoOptions = {};\n        }\n      }\n    }\n\n    if (this._hasAudioMeta) {\n      this.emit(DEMUX_EVENTS.DEMUX_COMPLETE, 'audio');\n    }\n    if (this._hasVideoMeta) {\n      this.emit(DEMUX_EVENTS.DEMUX_COMPLETE, 'video');\n    }\n  }\n\n  pushAudioSample (pes, options) {\n    let track;\n    if (!this._tracks.audioTrack) {\n      this._tracks.audioTrack = new xgplayer_buffer__WEBPACK_IMPORTED_MODULE_1__[\"AudioTrack\"]();\n      track = this._tracks.audioTrack;\n    } else {\n      track = this._tracks.audioTrack;\n    }\n    let meta = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_2__[\"AudioTrackMeta\"]({\n      audioSampleRate: pes.ES.frequence,\n      sampleRate: pes.ES.frequence,\n      channelCount: pes.ES.channel,\n      codec: 'mp4a.40.' + pes.ES.audioObjectType,\n      config: pes.ES.audioConfig,\n      id: 2,\n      sampleRateIndex: pes.ES.frequencyIndex\n    });\n    meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n\n    let metaEqual = TsDemuxer.compaireMeta(track.meta, meta, true);\n\n    if (!this._hasAudioMeta || !metaEqual) {\n      track.meta = meta;\n      this._hasAudioMeta = true\n      this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n    }\n\n    let data = new Uint8Array(pes.ES.buffer.buffer.slice(pes.ES.buffer.position, pes.ES.buffer.length));\n    let dts = parseInt(pes.pts / 90);\n    let pts = parseInt(pes.pts / 90);\n    let sample = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_2__[\"AudioTrackSample\"]({dts, pts, data, options});\n    track.samples.push(sample);\n  }\n\n  pushVideoSample (pes, options) {\n    let nals = xgplayer_codec__WEBPACK_IMPORTED_MODULE_0__[\"Nalunit\"].getNalunits(pes.ES.buffer);\n    let track;\n    let meta = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_2__[\"VideoTrackMeta\"]();\n    if (!this._tracks.videoTrack) {\n      this._tracks.videoTrack = new xgplayer_buffer__WEBPACK_IMPORTED_MODULE_1__[\"VideoTrack\"]();\n      track = this._tracks.videoTrack;\n    } else {\n      track = this._tracks.videoTrack;\n    }\n    let sampleLength = 0;\n    let sps = false;\n    let pps = false;\n    for (let i = 0; i < nals.length; i++) {\n      let nal = nals[i];\n      if (nal.sps) {\n        sps = nal;\n        track.sps = nal.body;\n        meta.chromaFormat = sps.sps.chroma_format\n        meta.codec = 'avc1.';\n        for (var j = 1; j < 4; j++) {\n          var h = sps.body[j].toString(16);\n          if (h.length < 2) {\n            h = '0' + h;\n          }\n          meta.codec += h;\n        }\n        meta.codecHeight = sps.sps.codec_size.height;\n        meta.codecWidth = sps.sps.codec_size.width;\n        meta.frameRate = sps.sps.frame_rate;\n        meta.id = 1;\n        meta.level = sps.sps.level_string;\n        meta.presentHeight = sps.sps.present_size.height;\n        meta.presentWidth = sps.sps.present_size.width;\n        meta.profile = sps.sps.profile_string;\n        meta.refSampleDuration = Math.floor(meta.timescale * (sps.sps.frame_rate.fps_den / sps.sps.frame_rate.fps_num));\n        meta.sarRatio = sps.sps.sar_ratio ? sps.sps.sar_ratio : sps.sps.par_ratio;\n      } else if (nal.pps) {\n        track.pps = nal.body;\n        pps = nal;\n      } else {\n        sampleLength += (4 + nal.body.byteLength);\n      }\n    }\n\n    if (sps && pps) {\n      meta.avcc = xgplayer_codec__WEBPACK_IMPORTED_MODULE_0__[\"Nalunit\"].getAvcc(sps.body, pps.body);\n      let metaEqual = TsDemuxer.compaireMeta(track.meta, meta, true);\n      if (!this._hasVideoMeta || !metaEqual) {\n        if (options) {\n          options.meta = Object.assign({}, meta);\n        } else {\n          options = {\n            meta: Object.assign({}, meta)\n          }\n        }\n        track.meta = meta;\n        this._hasVideoMeta = true\n        this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n      }\n    }\n\n    let data = new Uint8Array(sampleLength);\n    let offset = 0;\n    let isKeyframe = false;\n    for (let i = 0; i < nals.length; i++) {\n      let nal = nals[i];\n      let length = nal.body.byteLength;\n      if (nal.idr) {\n        isKeyframe = true;\n      }\n      if (!nal.pps && !nal.sps) {\n        data.set(new Uint8Array([length >>> 24 & 0xff,\n          length >>> 16 & 0xff,\n          length >>> 8 & 0xff,\n          length & 0xff\n        ]), offset);\n        offset += 4;\n        data.set(nal.body, offset);\n        offset += length;\n      }\n    }\n    let sample = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_2__[\"VideoTrackSample\"]({\n      dts: parseInt(pes.dts / 90),\n      pts: parseInt(pes.pts / 90),\n      cts: (pes.pts - pes.dts) / 90,\n      originDts: pes.dts,\n      isKeyframe,\n      data,\n      options\n    })\n    track.samples.push(sample);\n  }\n\n  destory () {\n    this.off(DEMUX_EVENTS.DEMUX_START, this.demux);\n    this.configs = {};\n    this.demuxing = false;\n    this.pat = [];\n    this.pmt = [];\n    this._hasVideoMeta = false;\n    this._hasAudioMeta = false;\n  }\n\n  static compaireArray (a, b, type) {\n    let al = 0;\n    let bl = 0;\n    if (type === 'Uint8Array') {\n      al = a.byteLength;\n      bl = b.byteLength;\n    } else if (type === 'Array') {\n      al = a.length;\n      bl = b.length;\n    }\n    if (al !== bl) {\n      return false;\n    }\n\n    for (let i = 0; i < al; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static compaireMeta (a, b, ignoreDuration) {\n    if (!a || !b) {\n      return false;\n    }\n\n    for (let i = 0, k = Object.keys(a).length; i < k; i++) {\n      let itema = a[Object.keys(a)[i]];\n      let itemb = b[Object.keys(a)[i]];\n      if (typeof itema !== 'object') {\n        if ((ignoreDuration && Object.keys(a)[i] !== 'duration' && Object.keys(a)[i] !== 'refSampleDuration' && Object.keys(a)[i] !== 'refSampleDurationFixed') && itema !== itemb) {\n          return false;\n        }\n      } else if (itema.byteLength !== undefined) {\n        if (itemb.byteLength === undefined) {\n          return false;\n        }\n        if (!TsDemuxer.compaireArray(itema, itemb, 'Uint8Array')) {\n          return false;\n        }\n      } else if (itema.length !== undefined) {\n        if (itemb.length === undefined) {\n          return false;\n        }\n        if (!TsDemuxer.compaireArray(itema, itemb, 'Array')) {\n          return false;\n        }\n      } else {\n        if (!TsDemuxer.compaireMeta(itema, itemb)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  static Merge (buffers) {\n    let data;\n    let length = 0;\n    let offset = 0;\n    for (let i = 0; i < buffers.length; i++) {\n      length += (buffers[i].length - buffers[i].position);\n    }\n\n    data = new Uint8Array(length);\n    for (let i = 0; i < buffers.length; i++) {\n      let buffer = buffers[i];\n      data.set(new Uint8Array(buffer.buffer, buffer.position), offset);\n      offset += buffer.length - buffer.position;\n    }\n    return new xgplayer_utils__WEBPACK_IMPORTED_MODULE_2__[\"Stream\"](data.buffer);\n  }\n\n  static read (stream, ts, frags) {\n    TsDemuxer.readHeader(stream, ts);\n    TsDemuxer.readPayload(stream, ts, frags);\n    if (ts.header.packet === 'MEDIA' && ts.header.payload === 1 && !ts.unknownPIDs) {\n      ts.pes = TsDemuxer.PES(ts);\n    }\n  }\n\n  static readPayload (stream, ts, frags) {\n    let header = ts.header\n    let pid = header.pid;\n    switch (pid) {\n      case 0:\n        TsDemuxer.PAT(stream, ts, frags);\n        break;\n      case 1:\n        TsDemuxer.CAT(stream, ts, frags);\n        break;\n      case 2:\n        TsDemuxer.TSDT(stream, ts, frags);\n        break;\n      case 0x1fff:\n        break;\n      default:\n        // TODO: some的写法不太好，得改\n        if (frags.pat.some((item) => { return item.pid === pid; })) {\n          TsDemuxer.PMT(stream, ts, frags);\n        } else {\n          let sts = frags.pmt ? frags.pmt.filter((item) => item.pid === pid) : [];\n          if (sts.length > 0) {\n            TsDemuxer.Media(stream, ts, StreamType[sts[0].streamType][0])\n          } else {\n            ts.unknownPIDs = true;\n          };\n        }\n    }\n  }\n\n  static readHeader (stream, ts) {\n    let header = {};\n    header.sync = stream.readUint8();\n    let next = stream.readUint16();\n    header.error = next >>> 15;\n    header.payload = next >>> 14 & 1;\n    header.priority = next >>> 13 & 1;\n    header.pid = next & 0x1fff;\n\n    next = stream.readUint8();\n\n    header.scrambling = next >> 6 & 0x3; // 是否加密，00表示不加密\n\n    /**\n     * 00 ISO/IEC未来使用保留\n     * 01 没有调整字段，仅含有184B有效净荷\n     * 02 没有有效净荷，仅含有183B调整字段\n     * 03 0~182B调整字段后为有效净荷\n     */\n    header.adaptation = next >> 4 & 0x3;\n    header.continuity = next & 15;\n    header.packet = header.pid === 0 ? 'PAT' : 'MEDIA';\n    ts.header = header;\n  }\n\n  static PAT (stream, ts, frags) {\n    let ret = {};\n    let next = stream.readUint8();\n    stream.skip(next);\n    next = stream.readUint8();\n    ret.tabelID = next;\n    next = stream.readUint16();\n    ret.error = next >>> 7;\n    ret.zero = next >>> 6 & 1;\n    ret.sectionLength = next & 0xfff;\n    ret.streamID = stream.readUint16();\n    ret.current = stream.readUint8() & 1;\n    ret.sectionNumber = stream.readUint8();\n    ret.lastSectionNumber = stream.readUint8();\n    let N = (ret.sectionLength - 9) / 4;\n    let list = [];\n    for (let i = 0; i < N; i++) {\n      let programNumber = stream.readUint16();\n      let pid = stream.readUint16() & 0x1fff;\n      list.push({\n        program: programNumber,\n        pid,\n        type: programNumber === 0 ? 'network' : 'mapPID'\n      });\n    }\n    if (list.length > 0) {\n      frags.pat = frags.pat.concat(list);\n    }\n    ret.list = list;\n    ret.program = stream.readUint16();\n    ret.pid = stream.readUint16() & 0x1fff;\n    ts.payload = ret;\n    // TODO CRC\n  }\n\n  static PMT (stream, ts, frags) {\n    let ret = {};\n    let header = ts.header;\n    header.packet = 'PMT';\n    let next = stream.readUint8();\n    stream.skip(next);\n    next = stream.readUint8();\n    ret.tableID = next;\n    next = stream.readUint16();\n    ret.sectionLength = next & 0xfff;\n    ret.program = stream.readUint16();\n    ret.current = stream.readUint8() & 1;\n    ret.order = stream.readUint8();\n    ret.lastOrder = stream.readUint8();\n    ret.PCR_PID = stream.readUint16() & 0x1fff;\n    ret.programLength = stream.readUint16() & 0xfff;\n    let N = (ret.sectionLength - 13) / 5;\n    let list = [];\n    for (let i = 0; i < N; i++) {\n      list.push({\n        streamType: stream.readUint8(),\n        pid: stream.readUint16() & 0x1fff, // 0x07e5 视频，0x07e6\n        es: stream.readUint16() & 0xfff\n      });\n    }\n    ret.list = list;\n    if (!this.pmt) {\n      this.pmt = [];\n    }\n    frags.pmt = this.pmt.concat(list.map((item) => {\n      return {\n        pid: item.pid,\n        es: item.es,\n        streamType: item.streamType,\n        program: ret.program\n      };\n    }));\n    ts.payload = ret;\n  }\n\n  static Media (stream, ts, type) {\n    let header = ts.header;\n    let payload = {};\n    header.type = type;\n    if (header.adaptation === 0x03) {\n      payload.adaptationLength = stream.readUint8();\n      if (payload.adaptationLength > 0) {\n        let next = stream.readUint8();\n        payload.discontinue = next >>> 7;\n        payload.access = next >>> 6 & 0x01;\n        payload.priority = next >>> 5 & 0x01;\n        payload.PCR = next >>> 4 & 0x01;\n        payload.OPCR = next >>> 3 & 0x01;\n        payload.splicePoint = next >>> 2 & 0x01;\n        payload.transportPrivate = next >>> 1 & 0x01;\n        payload.adaptationField = next & 0x01;\n        let _start = stream.position;\n        if (payload.PCR === 1) {\n          payload.programClockBase = stream.readUint32() << 1;\n          next = stream.readUint16();\n          payload.programClockBase |= next >>> 15;\n          payload.programClockExtension = next & 0x1ff;\n        }\n        if (payload.OPCR === 1) {\n          payload.originProgramClockBase = stream.readUint32() << 1;\n          next = stream.readUint16();\n          payload.originProgramClockBase += next >>> 15;\n          payload.originProgramClockExtension = next & 0x1ff;\n        }\n        if (payload.splicePoint === 1) {\n          payload.spliceCountdown = stream.readUint8();\n        }\n        if (payload.transportPrivate === 1) {\n          let length = stream.readUint8();\n          let transportPrivateData = [];\n          for (let i = 0; i < length; i++) {\n            transportPrivateData.push(stream.readUint8());\n          }\n        }\n        if (payload.adaptationField === 1) {\n          let length = stream.readUint8()\n          let next = stream.readUint8()\n          let start = stream.position;\n          let ltw = next >>> 7;\n          let piecewise = next >>> 6 & 0x1;\n          let seamless = next >>> 5 & 0x1;\n          if (ltw === 1) {\n            next = stream.readUint16();\n            payload.ltwValid = next >>> 15;\n            payload.ltwOffset = next & 0xefff;\n          }\n          if (piecewise === 1) {\n            next = stream.readUint24();\n            payload.piecewiseRate = next & 0x3fffff;\n          }\n          if (seamless === 1) {\n            next = stream.readInt8();\n            payload.spliceType = next >>> 4;\n            payload.dtsNextAU1 = next >>> 1 & 0x7;\n            payload.marker1 = next & 0x1;\n            next = stream.readUint16();\n            payload.dtsNextAU2 = next >>> 1;\n            payload.marker2 = next & 0x1;\n            next = stream.readUint16();\n            payload.dtsNextAU3 = next;\n          }\n          stream.skip(length - 1 - (stream.position - start));\n        }\n        let lastStuffing = payload.adaptationLength - 1 - (stream.position - _start);\n        stream.skip(lastStuffing);\n      }\n    }\n    payload.stream = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_2__[\"Stream\"](stream.buffer.slice(stream.position));\n    ts.payload = payload;\n  }\n\n  static PES (ts) {\n    let ret = {};\n    let buffer = ts.payload.stream;\n\n    let next = buffer.readUint24();\n    if (next !== 1) {\n      ret.ES = {};\n      ret.ES.buffer = buffer;\n    } else {\n      let streamID = buffer.readUint8();\n      if (streamID >= 0xe0 && streamID <= 0xef) {\n        ret.type = 'video';\n      }\n      if (streamID >= 0xc0 && streamID <= 0xdf) {\n        ret.type = 'audio';\n      }\n      let packetLength = buffer.readUint16();\n      ret.packetLength = packetLength;\n      if (ret.type === 'video' || ret.type === 'audio') {\n        let next = buffer.readUint8();\n        let first = next >>> 6;\n        if (first !== 0x02) {\n          throw new Error('error when parse pes header');\n        }\n        next = buffer.readUint8();\n        ret.ptsDTSFlag = next >>> 6;\n        ret.escrFlag = next >>> 5 & 0x01;\n        ret.esRateFlag = next >>> 4 & 0x01;\n        ret.dsmFlag = next >>> 3 & 0x01;\n        ret.additionalFlag = next >>> 2 & 0x01;\n        ret.crcFlag = next >>> 1 & 0x01;\n        ret.extensionFlag = next & 0x01;\n        ret.pesHeaderLength = buffer.readUint8();\n        let N1 = ret.pesHeaderLength;\n\n        if (ret.ptsDTSFlag === 2) {\n          let pts = [];\n          next = buffer.readUint8();\n          pts.push(next >>> 1 & 0x07);\n          next = buffer.readUint16();\n          pts.push(next >>> 1);\n          next = buffer.readUint16();\n          pts.push(next >>> 1);\n          ret.pts = (pts[0] << 30 | pts[1] << 15 | pts[2]);\n          N1 -= 5;\n          // 视频如果没有dts用pts\n          if (ret.type === 'video') {\n            ret.dts = ret.pts;\n          }\n        }\n        if (ret.ptsDTSFlag === 3) {\n          let pts = [];\n          next = buffer.readUint8();\n          pts.push(next >>> 1 & 0x07);\n          next = buffer.readUint16();\n          pts.push(next >>> 1);\n          next = buffer.readUint16();\n          pts.push(next >>> 1);\n          ret.pts = (pts[0] << 30 | pts[1] << 15 | pts[2]);\n          let dts = [];\n          next = buffer.readUint8();\n          dts.push(next >>> 1 & 0x07);\n          next = buffer.readUint16();\n          dts.push(next >>> 1);\n          next = buffer.readUint16();\n          dts.push(next >>> 1);\n          ret.dts = (dts[0] << 30 | dts[1] << 15 | dts[2]);\n          N1 -= 10;\n        }\n        if (ret.escrFlag === 1) {\n          let escr = []\n          let ex = [];\n          next = buffer.readUint8();\n          escr.push(next >>> 3 & 0x07);\n          escr.push(next & 0x03);\n          next = buffer.readUint16();\n          escr.push(next >>> 13);\n          escr.push(next & 0x03);\n          next = buffer.readUint16();\n          escr.push(next >>> 13);\n          ex.push(next & 0x03);\n          next = buffer.readUint8();\n          ex.push(next >>> 1);\n          ret.escr = (escr[0] << 30 | escr[1] << 28 | escr[2] << 15 | escr[3] << 13 | escr[4]) * 300 + (ex[0] << 7 | ex[1]);\n          N1 -= 6;\n        }\n        if (ret.esRateFlag === 1) {\n          next = buffer.readUint24();\n          ret.esRate = next >>> 1 & 0x3fffff;\n          N1 -= 3;\n        }\n        if (ret.dsmFlag === 1) {\n          throw new Error('not support DSM_trick_mode');\n        }\n        if (ret.additionalFlag === 1) {\n          next = buffer.readUint8();\n          ret.additionalCopyInfo = next & 0x7f;\n          N1 -= 1;\n        }\n        if (ret.crcFlag === 1) {\n          ret.pesCRC = buffer.readUint16();\n          N1 -= 2;\n        }\n        if (ret.extensionFlag === 1) {\n          throw new Error('not support extension');\n        }\n        if (N1 > 0) {\n          buffer.skip(N1);\n        }\n        ret.ES = TsDemuxer.ES(buffer, ret.type);\n      } else {\n        throw new Error('format is not supported');\n      }\n    }\n    return ret;\n  }\n\n  static ES (buffer, type) {\n    let next;\n    let ret = {};\n    if (type === 'video') {\n      next = buffer.readUint32();\n      if (next !== 1) {\n        buffer.back(4);\n        next = buffer.readUint24();\n        if (next !== 1) {\n          throw new Error('h264 nal header parse failed');\n        }\n      }\n      buffer.skip(2);// 09 F0\n      // TODO readnalu\n      ret.buffer = buffer;\n    } else if (type === 'audio') {\n      next = buffer.readUint16();\n      // adts的同步字节，12位\n      if (next >>> 4 !== 0xfff) {\n        throw new Error('aac ES parse Error');\n      }\n      const fq = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n      ret.id = (next >>> 3 & 0x01) === 0 ? 'MPEG-4' : 'MPEG-2';\n      ret.layer = next >>> 1 & 0x03;\n      ret.absent = next & 0x01;\n      next = buffer.readUint16();\n      ret.audioObjectType = (next >>> 14 & 0x03) + 1;\n      ret.profile = ret.audioObjectType - 1;\n      ret.frequencyIndex = next >>> 10 & 0x0f;\n      ret.frequence = fq[ret.frequencyIndex];\n      ret.channel = next >>> 6 & 0x07;\n      ret.frameLength = (next & 0x03) << 11 | (buffer.readUint16() >>> 5);\n      TsDemuxer.getAudioConfig(ret);\n      buffer.skip(1);\n      ret.buffer = buffer;\n    } else {\n      throw new Error(`ES ${type} is not supported`);\n    }\n\n    return ret;\n  }\n\n  static TSDT (stream, ts, frags) {\n    // TODO\n    ts.payload = {};\n  }\n\n  static CAT (stream, ts, frags) {\n    let ret = {}\n    ret.tableID = stream.readUint8();\n    let next = stream.readUint16();\n    ret.sectionIndicator = next >>> 7;\n    ret.sectionLength = next & 0x0fff;\n    stream.skip(2);\n    next = stream.readUint8();\n    ret.version = next >>> 3;\n    ret.currentNextIndicator = next & 0x01;\n    ret.sectionNumber = stream.readUint8();\n    ret.lastSectionNumber = stream.readUint8();\n    let N = (this.sectionLength - 9) / 4;\n    let list = [];\n    for (let i = 0; i < N; i++) {\n      list.push({});\n    }\n    ret.crc32 = stream.readUint32();\n    ts.payload = ret;\n  }\n\n  static getAudioConfig (ret) {\n    let userAgent = navigator.userAgent.toLowerCase()\n    let config;\n    let extensionSampleIndex;\n    if (/firefox/i.test(userAgent)) {\n      if (ret.frequencyIndex >= 6) {\n        ret.audioObjectType = 5;\n        config = new Array(4);\n        extensionSampleIndex = ret.frequencyIndex - 3;\n      } else {\n        ret.audioObjectType = 2;\n        config = new Array(2);\n        extensionSampleIndex = ret.frequencyIndex;\n      }\n    } else if (userAgent.indexOf('android') !== -1) {\n      ret.audioObjectType = 2;\n      config = new Array(2);\n      extensionSampleIndex = ret.frequencyIndex;\n    } else {\n      ret.audioObjectType = 5;\n      config = new Array(4);\n      if (ret.frequencyIndex >= 6) {\n        extensionSampleIndex = ret.frequencyIndex - 3;\n      } else {\n        if (ret.channel === 1) {\n          ret.audioObjectType = 2;\n          config = new Array(2);\n        }\n        extensionSampleIndex = ret.frequencyIndex;\n      }\n    }\n\n    config[0] = ret.audioObjectType << 3;\n    config[0] |= (ret.frequencyIndex & 0x0e) >> 1;\n    config[1] = (ret.frequencyIndex & 0x01) << 7;\n    config[1] |= ret.channel << 3;\n    if (ret.audioObjectType === 5) {\n      config[1] |= (extensionSampleIndex & 0x0e) >> 1;\n      config[2] = (extensionSampleIndex & 0x01) << 7;\n      config[2] |= 2 << 2;\n      config[3] = 0;\n    }\n    ret.audioConfig = config;\n  }\n\n  get inputBuffer () {\n    return this._context.getInstance(this.configs.inputbuffer);\n  }\n\n  get _tracks () {\n    return this._context.getInstance('TRACKS');\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (TsDemuxer);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-demux/src/hls/demuxer/ts.js?");

/***/ }),

/***/ "../xgplayer-demux/src/hls/playlist.js":
/*!*********************************************!*\
  !*** ../xgplayer-demux/src/hls/playlist.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Playlist {\n  constructor (configs) {\n    this._baseURL = '';\n    this._list = {};\n    this._ts = {};\n    this.version = 0;\n    this.sequence = -1;\n    this.targetduration = 0;\n    this.duration = 0;\n    this.fragLength = 0;\n    this._lastget = undefined;\n    this._audoclear = configs.autoclear || false;\n  }\n\n  get list () {\n    return this._list;\n  }\n\n  set baseURL (baseURL) {\n    if (this.baseURL !== baseURL) {\n      this.clear();\n      this._baseURL = baseURL;\n    }\n  }\n\n  get baseURL () {\n    return this._baseURL;\n  }\n\n  push (ts, duration, discontinue) {\n    if (!this._ts[ts]) {\n      this._ts[ts] = {duration: duration, \n        downloaded: false, \n        downloading: false, \n        start: this.duration, \n        discontinue: discontinue ? true: false\n      };\n      this._list[this.duration] = ts;\n      this.duration += duration;\n      this.fragLength += 1;\n    }\n  }\n\n  deleteFrag (url) {\n    if (this._ts[url]) {\n      if (this._ts[url].start > this._lastget.time) {\n        this._lastget = {\n          duration: this._ts[url].duration,\n          time: this._ts[url].start,\n          downloaded: false,\n          downloading: false,\n          url: url\n        }\n      }\n      delete this._list[this._ts[url].start];\n      delete this._ts[url];\n      this.fragLength -= 1;\n    }\n  }\n\n  pushM3U8 (data, deletepre) {\n    // 常规信息替换\n    if (!data) {\n      throw new Error(`No m3u8 data received.`);\n      return;\n    }\n    this.version = data.version;\n    this.targetduration = data.targetduration;\n    if(data.encrypt && !this.encrypt) {\n      this.encrypt = data.encrypt;\n    }\n    // 新分片信息\n    if (data.sequence > this.sequence) {\n      this.sequence = data.sequence;\n      let newfraglist = []\n      for (let i = 0; i < data.frags.length; i++) {\n        let frag = data.frags[i];\n        if (!this._ts[frag.url]) {\n          newfraglist.push(frag.url)\n          this.push(frag.url, frag.duration, frag.discontinue);\n        }\n      }\n\n      if(newfraglist.length < 1) {\n        throw new Error(`Can not read ts file list.`);\n      }\n      \n      if (deletepre) {\n        let tslist = this.getTsList();\n        for (let i = 0; i < tslist.length; i++) {\n          if (newfraglist.indexOf(tslist[i]) < 0) {\n            this.deleteFrag(tslist[i]);\n          }\n        }\n      }\n    } else {\n      throw new Error(`Old m3u8 file received, ${data.sequence}`);\n    }\n  }\n\n  getTsList () {\n    return Object.keys(this._ts);\n  }\n\n  downloaded (tsname, isloaded) {\n    let ts = this._ts[tsname];\n    if (ts) {\n      ts.downloaded = isloaded\n    }\n  }\n\n  downloading (tsname, loading) {\n    let ts = this._ts[tsname];\n    if (ts) {\n      ts.downloading = loading\n    }\n  }\n\n  getTsByName (name) {\n    return this._ts[name];\n  }\n\n  getTs (time) {\n    let timelist = Object.keys(this._list);\n    let ts;\n\n    if (time === undefined) {\n      if (this._lastget) {\n        time = this._lastget.time + this._lastget.duration;\n      } else {\n        time = 0;\n      }\n    }\n\n    if (timelist.length < 1 || time >= this.duration) {\n      return undefined;\n    }\n    timelist.sort((a, b) => {\n      return parseFloat(a) - parseFloat(b)\n    });\n    for (let i = 0; i < timelist.length; i++) {\n      if (time >= parseInt(timelist[i])) {\n        let url = this._list[timelist[i]];\n        let downloaded = this._ts[url].downloaded;\n        let downloading = this._ts[url].downloading;\n        ts = {url, downloaded, downloading, time: parseInt(timelist[i]), duration: parseInt(this._ts[url].duration)};\n        if (this.autoclear) {\n          delete this._ts[this._lastget.url];\n          delete this._list[this._lastget.time];\n        }\n        this._lastget = ts;\n      } else {\n        break;\n      }\n    }\n    return ts;\n  }\n\n  clear () {\n    this._baseURL = '';\n    this._list = {};\n    this._ts = {};\n    this.version = 0;\n    this.sequence = -1;\n    this.targetduration = 0;\n    this.duration = 0;\n  }\n\n  clearDownloaded () {\n    for (let i = 0, l = Object.keys(this._ts).length; i < l; i++) {\n      let ts = this._ts[Object.keys(this._ts)[i]];\n      ts.downloaded = false;\n      ts.downloading = false;\n    }\n  }\n\n  destroy () {\n    this._baseURL = '';\n    this._list = {};\n    this._ts = {};\n    this.version = 0;\n    this.sequence = -1;\n    this.targetduration = 0;\n    this.duration = 0;\n    this.fragLength = 0;\n    this._lastget = undefined;\n    this._audoclear = false;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Playlist);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-demux/src/hls/playlist.js?");

/***/ }),

/***/ "../xgplayer-loader/index.js":
/*!***********************************!*\
  !*** ../xgplayer-loader/index.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  FetchLoader: __webpack_require__(/*! ./src/fetch-loader */ \"../xgplayer-loader/src/fetch-loader.js\").default\n};\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-loader/index.js?");

/***/ }),

/***/ "../xgplayer-loader/src/fetch-loader.js":
/*!**********************************************!*\
  !*** ../xgplayer-loader/src/fetch-loader.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xgplayer-utils */ \"../xgplayer-utils/index.js\");\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst LOADER_EVENTS = xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"EVENTS\"].LOADER_EVENTS;\nconst READ_STREAM = 0;\nconst READ_TEXT = 1;\nconst READ_JSON = 2;\nconst READ_BUFFER = 3;\nclass FetchLoader {\n  constructor (configs) {\n    this.configs = Object.assign({}, configs);\n    this.url = null\n    this.status = 0\n    this.error = null\n    this._reader = null;\n    this._canceled = false;\n    this._destroyed = false;\n    this.readtype = this.configs.readtype;\n    this.buffer = this.configs.buffer || 'LOADER_BUFFER';\n    this._loaderTaskNo = 0;\n  }\n\n  init () {\n    this.on(LOADER_EVENTS.LADER_START, this.load.bind(this))\n  }\n\n  static get type () {\n    return 'loader'\n  }\n\n  load (url, opts) {\n    let _this = this;\n    this.url = url;\n    this._canceled = false;\n\n    // TODO: Add Ranges\n    let params = this.getParams(opts)\n    _this.loading = true\n    return fetch(this.url, params).then(function (response) {\n      if (response.ok) {\n        _this.status = response.status\n        return _this._onFetchResponse(response);\n      }\n      _this.loading = false;\n      _this.emit(LOADER_EVENTS.LOADER_ERROR, _this.TAG, new Error(`invalid response.`));\n    }).catch(function (error)  {\n      _this.loading = false;\n      _this.emit(LOADER_EVENTS.LOADER_ERROR, _this.TAG, error);\n      throw new Error(error.message)\n    })\n  }\n\n  _onFetchResponse (response) {\n    let _this = this;\n    let buffer = this._context.getInstance(this.buffer);\n    this._loaderTaskNo++;\n    let taskno = this._loaderTaskNo;\n    if (response.ok === true) {\n      switch (this.readtype) {\n        case READ_JSON:\n          response.json().then((data) => {\n            _this.loading = false\n            if (!_this._canceled && !_this._destroyed) {\n              if (buffer) {\n                buffer.push(data);\n                _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n              } else {\n                _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n              }\n            }\n          });\n          break;\n        case READ_TEXT:\n          response.text().then((data) => {\n            _this.loading = false\n            if (!_this._canceled && !_this._destroyed) {\n              if (buffer) {\n                buffer.push(data);\n                _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n              } else {\n                _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n              }\n            }\n          });\n          break;\n        case READ_BUFFER:\n          response.arrayBuffer().then((data) => {\n            _this.loading = false\n            if (!_this._canceled && !_this._destroyed) {\n              if (buffer) {\n                buffer.push(new Uint8Array(data));\n                _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n              } else {\n                _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n              }\n            }\n          });\n          break;\n        case READ_STREAM:\n        default:\n          return this._onReader(response.body.getReader(), taskno);\n      }\n    }\n  }\n\n  _onReader (reader, taskno) {\n    let buffer = this._context.getInstance(this.buffer);\n    if ((!buffer && this._reader) || this._destroyed) {\n      try {\n        this._reader.cancel()\n      } catch (e) {\n        // DO NOTHING\n      }\n    }\n\n    this._reader = reader\n    if (this.loading === false) {\n      return\n    }\n\n    let _this = this\n    // reader read function returns a Promise. get data when callback and has value.done when disconnected.\n    // read方法返回一个Promise. 回调中可以获取到数据。当value.done存在时，说明链接断开。\n    this._reader && this._reader.read().then(function (val) {\n      if (val.done) {\n        // TODO: 完成处理\n        _this.loading = false\n        _this.status = 0;\n        _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer)\n        return\n      }\n\n      if (_this._canceled || _this._destroyed) {\n        if  (_this._reader) {\n          try {\n            _this._reader.cancel()\n          } catch (e) {\n            // DO NOTHING\n          }\n        }\n\n        return;\n      }\n      buffer.push(val.value)\n      _this.emit(LOADER_EVENTS.LOADER_DATALOADED, buffer)\n      return _this._onReader(reader, taskno)\n    }).catch((error) => {\n      _this.loading = false;\n      _this.emit(LOADER_EVENTS.LOADER_ERROR, _this.TAG, error);\n    })\n  }\n\n  getParams (opts) {\n    let options = Object.assign({}, opts)\n    let headers = new Headers()\n\n    let params = {\n      method: 'GET',\n      headers: headers,\n      mode: 'cors',\n      cache: 'default'\n    }\n\n    // add custmor headers\n    // 添加自定义头\n    if (typeof this.configs.headers === 'object') {\n      let configHeaders = this.configs.headers\n      for (let key in configHeaders) {\n        if (configHeaders.hasOwnProperty(key)) {\n          headers.append(key, configHeaders[key])\n        }\n      }\n    }\n\n    if (typeof options.headers === 'object') {\n      let optHeaders = options.headers\n      for (let key in optHeaders) {\n        if (optHeaders.hasOwnProperty(key)) {\n          headers.append(key, optHeaders[key])\n        }\n      }\n    }\n\n    if (options.cors === false) {\n      params.mode = 'same-origin'\n    }\n\n    // withCredentials is disabled by default\n    // withCredentials 在默认情况下不被使用。\n    if (options.withCredentials) {\n      params.credentials = 'include'\n    }\n\n    // TODO: Add ranges;\n    return params;\n  }\n\n  cancel () {\n    if (this._reader) {\n      try {\n        this._reader.cancel()\n      } catch (e) {\n        // 防止failed: 200错误被打印到控制台上\n      }\n      this._reader = null\n      this.loading = false\n      this._canceled = true;\n    }\n  }\n\n  destroy () {\n    this._destroyed = true\n    this.cancel();\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (FetchLoader);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-loader/src/fetch-loader.js?");

/***/ }),

/***/ "../xgplayer-remux/index.js":
/*!**********************************!*\
  !*** ../xgplayer-remux/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  Mp4Remuxer: __webpack_require__(/*! ./src/mp4 */ \"../xgplayer-remux/src/mp4/index.js\").default\n};\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-remux/index.js?");

/***/ }),

/***/ "../xgplayer-remux/src/mp4/fmp4.js":
/*!*****************************************!*\
  !*** ../xgplayer-remux/src/mp4/fmp4.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xgplayer-utils */ \"../xgplayer-utils/index.js\");\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__);\n\n\n// const UINT32_MAX = Math.pow(2, 32) - 1;\nclass Fmp4 {\n  static size (value) {\n    return xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"].writeUint32(value)\n  }\n  static initBox (size, name, ...content) {\n    const buffer = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"]()\n    buffer.write(Fmp4.size(size), Fmp4.type(name), ...content)\n    return buffer.buffer\n  }\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n  static ftyp () {\n    return Fmp4.initBox(24, 'ftyp', new Uint8Array([\n      0x69, 0x73, 0x6F, 0x6D, // isom,\n      0x0, 0x0, 0x00, 0x01, // minor_version: 0x01\n      0x69, 0x73, 0x6F, 0x6D, // isom\n      0x61, 0x76, 0x63, 0x31 // avc1\n    ]))\n  }\n  static moov ({ type, meta }) {\n    let size = 8\n    let mvhd = Fmp4.mvhd(meta.duration, meta.timescale)\n    let trak\n\n    if (type === 'video') {\n      trak = Fmp4.videoTrak(meta)\n    } else {\n      trak = Fmp4.audioTrak(meta)\n    }\n\n    let mvex = Fmp4.mvex(meta.duration, meta.timescale || 1000, meta.id);\n    [mvhd, trak, mvex].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'moov', mvhd, trak, mvex)\n  }\n  static mvhd (duration, timescale = 1000) {\n    // duration *= timescale;\n    let bytes = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00, // version(0) + flags     1位的box版本+3位flags   box版本，0或1，一般为0。（以下字节数均按version=0）\n      0x00, 0x00, 0x00, 0x00, // creation_time    创建时间  （相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification_time   修改时间\n\n      /**\n             * timescale: 4 bytes文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n             */\n      (timescale >>> 24) & 0xFF,\n      (timescale >>> 16) & 0xFF,\n      (timescale >>> 8) & 0xFF,\n      (timescale) & 0xFF,\n\n      /**\n             * duration: 4 bytes该track的时间长度，用duration和time scale值可以计算track时长，比如audio track的time scale = 8000,\n             * duration = 560128，时长为70.016，video track的time scale = 600, duration = 42000，时长为70\n             */\n      (duration >>> 24) & 0xFF,\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x00, 0x01, 0x00, 0x00, // Preferred rate: 1.0   推荐播放速率，高16位和低16位分别为小数点整数部分和小数部分，即[16.16] 格式，该值为1.0（0x00010000）表示正常前向播放\n      /**\n             * PreferredVolume(1.0, 2bytes) + reserved(2bytes)\n             * 与rate类似，[8.8] 格式，1.0（0x0100）表示最大音量\n             */\n      0x01, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, //  reserved: 4 + 4 bytes保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // 视频变换矩阵   线性代数\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      0x00, 0x00, 0x00, 0x00, // ----begin pre_defined 6 * 4 bytes----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre-defined 保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // ----end pre_defined 6 * 4 bytes----\n      0xFF, 0xFF, 0xFF, 0xFF // next_track_ID 下一个track使用的id号\n    ])\n    return Fmp4.initBox(8 + bytes.length, 'mvhd', new Uint8Array(bytes))\n  }\n  static videoTrak (data) {\n    let size = 8\n\n    let tkhd = Fmp4.tkhd({\n      id: 1,\n      duration: data.duration,\n      timescale: data.timescale || 1000,\n      width: data.presentWidth,\n      height: data.presentHeight,\n      type: 'video'\n    })\n    let mdia = Fmp4.mdia({\n      type: 'video',\n      timescale: data.timescale || 1000,\n      duration: data.duration,\n      avcc: data.avcc,\n      parRatio: data.parRatio,\n      width: data.presentWidth,\n      height: data.presentHeight\n    });\n    [tkhd, mdia].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'trak', tkhd, mdia)\n  }\n  static audioTrak (data) {\n    let size = 8\n    let tkhd = Fmp4.tkhd({\n      id: 2,\n      duration: data.duration,\n      timescale: data.timescale || 1000,\n      width: 0,\n      height: 0,\n      type: 'audio'\n    })\n    let mdia = Fmp4.mdia({\n      type: 'audio',\n      timescale: data.timescale || 1000,\n      duration: data.duration,\n      channelCount: data.channelCount,\n      samplerate: data.sampleRate,\n      config: data.config\n    });\n    [tkhd, mdia].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'trak', tkhd, mdia)\n  }\n  static tkhd (data) {\n    let id = data.id\n    let duration = data.duration\n    let width = data.width\n    let height = data.height\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x07, // version(0) + flags 1位版本 box版本，0或1，一般为0。（以下字节数均按version=0）按位或操作结果值，预定义如下：\n      // 0x000001 track_enabled，否则该track不被播放；\n      // 0x000002 track_in_movie，表示该track在播放中被引用；\n      // 0x000004 track_in_preview，表示该track在预览时被引用。\n      // 一般该值为7，1+2+4 如果一个媒体所有track均未设置track_in_movie和track_in_preview，将被理解为所有track均设置了这两项；对于hint track，该值为0\n      // hint track 这个特殊的track并不包含媒体数据，而是包含了一些将其他数据track打包成流媒体的指示信息。\n      0x00, 0x00, 0x00, 0x00, // creation_time创建时间（相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification time 修改时间\n      (id >>> 24) & 0xFF, // track_ID: 4 bytes id号，不能重复且不能为0\n      (id >>> 16) & 0xFF,\n      (id >>> 8) & 0xFF,\n      (id) & 0xFF,\n      0x00, 0x00, 0x00, 0x00, // reserved: 4 bytes    保留位\n      (duration >>> 24) & 0xFF, // duration: 4 bytes track的时间长度\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes    保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // layer(2bytes) + alternate_group(2bytes)  视频层，默认为0，值小的在上层.track分组信息，默认为0表示该track未与其他track有群组关系\n      0x00, 0x00, 0x00, 0x00, // volume(2bytes) + reserved(2bytes)    [8.8] 格式，如果为音频track，1.0（0x0100）表示最大音量；否则为0   +保留位\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00, // 视频变换矩阵\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      (width >>> 8) & 0xFF, // //宽度\n      (width) & 0xFF,\n      0x00, 0x00,\n      (height >>> 8) & 0xFF, // 高度\n      (height) & 0xFF,\n      0x00, 0x00\n    ])\n    return Fmp4.initBox(8 + content.byteLength, 'tkhd', content)\n  }\n  static edts (data) {\n    let buffer = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"]()\n    let duration = data.duration\n    let mediaTime = data.mediaTime\n    buffer.write(Fmp4.size(36), Fmp4.type('edts'))\n    // elst\n    buffer.write(Fmp4.size(28), Fmp4.type('elst'))\n    buffer.write(new Uint8Array([\n      0x00, 0x00, 0x00, 0x01, // entry count\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      (mediaTime >> 24) & 0xff, (mediaTime >> 16) & 0xff, (mediaTime >> 8) & 0xff, mediaTime & 0xff,\n      0x00, 0x00, 0x00, 0x01 // media rate\n    ]))\n    return buffer.buffer\n  }\n  static mdia (data) {\n    let size = 8\n    let mdhd = Fmp4.mdhd(data.timescale, data.duration)\n    let hdlr = Fmp4.hdlr(data.type)\n    let minf = Fmp4.minf(data);\n    [mdhd, hdlr, minf].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'mdia', mdhd, hdlr, minf)\n  }\n  static mdhd (timescale = 1000, duration) {\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00, // creation_time    创建时间\n      0x00, 0x00, 0x00, 0x00, // modification_time修改时间\n      (timescale >>> 24) & 0xFF, // timescale: 4 bytes    文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n      (timescale >>> 16) & 0xFF,\n      (timescale >>> 8) & 0xFF,\n      (timescale) & 0xFF,\n      (duration >>> 24) & 0xFF, // duration: 4 bytes  track的时间长度\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x55, 0xC4, // language: und (undetermined) 媒体语言码。最高位为0，后面15位为3个字符（见ISO 639-2/T标准中定义）\n      0x00, 0x00 // pre_defined = 0\n    ])\n    return Fmp4.initBox(12 + content.byteLength, 'mdhd', Fmp4.extension(0, 0), content)\n  }\n  static hdlr (type) {\n    let value = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65,\n      0x6f, 0x48, 0x61, 0x6e,\n      0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]\n    if (type === 'audio') {\n      value.splice(8, 4, ...[0x73, 0x6f, 0x75, 0x6e])\n      value.splice(24, 13, ...[0x53, 0x6f, 0x75, 0x6e,\n        0x64, 0x48, 0x61, 0x6e,\n        0x64, 0x6c, 0x65, 0x72, 0x00])\n    }\n    return Fmp4.initBox(8 + value.length, 'hdlr', new Uint8Array(value))\n  }\n  static minf (data) {\n    let size = 8\n    let vmhd = data.type === 'video' ? Fmp4.vmhd() : Fmp4.smhd()\n    let dinf = Fmp4.dinf()\n    let stbl = Fmp4.stbl(data);\n    [vmhd, dinf, stbl].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'minf', vmhd, dinf, stbl)\n  }\n  static vmhd () {\n    return Fmp4.initBox(20, 'vmhd', new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00,\n      0x00, 0x00,\n      0x00, 0x00 // opcolor\n    ]))\n  }\n  static smhd () {\n    return Fmp4.initBox(16, 'smhd', new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n    ]))\n  }\n  static dinf () {\n    let buffer = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"]()\n    let dref = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n    ]\n    buffer.write(Fmp4.size(36), Fmp4.type('dinf'), Fmp4.size(28), Fmp4.type('dref'), new Uint8Array(dref))\n    return buffer.buffer\n  }\n  static stbl (data) {\n    let size = 8\n    let stsd = Fmp4.stsd(data)\n    let stts = Fmp4.stts()\n    let stsc = Fmp4.stsc()\n    let stsz = Fmp4.stsz()\n    let stco = Fmp4.stco();\n    [stsd, stts, stsc, stsz, stco].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'stbl', stsd, stts, stsc, stsz, stco)\n  }\n  static stsd (data) {\n    let content\n    if (data.type === 'audio') {\n      // if (!data.isAAC && data.codec === 'mp4') {\n      //     content = FMP4.mp3(data);\n      // } else {\n      //\n      // }\n      // 支持mp4a\n      content = Fmp4.mp4a(data)\n    } else {\n      content = Fmp4.avc1(data)\n    }\n    return Fmp4.initBox(16 + content.byteLength, 'stsd', Fmp4.extension(0, 0), new Uint8Array([0x00, 0x00, 0x00, 0x01]), content)\n  }\n  static mp4a (data) {\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, data.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (data.samplerate >> 8) & 0xff,\n      data.samplerate & 0xff, //\n      0x00, 0x00\n    ])\n    let esds = Fmp4.esds(data.config)\n    return Fmp4.initBox(8 + content.byteLength + esds.byteLength, 'mp4a', content, esds)\n  }\n  static esds (config = [43, 146, 8, 0]) {\n    const configlen = config.length\n    let buffer = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"]()\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17 + configlen, // length\n      0x00, 0x01, // es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f + configlen, // length\n      0x40, // codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n    ].concat([configlen]).concat(config).concat([0x06, 0x01, 0x02]))\n    buffer.write(Fmp4.size(8 + content.byteLength), Fmp4.type('esds'), content)\n    return buffer.buffer\n  }\n  static avc1 (data) {\n    let buffer = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"]()\n    let size = 40// 8(avc1)+8(avcc)+8(btrt)+16(pasp)\n    // let sps = data.sps\n    // let pps = data.pps\n    let width = data.width\n    let height = data.height\n    let hSpacing = data.parRatio.height\n    let vSpacing = data.parRatio.width\n    // let avccBuffer = new Buffer()\n    // avccBuffer.write(new Uint8Array([\n    //   0x01, // version\n    //   sps[1], // profile\n    //   sps[2], // profile compatible\n    //   sps[3], // level\n    //   0xfc | 3,\n    //   0xE0 | 1 // 目前只处理一个sps\n    // ].concat([sps.length >>> 8 & 0xff, sps.length & 0xff])))\n    // avccBuffer.write(sps, new Uint8Array([1, pps.length >>> 8 & 0xff, pps.length & 0xff]), pps)\n\n    let avcc = data.avcc\n    let avc1 = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1\n    let btrt = new Uint8Array([\n      0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n    ])\n    let pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n\n    buffer.write(\n      Fmp4.size(size + avc1.byteLength + avcc.byteLength + btrt.byteLength), Fmp4.type('avc1'), avc1,\n      Fmp4.size(8 + avcc.byteLength), Fmp4.type('avcC'), avcc,\n      Fmp4.size(20), Fmp4.type('btrt'), btrt,\n      Fmp4.size(16), Fmp4.type('pasp'), pasp\n    )\n    return buffer.buffer\n  }\n  static stts () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stts', content)\n  }\n  static stsc () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stsc', content)\n  }\n  static stco () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stco', content)\n  }\n  static stsz () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n    ])\n    return Fmp4.initBox(20, 'stsz', content)\n  }\n  static mvex (duration, timescale = 1000, trackID) {\n    let buffer = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"]()\n    let mehd = xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"].writeUint32(duration)\n    buffer.write(Fmp4.size(56), Fmp4.type('mvex'), Fmp4.size(16), Fmp4.type('mehd'), Fmp4.extension(0, 0), mehd, Fmp4.trex(trackID))\n    return buffer.buffer\n  }\n  static trex (id) {\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ])\n    return Fmp4.initBox(8 + content.byteLength, 'trex', content)\n  }\n  static moof (data) {\n    let size = 8\n    let mfhd = Fmp4.mfhd()\n    let traf = Fmp4.traf(data);\n    [mfhd, traf].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'moof', mfhd, traf)\n  }\n  static mfhd () {\n    let content = xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"].writeUint32(Fmp4.sequence)\n    Fmp4.sequence += 1\n    return Fmp4.initBox(16, 'mfhd', Fmp4.extension(0, 0), content)\n  }\n  static traf (data) {\n    let size = 8\n    let tfhd = Fmp4.tfhd(data.id)\n    let tfdt = Fmp4.tfdt(data.time)\n    let sdtp = Fmp4.sdtp(data)\n    let trun = Fmp4.trun(data, sdtp.byteLength);\n\n    [tfhd, tfdt, trun, sdtp].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'traf', tfhd, tfdt, trun, sdtp)\n  }\n  static tfhd (id) {\n    let content = xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"].writeUint32(id)\n    return Fmp4.initBox(16, 'tfhd', Fmp4.extension(0, 0), content)\n  }\n  static tfdt (time) {\n    // let upper = Math.floor(time / (UINT32_MAX + 1)),\n    //     lower = Math.floor(time % (UINT32_MAX + 1));\n    return Fmp4.initBox(16, 'tfdt', Fmp4.extension(0, 0), xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"].writeUint32(time))\n  }\n  static trun (data, sdtpLength) {\n    // let id = data.id;\n    // let ceil = id === 1 ? 16 : 12;\n    let buffer = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"]()\n    let sampleCount = xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"].writeUint32(data.samples.length)\n    // mdat-header 8\n    // moof-header 8\n    // mfhd 16\n    // traf-header 8\n    // thhd 16\n    // tfdt 20\n    // trun-header 12\n    // sampleCount 4\n    // data-offset 4\n    // samples.length\n    let offset = xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"].writeUint32(8 + 8 + 16 + 8 + 16 + 16 + 12 + 4 + 4 + 16 * data.samples.length + sdtpLength)\n    buffer.write(Fmp4.size(20 + 16 * data.samples.length), Fmp4.type('trun'), new Uint8Array([0x00, 0x00, 0x0F, 0x01]), sampleCount, offset)\n\n    // let size = buffer.buffer.byteLength\n    // let writeOffset = 0\n    // data.samples.forEach(() => {\n    //   size += 16\n    // })\n    //\n    // let trunBox = new Uint8Array(size)\n\n    // trunBox.set(buffer.buffer, 0)\n\n    data.samples.forEach((item) => {\n      const flags = item.flags\n      // console.log(item.type, item.dts, item.duration)\n\n      buffer.write(new Uint8Array([\n        (item.duration >>> 24) & 0xFF, // sample_duration\n        (item.duration >>> 16) & 0xFF,\n        (item.duration >>> 8) & 0xFF,\n        (item.duration) & 0xFF,\n        (item.size >>> 24) & 0xFF, // sample_size\n        (item.size >>> 16) & 0xFF,\n        (item.size >>> 8) & 0xFF,\n        (item.size) & 0xFF,\n        (flags.isLeading << 2) | flags.dependsOn, // sample_flags\n        (flags.isDependedOn << 6) | (flags.hasRedundancy << 4) | flags.isNonSync,\n        0x00, 0x00, // sample_degradation_priority\n        (item.cts >>> 24) & 0xFF, // sample_composition_time_offset\n        (item.cts >>> 16) & 0xFF,\n        (item.cts >>> 8) & 0xFF,\n        (item.cts) & 0xFF\n      ]))\n      // writeOffset += 16\n      // buffer.write(Buffer.writeUint32(0));\n    })\n    return buffer.buffer\n  }\n  static sdtp (data) {\n    let buffer = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"]()\n    buffer.write(Fmp4.size(12 + data.samples.length), Fmp4.type('sdtp'), Fmp4.extension(0, 0))\n    data.samples.forEach(item => {\n      const flags = item.flags\n      const num = (flags.isLeading << 6) | // is_leading: 2 (bit)\n        (flags.dependsOn << 4) | // sample_depends_on\n        (flags.isDependedOn << 2) | // sample_is_depended_on\n        (flags.hasRedundancy)// sample_has_redundancy\n\n      buffer.write(new Uint8Array([num]))\n    })\n    return buffer.buffer\n  }\n  static mdat (data) {\n    let buffer = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"]()\n    let size = 8\n    data.samples.forEach(item => {\n      size += item.size\n    })\n    buffer.write(Fmp4.size(size), Fmp4.type('mdat'))\n    let mdatBox = new Uint8Array(size)\n    let offset = 0\n    mdatBox.set(buffer.buffer, offset)\n    offset += 8\n    data.samples.forEach(item => {\n      item.buffer.forEach((unit) => {\n        mdatBox.set(unit, offset)\n        offset += unit.byteLength\n        // buffer.write(unit.data);\n      })\n    })\n    return mdatBox\n  }\n}\nFmp4.type = (name) => {\n  return new Uint8Array([name.charCodeAt(0), name.charCodeAt(1), name.charCodeAt(2), name.charCodeAt(3)])\n}\nFmp4.sequence = 1\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Fmp4);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-remux/src/mp4/fmp4.js?");

/***/ }),

/***/ "../xgplayer-remux/src/mp4/index.js":
/*!******************************************!*\
  !*** ../xgplayer-remux/src/mp4/index.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Mp4Remuxer; });\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xgplayer-utils */ \"../xgplayer-utils/index.js\");\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _fmp4__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fmp4 */ \"../xgplayer-remux/src/mp4/fmp4.js\");\n\n\n\nconst REMUX_EVENTS = xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"EVENTS\"].REMUX_EVENTS\n\nclass Mp4Remuxer {\n  constructor () {\n    this._dtsBase = 0\n    this._isDtsBaseInited = false\n\n    this.isFirstVideo = true\n    this.isFirstAudio = true\n\n    this.videoAllDuration = 0\n    this.audioAllDuration = 0\n  }\n\n  init () {\n    this.on(REMUX_EVENTS.REMUX_MEDIA, this.remux.bind(this))\n    this.on(REMUX_EVENTS.REMUX_METADATA, this.onMetaDataReady.bind(this))\n    this.on(REMUX_EVENTS.DETECT_CHANGE_STREAM, this.resetDtsBase.bind(this))\n  }\n\n  destroy () {\n    this._dtsBase = -1\n    this._dtsBaseInited = false\n  }\n\n  reset () {\n    this._dtsBase = 0\n    this._isDtsBaseInited = false\n  }\n\n  remux () {\n    const { audioTrack, videoTrack } = this._context.getInstance('TRACKS')\n    !this._isDtsBaseInited && this.calcDtsBase(audioTrack, videoTrack)\n\n    this._remuxVideo(videoTrack)\n    this._remuxAudio(audioTrack)\n  }\n\n  resetDtsBase () {\n    // for hls 中途切换 meta后seek\n    this._dtsBase = 0\n    this._dtsBaseInited = false\n  }\n\n  seek () {\n\n  }\n\n  onMetaDataReady (type) {\n    let track\n\n    if (type === 'audio') {\n      const { audioTrack } = this._context.getInstance('TRACKS')\n      track = audioTrack;\n    } else {\n      const { videoTrack } = this._context.getInstance('TRACKS')\n      track = videoTrack;\n    }\n\n    let presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n    let source = presourcebuffer.getSource(type);\n    if (!source) {\n      source = presourcebuffer.createSource(type);\n    }\n\n    source.mimetype = track.meta.codec;\n    source.init = this.remuxInitSegment(type, track.meta);\n    // source.inited = false;\n\n    // this.resetDtsBase()\n    this.emit(REMUX_EVENTS.INIT_SEGMENT, type)\n  }\n\n  remuxInitSegment (type, meta) {\n    let initSegment = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"]()\n    let ftyp = _fmp4__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ftyp()\n    let moov = _fmp4__WEBPACK_IMPORTED_MODULE_1__[\"default\"].moov({ type, meta: meta })\n\n    initSegment.write(ftyp, moov)\n    return initSegment;\n  }\n\n  calcDtsBase (audioTrack, videoTrack) {\n    if (!audioTrack.samples.length && !videoTrack.samples.length) {\n      return;\n    }\n\n    let audioBase = Infinity\n    let videoBase = Infinity\n\n    if (audioTrack.samples && audioTrack.samples.length) {\n      audioBase = audioTrack.samples[0].dts\n    }\n    if (videoTrack.samples && videoTrack.samples.length) {\n      videoBase = videoTrack.samples[0].dts\n    }\n\n    this._dtsBase = Math.min(audioBase, videoBase)\n    this._isDtsBaseInited = true\n  }\n\n  _remuxVideo (videoTrack) {\n    const track = videoTrack\n\n    if (!videoTrack.samples || !videoTrack.samples.length) {\n      return\n    }\n\n    let {samples} = track\n    let firstDts = -1\n\n    let initSegment = null\n    const mp4Samples = []\n    const mdatBox = {\n      samples: []\n    }\n\n    while (samples.length) {\n      const avcSample = samples.shift()\n\n      const { isKeyframe, options } = avcSample\n      if (!this.isFirstAudio && options && options.meta) {\n        initSegment = this.remuxInitSegment('video', options.meta)\n        options.meta = null\n        samples.unshift(avcSample)\n        if (!options.isContinue) {\n          this.resetDtsBase()\n        }\n        break;\n      }\n\n      let dts = avcSample.dts - this._dtsBase\n\n      if (firstDts === -1) {\n        firstDts = dts\n      }\n\n      let cts\n      let pts\n      if (avcSample.pts !== undefined) {\n        pts = avcSample.pts - this._dtsBase\n        cts = pts - dts\n      }\n      if (avcSample.cts !== undefined) {\n        pts = avcSample.cts + dts\n        cts = avcSample.cts\n      }\n\n      let mdatSample = {\n        buffer: [],\n        size: 0\n      }\n      mdatBox.samples.push(mdatSample)\n      mdatSample.buffer.push(avcSample.data)\n      mdatSample.size += avcSample.data.byteLength\n\n      let sampleDuration = 0\n      if (samples.length >= 1) {\n        const nextDts = samples[0].dts - this._dtsBase\n        sampleDuration = nextDts - dts\n      } else {\n        if (mp4Samples.length >= 1) { // lastest sample, use second last duration\n          sampleDuration = mp4Samples[mp4Samples.length - 1].duration\n        } else { // the only one sample, use reference duration\n          sampleDuration = this.videoMeta.refSampleDuration\n        }\n      }\n      this.videoAllDuration += sampleDuration\n      // console.log(`dts ${dts}`, `pts ${pts}`, `cts: ${cts}`, `duration: ${sampleDuration}`, avcSample)\n      mp4Samples.push({\n        dts,\n        cts,\n        pts,\n        data: avcSample.data,\n        size: avcSample.data.byteLength,\n        isKeyframe,\n        duration: sampleDuration,\n        flags: {\n          isLeading: 0,\n          dependsOn: isKeyframe ? 2 : 1,\n          isDependedOn: isKeyframe ? 1 : 0,\n          hasRedundancy: 0,\n          isNonSync: isKeyframe ? 0 : 1\n        },\n        originDts: dts,\n        type: 'video'\n      })\n    }\n\n    let moofMdat = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"]()\n    if (mp4Samples.length) {\n      const moof = _fmp4__WEBPACK_IMPORTED_MODULE_1__[\"default\"].moof({\n        id: track.meta.id,\n        time: firstDts,\n        samples: mp4Samples\n      })\n      const mdat = _fmp4__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mdat(mdatBox)\n      moofMdat.write(moof, mdat)\n\n      this.writeToSource('video', moofMdat)\n    }\n\n    if (initSegment) {\n      this.writeToSource('video', initSegment)\n\n      if (samples.length) {\n        // second part of stream change\n        track.samples = samples;\n        return this._remuxVideo(track)\n      }\n    }\n\n    this.isFirstVideo = false\n    this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'video')\n\n    const lastSample = mp4Samples[mp4Samples.length - 1]\n    this._videoNextDts = lastSample.dts + lastSample.duration;\n    track.samples = []\n    track.length = 0\n  }\n\n  _remuxAudio (track) {\n    const {samples} = track\n    let firstDts = -1\n    let mp4Samples = []\n\n    let initSegment = null\n    const mdatBox = {\n      samples: []\n    }\n    if (!samples || !samples.length) {\n      return\n    }\n    let isFirstDtsInited = false\n    while (samples.length) {\n      let sample = samples.shift()\n      const { data, options } = sample\n      if (!this.isFirstAudio && options && options.meta) {\n        initSegment = this.remuxInitSegment('audio', options.meta)\n        options.meta = null;\n        samples.unshift(sample)\n        if (!options.isContinue) {\n          this.resetDtsBase()\n        }\n        break;\n      }\n\n      let dts = sample.dts - this._dtsBase\n      const originDts = dts\n      if (!isFirstDtsInited) {\n        firstDts = dts\n        isFirstDtsInited = true\n      }\n\n      let sampleDuration = 0\n\n      if (this.audioMeta.refSampleDurationFixed) {\n        sampleDuration = this.audioMeta.refSampleDurationFixed\n      } else if (samples.length >= 1) {\n        const nextDts = samples[0].dts - this._dtsBase;\n        sampleDuration = nextDts - dts\n      } else {\n        if (mp4Samples.length >= 1) { // use second last sample duration\n          sampleDuration = mp4Samples[mp4Samples.length - 1].duration\n        } else { // the only one sample, use reference sample duration\n          sampleDuration = this.audioMeta.refSampleDuration\n        }\n      }\n\n      // console.log('remux audio ', dts)\n      this.audioAllDuration += sampleDuration\n      const mp4Sample = {\n        dts,\n        pts: dts,\n        cts: 0,\n        size: data.byteLength,\n        duration: sample.duration ? sample.duration : sampleDuration,\n        flags: {\n          isLeading: 0,\n          dependsOn: 2,\n          isDependedOn: 1,\n          hasRedundancy: 0,\n          isNonSync: 0\n        },\n        isKeyframe: true,\n        originDts,\n        type: 'audio'\n      }\n\n      let mdatSample = {\n        buffer: [],\n        size: 0\n      }\n      mdatSample.buffer.push(data)\n      mdatSample.size += data.byteLength\n\n      mdatBox.samples.push(mdatSample)\n\n      mp4Samples.push(mp4Sample)\n    }\n\n    const moofMdat = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_0__[\"Buffer\"]()\n\n    if (mp4Samples.length) {\n      const moof = _fmp4__WEBPACK_IMPORTED_MODULE_1__[\"default\"].moof({\n        id: track.meta.id,\n        time: firstDts,\n        samples: mp4Samples\n      })\n      const mdat = _fmp4__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mdat(mdatBox)\n      moofMdat.write(moof, mdat)\n\n      this.writeToSource('audio', moofMdat)\n    }\n\n    if (initSegment) {\n      this.writeToSource('audio', initSegment)\n      if (samples.length) {\n        // second part of stream change\n        track.samples = samples;\n        return this._remuxAudio(track)\n      }\n    }\n\n    this.isFirstAudio = false\n    this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'audio', moofMdat)\n\n    const lastSample = mp4Samples[mp4Samples.length - 1]\n    this._videoNextDts = lastSample.dts + lastSample.duration;\n    track.samples = []\n    track.length = 0\n  }\n\n  writeToSource (type, buffer) {\n    let presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n    let source = presourcebuffer.getSource(type);\n    if (!source) {\n      source = presourcebuffer.createSource(type);\n    }\n\n    source.data.push(buffer)\n  }\n\n  initSilentAudio (dts, duration) {\n    const unit = Mp4Remuxer.getSilentFrame(this.audioMeta.channelCount)\n    return {\n      dts,\n      pts: dts,\n      cts: 0,\n      duration,\n      unit,\n      size: unit.byteLength,\n      originDts: dts,\n      type: 'video'\n    }\n  }\n\n  get videoMeta () {\n    return this._context.getInstance('TRACKS').videoTrack.meta\n  }\n  get audioMeta () {\n    return this._context.getInstance('TRACKS').audioTrack.meta\n  }\n\n  static getSilentFrame (channelCount) {\n    if (channelCount === 1) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80])\n    } else if (channelCount === 2) {\n      return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80])\n    } else if (channelCount === 3) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e])\n    } else if (channelCount === 4) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38])\n    } else if (channelCount === 5) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38])\n    } else if (channelCount === 6) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0])\n    }\n    return null\n  }\n}\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-remux/src/mp4/index.js?");

/***/ }),

/***/ "../xgplayer-utils/index.js":
/*!**********************************!*\
  !*** ../xgplayer-utils/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  Context: __webpack_require__(/*! ./src/context */ \"../xgplayer-utils/src/context.js\").default,\n\n  // Modules from constants\n  EVENTS: __webpack_require__(/*! ./src/constants/events */ \"../xgplayer-utils/src/constants/events.js\").default,\n  WORKER_COMMANDS: __webpack_require__(/*! ./src/constants/worker-commands */ \"../xgplayer-utils/src/constants/worker-commands.js\").default,\n\n  // Modules from env\n  sniffer: __webpack_require__(/*! ./src/env/sniffer */ \"../xgplayer-utils/src/env/sniffer.js\").default,\n  isLe: __webpack_require__(/*! ./src/env/isle */ \"../xgplayer-utils/src/env/isle.js\").default,\n  UTF8: __webpack_require__(/*! ./src/env/utf8 */ \"../xgplayer-utils/src/env/utf8.js\").default,\n  PageVisibility: __webpack_require__(/*! ./src/env/PageVisibility */ \"../xgplayer-utils/src/env/PageVisibility.js\").default,\n\n  // Models\n  MediaInfo: __webpack_require__(/*! ./src/models/media-info */ \"../xgplayer-utils/src/models/media-info.js\").default,\n  MediaSample: __webpack_require__(/*! ./src/models/media-sample */ \"../xgplayer-utils/src/models/media-sample.js\").default,\n  MediaSegment: __webpack_require__(/*! ./src/models/media-segment */ \"../xgplayer-utils/src/models/media-segment.js\").default,\n  MediaSegmentList: __webpack_require__(/*! ./src/models/media-segment-list */ \"../xgplayer-utils/src/models/media-segment-list.js\").default,\n  AudioTrackMeta: __webpack_require__(/*! ./src/models/track-meta */ \"../xgplayer-utils/src/models/track-meta.js\").AudioTrackMeta,\n  VideoTrackMeta: __webpack_require__(/*! ./src/models/track-meta */ \"../xgplayer-utils/src/models/track-meta.js\").VideoTrackMeta,\n  AudioTrackSample: __webpack_require__(/*! ./src/models/track-sample */ \"../xgplayer-utils/src/models/track-sample.js\").AudioTrackSample,\n  VideoTrackSample: __webpack_require__(/*! ./src/models/track-sample */ \"../xgplayer-utils/src/models/track-sample.js\").VideoTrackSample,\n\n  // Modules from mse\n  Mse: __webpack_require__(/*! ./src/mse/index */ \"../xgplayer-utils/src/mse/index.js\").default,\n\n  // Modules from write\n  Stream: __webpack_require__(/*! ./src/write/stream */ \"../xgplayer-utils/src/write/stream.js\").default,\n  Buffer: __webpack_require__(/*! ./src/write/buffer */ \"../xgplayer-utils/src/write/buffer.js\").default,\n\n  MobileVideo: __webpack_require__(/*! ./src/mobile/mobile-video */ \"../xgplayer-utils/src/mobile/mobile-video.js\"),\n  // Crypto\n  Crypto: __webpack_require__(/*! ./src/crypto */ \"../xgplayer-utils/src/crypto/index.js\").default\n};\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/index.js?");

/***/ }),

/***/ "../xgplayer-utils/node_modules/concat-typed-array/lib/concat.js":
/*!***********************************************************************!*\
  !*** ../xgplayer-utils/node_modules/concat-typed-array/lib/concat.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/node_modules/concat-typed-array/lib/concat.js?");

/***/ }),

/***/ "../xgplayer-utils/node_modules/concat-typed-array/lib/index.js":
/*!**********************************************************************!*\
  !*** ../xgplayer-utils/node_modules/concat-typed-array/lib/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _concat = __webpack_require__(/*! ./concat */ \"../xgplayer-utils/node_modules/concat-typed-array/lib/concat.js\");\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/node_modules/concat-typed-array/lib/index.js?");

/***/ }),

/***/ "../xgplayer-utils/node_modules/webworkify-webpack/index.js":
/*!******************************************************************!*\
  !*** ../xgplayer-utils/node_modules/webworkify-webpack/index.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function webpackBootstrapFunc (modules) {\n/******/  // The module cache\n/******/  var installedModules = {};\n\n/******/  // The require function\n/******/  function __webpack_require__(moduleId) {\n\n/******/    // Check if module is in cache\n/******/    if(installedModules[moduleId])\n/******/      return installedModules[moduleId].exports;\n\n/******/    // Create a new module (and put it into the cache)\n/******/    var module = installedModules[moduleId] = {\n/******/      i: moduleId,\n/******/      l: false,\n/******/      exports: {}\n/******/    };\n\n/******/    // Execute the module function\n/******/    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/    // Flag the module as loaded\n/******/    module.l = true;\n\n/******/    // Return the exports of the module\n/******/    return module.exports;\n/******/  }\n\n/******/  // expose the modules object (__webpack_modules__)\n/******/  __webpack_require__.m = modules;\n\n/******/  // expose the module cache\n/******/  __webpack_require__.c = installedModules;\n\n/******/  // identity function for calling harmony imports with the correct context\n/******/  __webpack_require__.i = function(value) { return value; };\n\n/******/  // define getter function for harmony exports\n/******/  __webpack_require__.d = function(exports, name, getter) {\n/******/    if(!__webpack_require__.o(exports, name)) {\n/******/      Object.defineProperty(exports, name, {\n/******/        configurable: false,\n/******/        enumerable: true,\n/******/        get: getter\n/******/      });\n/******/    }\n/******/  };\n\n/******/  // define __esModule on exports\n/******/  __webpack_require__.r = function(exports) {\n/******/    Object.defineProperty(exports, '__esModule', { value: true });\n/******/  };\n\n/******/  // getDefaultExport function for compatibility with non-harmony modules\n/******/  __webpack_require__.n = function(module) {\n/******/    var getter = module && module.__esModule ?\n/******/      function getDefault() { return module['default']; } :\n/******/      function getModuleExports() { return module; };\n/******/    __webpack_require__.d(getter, 'a', getter);\n/******/    return getter;\n/******/  };\n\n/******/  // Object.prototype.hasOwnProperty.call\n/******/  __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n/******/  // __webpack_public_path__\n/******/  __webpack_require__.p = \"/\";\n\n/******/  // on error function for async loading\n/******/  __webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n  var f = __webpack_require__(__webpack_require__.s = ENTRY_MODULE)\n  return f.default || f // try to call default if defined to also support babel esmodule exports\n}\n\nvar moduleNameReqExp = '[\\\\.|\\\\-|\\\\+|\\\\w|\\/|@]+'\nvar dependencyRegExp = '\\\\(\\\\s*(\\/\\\\*.*?\\\\*\\/)?\\\\s*.*?(' + moduleNameReqExp + ').*?\\\\)' // additional chars when output.pathinfo is true\n\n// http://stackoverflow.com/a/2593661/130442\nfunction quoteRegExp (str) {\n  return (str + '').replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&')\n}\n\nfunction isNumeric(n) {\n  return !isNaN(1 * n); // 1 * n converts integers, integers as string (\"123\"), 1e3 and \"1e3\" to integers and strings to NaN\n}\n\nfunction getModuleDependencies (sources, module, queueName) {\n  var retval = {}\n  retval[queueName] = []\n\n  var fnString = module.toString()\n  var wrapperSignature = fnString.match(/^function\\s?\\w*\\(\\w+,\\s*\\w+,\\s*(\\w+)\\)/)\n  if (!wrapperSignature) return retval\n  var webpackRequireName = wrapperSignature[1]\n\n  // main bundle deps\n  var re = new RegExp('(\\\\\\\\n|\\\\W)' + quoteRegExp(webpackRequireName) + dependencyRegExp, 'g')\n  var match\n  while ((match = re.exec(fnString))) {\n    if (match[3] === 'dll-reference') continue\n    retval[queueName].push(match[3])\n  }\n\n  // dll deps\n  re = new RegExp('\\\\(' + quoteRegExp(webpackRequireName) + '\\\\(\"(dll-reference\\\\s(' + moduleNameReqExp + '))\"\\\\)\\\\)' + dependencyRegExp, 'g')\n  while ((match = re.exec(fnString))) {\n    if (!sources[match[2]]) {\n      retval[queueName].push(match[1])\n      sources[match[2]] = __webpack_require__(match[1]).m\n    }\n    retval[match[2]] = retval[match[2]] || []\n    retval[match[2]].push(match[4])\n  }\n\n  // convert 1e3 back to 1000 - this can be important after uglify-js converted 1000 to 1e3\n  var keys = Object.keys(retval);\n  for (var i = 0; i < keys.length; i++) {\n    for (var j = 0; j < retval[keys[i]].length; j++) {\n      if (isNumeric(retval[keys[i]][j])) {\n        retval[keys[i]][j] = 1 * retval[keys[i]][j];\n      }\n    }\n  }\n\n  return retval\n}\n\nfunction hasValuesInQueues (queues) {\n  var keys = Object.keys(queues)\n  return keys.reduce(function (hasValues, key) {\n    return hasValues || queues[key].length > 0\n  }, false)\n}\n\nfunction getRequiredModules (sources, moduleId) {\n  var modulesQueue = {\n    main: [moduleId]\n  }\n  var requiredModules = {\n    main: []\n  }\n  var seenModules = {\n    main: {}\n  }\n\n  while (hasValuesInQueues(modulesQueue)) {\n    var queues = Object.keys(modulesQueue)\n    for (var i = 0; i < queues.length; i++) {\n      var queueName = queues[i]\n      var queue = modulesQueue[queueName]\n      var moduleToCheck = queue.pop()\n      seenModules[queueName] = seenModules[queueName] || {}\n      if (seenModules[queueName][moduleToCheck] || !sources[queueName][moduleToCheck]) continue\n      seenModules[queueName][moduleToCheck] = true\n      requiredModules[queueName] = requiredModules[queueName] || []\n      requiredModules[queueName].push(moduleToCheck)\n      var newModules = getModuleDependencies(sources, sources[queueName][moduleToCheck], queueName)\n      var newModulesKeys = Object.keys(newModules)\n      for (var j = 0; j < newModulesKeys.length; j++) {\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]] || []\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]].concat(newModules[newModulesKeys[j]])\n      }\n    }\n  }\n\n  return requiredModules\n}\n\nmodule.exports = function (moduleId, options) {\n  options = options || {}\n  var sources = {\n    main: __webpack_require__.m\n  }\n\n  var requiredModules = options.all ? { main: Object.keys(sources.main) } : getRequiredModules(sources, moduleId)\n\n  var src = ''\n\n  Object.keys(requiredModules).filter(function (m) { return m !== 'main' }).forEach(function (module) {\n    var entryModule = 0\n    while (requiredModules[module][entryModule]) {\n      entryModule++\n    }\n    requiredModules[module].push(entryModule)\n    sources[module][entryModule] = '(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })'\n    src = src + 'var ' + module + ' = (' + webpackBootstrapFunc.toString().replace('ENTRY_MODULE', JSON.stringify(entryModule)) + ')({' + requiredModules[module].map(function (id) { return '' + JSON.stringify(id) + ': ' + sources[module][id].toString() }).join(',') + '});\\n'\n  })\n\n  src = src + 'new ((' + webpackBootstrapFunc.toString().replace('ENTRY_MODULE', JSON.stringify(moduleId)) + ')({' + requiredModules.main.map(function (id) { return '' + JSON.stringify(id) + ': ' + sources.main[id].toString() }).join(',') + '}))(self);'\n\n  var blob = new window.Blob([src], { type: 'text/javascript' })\n  if (options.bare) { return blob }\n\n  var URL = window.URL || window.webkitURL || window.mozURL || window.msURL\n\n  var workerUrl = URL.createObjectURL(blob)\n  var worker = new window.Worker(workerUrl)\n  worker.objectURL = workerUrl\n\n  return worker\n}\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/node_modules/webworkify-webpack/index.js?");

/***/ }),

/***/ "../xgplayer-utils/src/constants/events.js":
/*!*************************************************!*\
  !*** ../xgplayer-utils/src/constants/events.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst LOADER_EVENTS = {\n  LADER_START: 'LOADER_START',\n  LOADER_DATALOADED: 'LOADER_DATALOADED',\n  LOADER_COMPLETE: 'LOADER_COMPLETE',\n  LOADER_ERROR: 'LOADER_ERROR'\n}\n\nconst DEMUX_EVENTS = {\n  DEMUX_START: 'DEMUX_START',\n  DEMUX_COMPLETE: 'DEMUX_COMPLETE',\n  DEMUX_ERROR: 'DEMUX_ERROR',\n  METADATA_PARSED: 'METADATA_PARSED',\n  VIDEO_METADATA_CHANGE: 'VIDEO_METADATA_CHANGE',\n  AUDIO_METADATA_CHANGE: 'AUDIO_METADATA_CHANGE',\n  MEDIA_INFO: 'MEDIA_INFO'\n}\n\nconst REMUX_EVENTS = {\n  REMUX_METADATA: 'REMUX_METADATA',\n  REMUX_MEDIA: 'REMUX_MEDIA',\n  MEDIA_SEGMENT: 'MEDIA_SEGMENT',\n  REMUX_ERROR: 'REMUX_ERROR',\n  INIT_SEGMENT: 'INIT_SEGMENT',\n  DETECT_CHANGE_STREAM: 'DETECT_CHANGE_STREAM'\n}\n\nconst MSE_EVENTS = {\n  SOURCE_UPDATE_END: 'SOURCE_UPDATE_END'\n}\n\n// hls专有events\nconst HLS_EVENTS = {\n  RETRY_TIME_EXCEEDED: 'RETRY_TIME_EXCEEDED'\n}\n\nconst CRYTO_EVENTS = {\n  START_DECRYPT: 'START_DECRYPT',\n  DECRYPTED: 'DECRYPTED'\n}\n\nconst BROWSER_EVENTS = {\n  VISIBILITY_CHANGE: 'VISIBILITY_CHANGE'\n}\n\nconst ALLEVENTS = Object.assign({}, LOADER_EVENTS, DEMUX_EVENTS, REMUX_EVENTS, MSE_EVENTS, HLS_EVENTS, BROWSER_EVENTS)\n\nconst FlvAllowedEvents = []\nconst HlsAllowedEvents = []\n\nfor (let key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(key)) {\n    FlvAllowedEvents.push(ALLEVENTS[key])\n  }\n}\n\nfor (let key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(key)) {\n    HlsAllowedEvents.push(ALLEVENTS[key])\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  ALLEVENTS,\n  HLS_EVENTS,\n  REMUX_EVENTS,\n  DEMUX_EVENTS,\n  MSE_EVENTS,\n  LOADER_EVENTS,\n  FlvAllowedEvents,\n  HlsAllowedEvents,\n  CRYTO_EVENTS,\n  BROWSER_EVENTS\n});\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/constants/events.js?");

/***/ }),

/***/ "../xgplayer-utils/src/constants/worker-commands.js":
/*!**********************************************************!*\
  !*** ../xgplayer-utils/src/constants/worker-commands.js ***!
  \**********************************************************/
/*! exports provided: CONTEXT_COMOMANDS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CONTEXT_COMOMANDS\", function() { return CONTEXT_COMOMANDS; });\nconst CONTEXT_COMOMANDS = {\n  ON: 'on',\n  ONCE: 'once',\n  OFF: 'off',\n  EMIT: 'emit',\n  DESTROY: 'destroy'\n}\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/constants/worker-commands.js?");

/***/ }),

/***/ "../xgplayer-utils/src/context.js":
/*!****************************************!*\
  !*** ../xgplayer-utils/src/context.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _models_media_info__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./models/media-info */ \"../xgplayer-utils/src/models/media-info.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"../../node_modules/events/events.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nconst DIRECT_EMIT_FLAG = '__TO__'\n\nclass Context {\n  constructor (allowedEvents = []) {\n    this._emitter = new events__WEBPACK_IMPORTED_MODULE_1__[\"EventEmitter\"]()\n    this._instanceMap = {} // 所有的解码流程实例\n    this._clsMap = {} // 构造函数的map\n    this._inited = false\n    this.mediaInfo = new _models_media_info__WEBPACK_IMPORTED_MODULE_0__[\"default\"]()\n    this.allowedEvents = allowedEvents\n    this._hooks = {} // 注册在事件前/后的钩子，例如 before('DEMUX_COMPLETE')\n  }\n\n  /**\n   * 从上下文中获取解码流程实例，如果没有实例，构造一个\n   * @param tag\n   * @param args\n   * @returns {*}\n   */\n  getInstance (tag) {\n    const instance = this._instanceMap[tag]\n    if (instance) {\n      return instance\n    } else {\n      // throw new Error(`${tag}实例尚未初始化`)\n      return null\n    }\n  }\n\n  /**\n   * 初始化具体实例\n   * @param tag\n   * @param args\n   */\n  initInstance (tag, ...args) {\n    if (this._clsMap[tag]) {\n      const newInstance = new this._clsMap[tag](...args)\n      this._instanceMap[tag] = newInstance\n      if (newInstance.init) {\n        newInstance.init() // TODO: lifecircle\n      }\n      return newInstance\n    } else {\n      throw new Error(`${tag}未在context中注册`)\n    }\n  }\n\n  /**\n   * 避免大量的initInstance调用，初始化所有的组件\n   * @param config\n   */\n  init (config) {\n    if (this._inited) {\n      return\n    }\n    for (let tag in this._clsMap) {\n      // if not inited, init an instance\n      if (this._clsMap.hasOwnProperty(tag) && !this._instanceMap[tag]) {\n        this.initInstance(tag, config)\n      }\n    }\n    this._inited = true\n  }\n\n  /**\n   * 注册一个上下文流程，提供安全的事件发送机制\n   * @param tag\n   * @param cls\n   */\n  registry (tag, cls) {\n    const emitter = this._emitter\n    const checkMessageName = this._isMessageNameValid.bind(this)\n    const self = this\n    const enhanced = class extends cls {\n      constructor (...args) {\n        super(...args)\n        this.listeners = {}\n        this.onceListeners = {}\n        this.TAG = tag\n        this._context = self\n      }\n\n      on (messageName, callback) {\n        checkMessageName(messageName)\n\n        if (this.listeners[messageName]) {\n          this.listeners[messageName].push(callback)\n        } else {\n          this.listeners[messageName] = [callback]\n        }\n\n        emitter.on(`${messageName}${DIRECT_EMIT_FLAG}${tag}`, callback) // 建立定向通信监听\n        return emitter.on(messageName, callback)\n      }\n\n      /**\n       * 在某个事件触发前执行\n       * @param messageName\n       * @param callback\n       */\n      before (messageName, callback) {\n        checkMessageName(messageName)\n        if (self._hooks[messageName]) {\n          self._hooks[messageName].push(callback)\n        } else {\n          self._hooks[messageName] = [callback]\n        }\n      }\n\n      once (messageName, callback) {\n        checkMessageName(messageName)\n\n        if (this.onceListeners[messageName]) {\n          this.onceListeners[messageName].push(callback)\n        } else {\n          this.onceListeners[messageName] = [callback]\n        }\n\n        emitter.once(`${messageName}${DIRECT_EMIT_FLAG}${tag}`, callback)\n        return emitter.once(messageName, callback)\n      }\n\n      emit (messageName, ...args) {\n        checkMessageName(messageName)\n\n        const beforeList = self._hooks ? self._hooks[messageName] : null\n\n        if (beforeList) {\n          for (let i = 0, len = beforeList.length; i < len; i++) {\n            const callback = beforeList[i]\n            callback()\n          }\n        }\n        return emitter.emit(messageName, ...args)\n      }\n\n      /**\n       * 定向发送给某个组件单例的消息\n       * @param messageName\n       * @param args\n       */\n      emitTo (tag, messageName, ...args) {\n        checkMessageName(messageName)\n\n        return emitter.emit(`${messageName}${DIRECT_EMIT_FLAG}${tag}`, ...args)\n      }\n\n      off (messageName, callback) {\n        checkMessageName(messageName)\n        return emitter.off(messageName, callback)\n      }\n\n      removeListeners () {\n        const hasOwn = Object.prototype.hasOwnProperty.bind(this.listeners)\n\n        for (let messageName in this.listeners) {\n          if (hasOwn(messageName)) {\n            const callbacks = this.listeners[messageName] || []\n            for (let i = 0; i < callbacks.length; i++) {\n              const callback = callbacks[i]\n              emitter.off(messageName, callback)\n              emitter.off(`${messageName}${DIRECT_EMIT_FLAG}${tag}`, callback)\n            }\n          }\n        }\n\n        for (let messageName in this.onceListeners) {\n          if (hasOwn(messageName)) {\n            const callbacks = this.onceListeners[messageName] || []\n            for (let i = 0; i < callbacks.length; i++) {\n              const callback = callbacks[i]\n              emitter.off(messageName, callback)\n              emitter.off(`${messageName}${DIRECT_EMIT_FLAG}${tag}`, callback)\n            }\n          }\n        }\n      }\n\n      /**\n       * 在组件销毁时，默认将它注册的事件全部卸载，确保不会造成内存泄漏\n       */\n      destroy () {\n        // step1 unlisten events\n        this.removeListeners()\n        this.listeners = {}\n\n        // step2 release from context\n        delete self._instanceMap[tag]\n        if (super.destroy) {\n          return super.destroy()\n        }\n      }\n    }\n    this._clsMap[tag] = enhanced\n\n    /**\n     * get instance immediately\n     * e.g const instance = context.registry(tag, Cls)(config)\n     * */\n    return (...args) => {\n      return this.initInstance(tag, ...args)\n    }\n  }\n\n  /**\n   * 对存在的实例进行\n   */\n  destroyInstances () {\n    Object.keys(this._instanceMap).forEach((tag) => {\n      if (this._instanceMap[tag].destroy) {\n        this._instanceMap[tag].destroy()\n      }\n    })\n  }\n\n  /**\n   * 编解码流程无需关注事件的解绑\n   */\n  destroy () {\n    this._emitter = null\n    this.allowedEvents = []\n    this._clsMap = null\n    this._context = null\n    this._hooks = null\n    this.destroyInstances()\n  }\n\n  /**\n   * 对信道进行收拢\n   * @param messageName\n   * @private\n   */\n  _isMessageNameValid (messageName) {\n    if (!this.allowedEvents.indexOf(messageName) < 0) {\n      throw new Error(`unregistered message name: ${messageName}`)\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Context);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/context.js?");

/***/ }),

/***/ "../xgplayer-utils/src/crypto/index.js":
/*!*********************************************!*\
  !*** ../xgplayer-utils/src/crypto/index.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _constants_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/events */ \"../xgplayer-utils/src/constants/events.js\");\n\nconst CRYTO_EVENTS = _constants_events__WEBPACK_IMPORTED_MODULE_0__[\"default\"].CRYTO_EVENTS\nclass Crypto {\n    constructor(config) {\n        this.inputBuffer = config.inputbuffer;\n        this.outputBuffer = config.outputbuffer;\n        this.key = config.key;\n        this.iv = config.iv;\n        this.method = config.method;\n\n        this.crypto =  window.crypto || window.msCrypto\n    }\n\n    init() {\n        this.on(CRYTO_EVENTS.START_DECRYPT, this.decript.bind(this));\n    }\n    \n    decript() {\n        if(!this.aeskey) {\n            let sbkey = this.crypto.subtle.importKey('raw', this.key.buffer, { name: 'AES-CBC' }, false, ['encrypt', 'decrypt']);\n            sbkey.then(key => {\n                this.aeskey = key;\n                this.decriptData();\n            }) \n        } else {\n            this.decriptData();\n        }\n    }\n\n    decriptData() {\n        let inputbuffer = this._context.getInstance(this.inputBuffer);\n        let outputbuffer = this._context.getInstance(this.outputBuffer);\n        let data = inputbuffer.shift();\n        if(data) {\n            this.crypto.subtle.decrypt({ name: 'AES-CBC', iv: this.iv.buffer }, this.aeskey, data).then(res=>{\n                outputbuffer.push(new Uint8Array(res));\n                this.emit(CRYTO_EVENTS.DECRYPTED);\n                this.decriptData(data);\n            });\n        }\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Crypto);\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/crypto/index.js?");

/***/ }),

/***/ "../xgplayer-utils/src/env/PageVisibility.js":
/*!***************************************************!*\
  !*** ../xgplayer-utils/src/env/PageVisibility.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _constants_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/events */ \"../xgplayer-utils/src/constants/events.js\");\n\nconst BROWSER_EVENTS = _constants_events__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BROWSER_EVENTS\n\nlet hidden;\nlet visibilityChange;\nif (typeof document.hidden !== 'undefined') { // Opera 12.10 and Firefox 18 and later support\n  hidden = 'hidden';\n  visibilityChange = 'visibilitychange';\n} else if (typeof document.msHidden !== 'undefined') {\n  hidden = 'msHidden';\n  visibilityChange = 'msvisibilitychange';\n} else if (typeof document.webkitHidden !== 'undefined') {\n  hidden = 'webkitHidden';\n  visibilityChange = 'webkitvisibilitychange';\n}\n\nclass PageVisibility {\n\n  constructor () {\n    this.callbacks = {\n      onShow: [],\n      onHidden: []\n    }\n    this.handleVisibilityChange = this.handleVisibilityChange.bind(this)\n    this.init();\n  }\n\n  init () {\n    document.addEventListener(visibilityChange, this.handleVisibilityChange, false);\n  }\n\n  handleVisibilityChange () {\n    this.emit(BROWSER_EVENTS.VISIBILITY_CHANGE, document[hidden])\n  }\n\n  destroy () {\n    document.removeEventListener(visibilityChange, this.handleVisibilityChange);\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (PageVisibility);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/env/PageVisibility.js?");

/***/ }),

/***/ "../xgplayer-utils/src/env/isle.js":
/*!*****************************************!*\
  !*** ../xgplayer-utils/src/env/isle.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst le = (function () {\n  const buf = new ArrayBuffer(2);\n  (new DataView(buf)).setInt16(0, 256, true) // little-endian write\n  return (new Int16Array(buf))[0] === 256 // platform-spec read, if equal then LE\n})()\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (le);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/env/isle.js?");

/***/ }),

/***/ "../xgplayer-utils/src/env/sniffer.js":
/*!********************************************!*\
  !*** ../xgplayer-utils/src/env/sniffer.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst le = (function () {\n  const buf = new ArrayBuffer(2);\n  (new DataView(buf)).setInt16(0, 256, true) // little-endian write\n  return (new Int16Array(buf))[0] === 256 // platform-spec read, if equal then LE\n})()\n\nconst sniffer = {\n  get device () {\n    let r = sniffer.os;\n    return r.isPc ? 'pc' : r.isTablet ? 'tablet' : 'mobile';\n  },\n  get browser () {\n    let ua = navigator.userAgent.toLowerCase();\n    let reg = {\n      ie: /rv:([\\d.]+)\\) like gecko/,\n      firfox: /firefox\\/([\\d.]+)/,\n      chrome: /chrome\\/([\\d.]+)/,\n      opera: /opera.([\\d.]+)/,\n      safari: /version\\/([\\d.]+).*safari/\n    };\n    return [].concat(Object.keys(reg).filter(key => reg[key].test(ua)))[0];\n  },\n  get os () {\n    let ua = navigator.userAgent\n    let isWindowsPhone = /(?:Windows Phone)/.test(ua)\n    let isSymbian = /(?:SymbianOS)/.test(ua) || isWindowsPhone;\n    let isAndroid = /(?:Android)/.test(ua);\n    let isFireFox = /(?:Firefox)/.test(ua);\n    let isTablet = /(?:iPad|PlayBook)/.test(ua) || (isAndroid && !/(?:Mobile)/.test(ua)) || (isFireFox && /(?:Tablet)/.test(ua));\n    let isPhone = /(?:iPhone)/.test(ua) && !isTablet;\n    let isPc = !isPhone && !isAndroid && !isSymbian;\n    return {\n      isTablet,\n      isPhone,\n      isAndroid,\n      isPc,\n      isSymbian,\n      isWindowsPhone,\n      isFireFox\n    };\n  },\n\n  get isLe () {\n    return le\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (sniffer);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/env/sniffer.js?");

/***/ }),

/***/ "../xgplayer-utils/src/env/utf8.js":
/*!*****************************************!*\
  !*** ../xgplayer-utils/src/env/utf8.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass UTF8 {\n  static decode (uint8array) {\n    const out = [];\n    const input = uint8array;\n    let i = 0;\n    const length = uint8array.length;\n\n    while (i < length) {\n      if (input[i] < 0x80) {\n        out.push(String.fromCharCode(input[i]));\n        ++i;\n        continue;\n      } else if (input[i] < 0xC0) {\n        // fallthrough\n      } else if (input[i] < 0xE0) {\n        if (UTF8._checkContinuation(input, i, 1)) {\n          const ucs4 = (input[i] & 0x1F) << 6 | (input[i + 1] & 0x3F);\n          if (ucs4 >= 0x80) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF));\n            i += 2;\n            continue;\n          }\n        }\n      } else if (input[i] < 0xF0) {\n        if (UTF8._checkContinuation(input, i, 2)) {\n          const ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\n          if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF));\n            i += 3;\n            continue;\n          }\n        }\n      } else if (input[i] < 0xF8) {\n        if (UTF8._checkContinuation(input, i, 3)) {\n          let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 |\n                    (input[i + 2] & 0x3F) << 6 | (input[i + 3] & 0x3F);\n          if (ucs4 > 0x10000 && ucs4 < 0x110000) {\n            ucs4 -= 0x10000;\n            out.push(String.fromCharCode((ucs4 >>> 10) | 0xD800));\n            out.push(String.fromCharCode((ucs4 & 0x3FF) | 0xDC00));\n            i += 4;\n            continue;\n          }\n        }\n      }\n      out.push(String.fromCharCode(0xFFFD));\n      ++i;\n    }\n\n    return out.join('');\n  }\n\n  static _checkContinuation (uint8array, start, checkLength) {\n    let array = uint8array;\n    if (start + checkLength < array.length) {\n      while (checkLength--) {\n        if ((array[++start] & 0xC0) !== 0x80) {\n          return false;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (UTF8);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/env/utf8.js?");

/***/ }),

/***/ "../xgplayer-utils/src/mobile/audio-context.js":
/*!*****************************************************!*\
  !*** ../xgplayer-utils/src/mobile/audio-context.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"../../node_modules/events/events.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n\nclass AudioCtx extends events__WEBPACK_IMPORTED_MODULE_0___default.a {\n  constructor (config) {\n    super();\n    this.config = Object.assign({}, config);\n    let AudioContext = window.AudioContext || window.webkitAudioContext;\n    this.context = new AudioContext();\n    this.gainNode = this.context.createGain();\n    this.gainNode.connect(this.context.destination);\n    this.meta = undefined;\n    this.samples = [];\n    this.preloadTime = this.config.preloadTime || 3;\n    this.duration = 0;\n\n    this._currentBuffer = undefined;\n    this._nextBuffer = undefined;\n    this._lastpts = undefined;\n    this._preDecode = [];\n    this._currentTime = 0;\n    this._decoding = false;\n    this._volume = this.config.volume || 0.6\n    // 记录外部传输的状态\n    this._played = false;\n    this.playFinish = null; // pending play task\n    this.waitNextID = null; // audio source end and next source not loaded\n  }\n\n  get currentTime () {\n    return this._currentTime;\n  }\n\n  decodeAudio (audioTrack) {\n    let {samples} = audioTrack;\n    let data = samples;\n    audioTrack.samples = [];\n    this.setAudioData(data);\n  }\n  setAudioData (data) {\n    for (let i = 0; i < data.length; i++) {\n      data[i].pts = (data[i].pts === undefined) ? data[i].dts : data[i].pts;\n      this._preDecode.push(data[i]);\n    }\n    if (this._preDecode.length > 0) {\n      if (this._lastpts === undefined) {\n        this._lastpts = this._preDecode[0].pts;\n      }\n      if ((this._preDecode[this._preDecode.length - 1].pts - this._lastpts) / 1000 > this.preloadTime) {\n        this.decodeAAC();\n      }\n    }\n  }\n\n  decodeAAC () {\n    if (this._decoding) {\n      return;\n    }\n    this._decoding = true;\n    let data = this._preDecode;\n    let samples = [];\n    let _this = this;\n    let sample = data.shift();\n    while (sample) {\n      let sampleData = AudioCtx.getAACData(this.meta, sample)\n      samples.push(sampleData);\n      this._lastpts = sample.pts;\n      sample = data.shift()\n    }\n    let buffer = AudioCtx.combileData(samples);\n    try {\n      this.context.decodeAudioData(buffer.buffer, function (buffer) {\n        let audioSource = _this.context.createBufferSource();\n        audioSource.buffer = buffer;\n        // audioSource.onended = _this.onSourceEnded.bind(_this);\n        _this.samples.push({\n          time: _this.duration,\n          duration: buffer.duration,\n          data: audioSource\n        })\n\n        _this.duration += buffer.duration;\n\n        if (!_this._currentBuffer) {\n          _this._currentBuffer = _this.getTimeBuffer(_this.currentTime);\n        }\n\n        if (!_this._nextBuffer && _this._currentBuffer) {\n          _this._nextBuffer = _this.getTimeBuffer(_this.currentTime + _this._currentBuffer.duration);\n        }\n        _this._decoding = false;\n\n        if ((_this._preDecode.length > 0 && _this._preDecode[_this._preDecode.length - 1].pts - _this._lastpts) / 1000 >= _this.preloadTime) {\n          _this.decodeAAC();\n        }\n\n        if (_this.playFinish) {\n          _this.playFinish()\n        }\n      }, (e) => {\n        console.error(e)\n      })\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  onSourceEnded () {\n    if (!this._nextBuffer || !this._played) {\n      this.waitNextID = setTimeout(() => {\n        this.onSourceEnded();\n      }, 200);\n      return;\n    }\n    let audioSource = this._nextBuffer.data;\n    audioSource.start();\n    audioSource.connect(this.gainNode);\n    let _this = this;\n    setTimeout(() => {\n      _this.onSourceEnded.call(this);\n    }, audioSource.buffer.duration * 1000 - 10);\n    this._currentBuffer = this._nextBuffer;\n    this._currentTime = this._currentBuffer.time;\n    this._nextBuffer = this.getTimeBuffer(this.currentTime);\n    if (this._currentBuffer) {\n      this._nextBuffer = this.getTimeBuffer(this.currentTime + this._currentBuffer.duration);\n    }\n    this.emit('AUDIO_SOURCE_END')\n  }\n\n  play () {\n    if (this.playFinish) {\n      return;\n    }\n    this._played = true;\n    if (this.context.state === 'suspended') {\n      this.context.resume()\n    }\n    let _this = this;\n    const playStart = () => {\n      let audioSource = this._currentBuffer.data;\n      audioSource.connect(this.gainNode);\n      audioSource.start();\n      setTimeout(() => {\n        _this.onSourceEnded.call(this);\n      }, audioSource.buffer.duration * 1000 - 10);\n    }\n\n    if (!this._currentBuffer) {\n      return new Promise((resolve) => {\n        this.playFinish = resolve;\n      }).then(() => {\n        this.playFinish = null;\n        playStart()\n      });\n    } else {\n      playStart();\n      return Promise.resolve()\n    }\n  }\n\n  pause () {\n    const audioCtx = this.context;\n    if (audioCtx.state === 'running') {\n      audioCtx.suspend()\n    }\n  }\n\n  getTimeBuffer (time) {\n    let ret;\n    for (let i = 0; i < this.samples.length; i++) {\n      let sample = this.samples[i]\n      if (sample.time <= time && (sample.time + sample.duration) > time) {\n        ret = sample;\n        break;\n      }\n    }\n    return ret;\n  }\n\n  setAudioMetaData (meta) {\n    this.meta = meta;\n  }\n\n  destroy () {\n    if (this.waitNextID) {\n      window.clearTimeout(this.waitNextID)\n    }\n    this.context.close();\n  }\n\n  set muted (val) {\n    if (val) {\n      this.gainNode.gain.value = 0\n    } else {\n      this.gainNode.gain.value = this._volume\n    }\n  }\n\n  get volume () {\n    return this._volume\n  }\n\n  set volume (val) {\n    if (val < 0) {\n      this._volume = 0;\n      this.gainNode.gain.value = 0\n      return;\n    } else if (val > 1) {\n      this._volume = 1;\n      this.gainNode.gain.value = 1\n      return;\n    }\n\n    this._volume = val;\n    this.gainNode.gain.value = val\n  }\n\n  static getAACData (meta, sample) {\n    let buffer = new Uint8Array(sample.data.byteLength + 7);\n    let adts = AudioCtx.getAdts(meta, sample.data);\n    buffer.set(adts);\n    buffer.set(sample.data, 7);\n    return buffer;\n  }\n\n  static combileData (samples) {\n    // get length\n    let length = 0;\n    for (let i = 0, k = samples.length; i < k; i++) {\n      length += samples[i].byteLength;\n    }\n\n    let ret = new Uint8Array(length);\n    let offset = 0;\n    // combile data;\n    for (let i = 0, k = samples.length; i < k; i++) {\n      ret.set(samples[i], offset);\n      offset += samples[i].byteLength;\n    }\n    return ret;\n  }\n\n  static getAdts (meta, data) {\n    let adts = new Uint8Array(7);\n\n    // 设置同步位 0xfff 12bit\n    adts[0] = 0xff;\n    adts[1] = 0xf0;\n\n    // Object data (没什么人用MPEG-2了，HLS和FLV也全是MPEG-4，这里直接0)  1bit\n    // Level always 00 2bit\n    // CRC always 1 1bit\n    adts[1] = adts[1] | 0x01;\n\n    // profile 2bit\n    adts[2] = 0xc0 & ((meta.objectType - 1) << 6);\n\n    // sampleFrequencyIndex\n    adts[2] = adts[2] | (0x3c & (meta.sampleRateIndex << 2))\n\n    // private bit 0 1bit\n    // chanel configuration 3bit\n    adts[2] = adts[2] | (0x01 & meta.channelCount >> 2);\n    adts[3] = 0xc0 & (meta.channelCount << 6);\n\n    // original_copy: 0 1bit\n    // home: 0 1bit\n\n    // adts_variable_header()\n    // copyrighted_id_bit 0 1bit\n    // copyrighted_id_start 0 1bit\n\n    // aac_frame_length 13bit;\n    let aacframelength = data.byteLength + 7;\n\n    adts[3] = adts[3] | (0x03 & aacframelength >> 11);\n    adts[4] = 0xff & (aacframelength >> 3);\n    adts[5] = 0xe0 & (aacframelength << 5);\n\n    // adts_buffer_fullness 0x7ff 11bit\n    adts[5] = adts[5] | 0x1f\n    adts[6] = 0xfc;\n\n    // number_of_raw_data_blocks_in_frame 0 2bit;\n    return adts;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AudioCtx);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/mobile/audio-context.js?");

/***/ }),

/***/ "../xgplayer-utils/src/mobile/mobile-video.js":
/*!****************************************************!*\
  !*** ../xgplayer-utils/src/mobile/mobile-video.js ***!
  \****************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
<<<<<<< HEAD
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _video_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./video-context */ \"../xgplayer-utils/src/mobile/video-context.js\");\n/* harmony import */ var _audio_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./audio-context */ \"../xgplayer-utils/src/mobile/audio-context.js\");\n/* harmony import */ var _ticker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ticker */ \"../xgplayer-utils/src/mobile/ticker.js\");\n\n\n\n/**\n * 音画同步调和器\n */\nclass AVReconciler {\n  constructor (props) {\n    this.aCtx = props.aCtx;\n    this.vCtx = props.vCtx;\n    this.video = props.video\n    this.timeoutId = null\n    this.start = null\n  }\n\n  doReconcile () {\n    const vCurTime = (this.vCtx.currentTime || 0);\n    const aCurTime = (this.aCtx.currentTime || 0) * 1000;\n\n    const gap = vCurTime - aCurTime;\n    if (this.timeoutId) {\n      return;\n    }\n    if (gap > 200) { // audio delayed for more than 100ms\n      this.video.start += gap\n      this.vCtx.pause()\n      this.timeoutId = setTimeout(() => {\n        this.vCtx.play()\n        this.timeoutId = null\n      }, gap)\n    } else if (gap < -120) {\n      this.video.start += gap\n    }\n  }\n\n  destroy () {\n    this.start = null\n    this.aCtx = null\n    this.vCtx = null\n  }\n}\n\n// eslint-disable-next-line no-undef\nclass MobileVideo extends HTMLElement {\n  constructor () {\n    super();\n    this._canvas = document.createElement('canvas')\n    this.handleAudioSourceEnd = this.handleAudioSourceEnd.bind(this)\n    this.played = false;\n    this.pendingPlayTask = null\n    this._paused = true;\n    this.videoMetaInited = false;\n    this.audioMetaInited = false;\n    this.init()\n  }\n\n  init () {\n    this.vCtx = new _video_context__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Object.assign({\n      canvas: this._canvas\n    }, { style: { width: this.width, height: this.height } }));\n    this.aCtx = new _audio_context__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({});\n    this.ticker = new (Object(_ticker__WEBPACK_IMPORTED_MODULE_2__[\"getTicker\"])())()\n    this.reconciler = new AVReconciler({\n      vCtx: this.vCtx,\n      aCtx: this.aCtx,\n      video: this\n    })\n    this.vCtx.oncanplay = () => {\n      if (!this.played) {\n        this.appendChild(this._canvas);\n      }\n      this.dispatchEvent(new Event('canplay'));\n    }\n\n    this.aCtx.on('AUDIO_SOURCE_END', this.handleAudioSourceEnd)\n  }\n\n  handleAudioSourceEnd () {\n    this.reconciler.doReconcile()\n    this.vCtx.cleanBuffer();\n  }\n\n  _cleanBuffer () {\n    this.vCtx.cleanBuffer()\n  }\n\n  destroy () {\n    this.aCtx.destroy()\n    this.vCtx.destroy()\n    this.ticker.stop()\n    this.start = null;\n    this.reconciler.destroy()\n    this.aCtx = null;\n    this.vCtx = null;\n    this.ticker = null;\n  }\n\n  onDemuxComplete (videoTrack, audioTrack) {\n    this.aCtx.decodeAudio(audioTrack);\n    this.vCtx.decodeVideo(videoTrack);\n  }\n\n  setAudioMeta (meta) {\n    if (this.audioMetaInited) {\n      this.aCtx.destroy();\n      this.aCtx = new _audio_context__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({});\n    }\n    this.aCtx.setAudioMetaData(meta);\n    this.audioMetaInited = true;\n  }\n\n  setVideoMeta (meta) {\n    if (this.videoMetaInited) {\n      this.vCtx.destroy();\n      this.vCtx = new _video_context__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Object.assign({\n        canvas: this._canvas\n      }, { style: { width: this.width, height: this.height } }));\n    }\n    this.vCtx.setVideoMetaData(meta);\n    this.videoMetaInited = true;\n  }\n\n  get width () {\n    return this.getAttribute('width') || this.videoWidth\n  }\n\n  set width (val) {\n    this.style.display = 'inline-block'\n    const pxVal = typeof val === 'number' ? `${val}px` : val\n    this.setAttribute('width', pxVal)\n    this.style.width = pxVal\n    this._canvas.style.width = pxVal;\n    this._canvas.width = val;\n  }\n\n  get height () {\n    return this.getAttribute('height')\n  }\n\n  set height (val) {\n    this.style.display = 'inline-block'\n    const pxVal = typeof val === 'number' ? `${val}px` : val\n    this.setAttribute('height', pxVal)\n    this.style.height = pxVal\n    this._canvas.style.height = pxVal;\n    this._canvas.height = val;\n  }\n\n  get videoWidth () {\n    if (this.vCtx && this.vCtx.videoWidth) {\n      return this.vCtx.videoWidth\n    }\n    return 0\n  }\n\n  get videoHeight () {\n    if (this.vCtx && this.vCtx.videoHeight) {\n      return this.vCtx.videoHeight\n    }\n    return 0\n  }\n\n  get src () {\n    return this.getAttribute('src');\n  }\n\n  set src (val) {\n    this.setAttribute('src', val);\n  }\n\n  get readyState () {\n    return this.videoMetaInited ? this.vCtx.readyState : 0\n  }\n\n  get seeking () {\n    return this.videoMetaInited ? this.vCtx.seeking : false\n  }\n\n  get currentTime () {\n    return this.videoMetaInited ? this.vCtx.currentTime / 1000 : 0\n  }\n\n  get duration () {\n    return this.audioMetaInited ? this.aCtx.duration : 0\n  }\n\n  get paused () {\n    return this._paused\n  }\n\n  get playbackRate () {\n    if (this.hasAttribute('playbackRate')) {\n      return this.getAttribute('playbackRate')\n    } else {\n      return 1.0\n    }\n  }\n\n  set playbackRate (val) {\n    this.setAttribute('playbackrate', val);\n    this.aCtx.playbackRate = val;\n    this.vCtx.playbackRate = val;\n\n    this.dispatchEvent(new Event('ratechange'))\n  }\n\n  get ended () {\n    if (this.audioMetaInited) {\n      return this.aCtx.ended;\n    }\n    return false;\n  }\n\n  get autoplay () {\n    if (this.hasAttribute('autoplay')) {\n      return this.getAttribute('autoplay')\n    } else {\n      return false\n    }\n  }\n  set autoplay (value) {\n    this.setAttribute('autoplay', value)\n  }\n  play () {\n    if (this.pendingPlayTask) {\n      return;\n    }\n\n    if (this.played) {\n      this.destroy()\n      this.init()\n    }\n    this.pendingPlayTask = Promise.all([\n      this.vCtx.play(),\n      this.aCtx.play().then(() => {\n        this.aCtx.muted = true\n      })\n    ]).then(() => {\n      this.aCtx.muted = false\n      this.ticker.start(() => {\n        if (!this.start) {\n          this.start = Date.now()\n        }\n        this._currentTime = Date.now() - this.start\n        this.vCtx._onTimer(this._currentTime)\n      })\n\n      this.pendingPlayTask = null\n      this.played = true;\n      this.dispatchEvent(new Event('play'))\n      this._paused = false\n    })\n  }\n\n  pause () {\n    this._paused = true;\n    this.aCtx.pause()\n    this.vCtx.pause()\n\n    this.dispatchEvent(new Event('pause'))\n  }\n\n  get volume () {\n    return this.aCtx.volume\n  }\n\n  set volume (vol) {\n    this.setAttribute('volume', vol);\n    this.aCtx.volume = vol\n  }\n\n  get muted () {\n    const attrMuted = this.getAttribute('muted') === 'true'\n    if (attrMuted !== undefined) {\n      return attrMuted;\n    } else if (this.getAttribute('volume')) {\n      return Number.parseInt(this.getAttribute('volume')) === 0\n    } else {\n      return false\n    }\n  }\n\n  set muted (val) {\n    this.setAttribute('muted', val);\n    if (!val) {\n      this.aCtx.muted = false\n    } else {\n      this.aCtx.muted = true\n    }\n  }\n\n  get error () {\n    return this.vCtx.error || this.aCtx.error;\n  }\n\n  get buffered () {\n    return this.vCtx.buffered\n  }\n}\n// eslint-disable-next-line no-undef\ncustomElements.define('mobile-video', MobileVideo);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/mobile/mobile-video.js?");
=======
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _video_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./video-context */ \"../xgplayer-utils/src/mobile/video-context.js\");\n/* harmony import */ var _audio_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./audio-context */ \"../xgplayer-utils/src/mobile/audio-context.js\");\n/* harmony import */ var _ticker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ticker */ \"../xgplayer-utils/src/mobile/ticker.js\");\n\n\n\n/**\n * 音画同步调和器\n */\nclass AVReconciler {\n  constructor (props) {\n    this.aCtx = props.aCtx;\n    this.vCtx = props.vCtx;\n    this.video = props.video\n    this.timeoutId = null\n    this.start = null\n  }\n\n  doReconcile () {\n    const vCurTime = (this.vCtx.currentTime || 0);\n    const aCurTime = (this.aCtx.currentTime || 0) * 1000;\n\n    const gap = vCurTime - aCurTime;\n    if (this.timeoutId) {\n      return;\n    }\n    if (gap > 200) { // audio delayed for more than 100ms\n      this.video.start += gap\n      this.vCtx.pause()\n      this.timeoutId = setTimeout(() => {\n        this.vCtx.play()\n        this.timeoutId = null\n      }, gap)\n    } else if (gap < -120) {\n      this.video.start += gap\n    }\n  }\n\n  destroy () {\n    this.start = null\n    this.aCtx = null\n    this.vCtx = null\n  }\n}\n\n// eslint-disable-next-line no-undef\nclass MobileVideo extends HTMLElement {\n  constructor () {\n    super();\n    this._canvas = document.createElement('canvas')\n    this.handleAudioSourceEnd = this.handleAudioSourceEnd.bind(this)\n    this.played = false;\n    this.pendingPlayTask = null\n    this._paused = true;\n    this.videoMetaInited = false;\n    this.audioMetaInited = false;\n    this.init()\n  }\n\n  init () {\n    this.vCtx = new _video_context__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Object.assign({\n      canvas: this._canvas\n    }, { style: { width: this.width, height: this.height } }));\n    this.aCtx = new _audio_context__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({});\n    this.ticker = new (Object(_ticker__WEBPACK_IMPORTED_MODULE_2__[\"getTicker\"])())()\n    this.reconciler = new AVReconciler({\n      vCtx: this.vCtx,\n      aCtx: this.aCtx,\n      video: this\n    })\n\n    this.dispatchEvent(new Event('waiting'));\n    this.vCtx.oncanplay = () => {\n      if (!this.played) {\n        this.appendChild(this._canvas);\n      }\n      this.dispatchEvent(new Event('canplay'));\n    }\n\n    this.aCtx.on('AUDIO_SOURCE_END', this.handleAudioSourceEnd)\n  }\n\n  handleAudioSourceEnd () {\n    this.reconciler.doReconcile()\n    this.vCtx.cleanBuffer();\n  }\n\n  _cleanBuffer () {\n    this.vCtx.cleanBuffer()\n  }\n\n  destroy () {\n    this.aCtx.destroy()\n    this.vCtx.destroy()\n    this.ticker.stop()\n    this.start = null;\n    this.reconciler.destroy()\n    this.aCtx = null;\n    this.vCtx = null;\n    this.ticker = null;\n  }\n\n  onDemuxComplete (videoTrack, audioTrack) {\n    this.aCtx.decodeAudio(audioTrack);\n    this.vCtx.decodeVideo(videoTrack);\n  }\n\n  setAudioMeta (meta) {\n    if (this.audioMetaInited) {\n      this.aCtx.destroy();\n      this.aCtx = new _audio_context__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({});\n    }\n    this.aCtx.setAudioMetaData(meta);\n    this.audioMetaInited = true;\n  }\n\n  setVideoMeta (meta) {\n    if (this.videoMetaInited) {\n      this.vCtx.destroy();\n      this.vCtx = new _video_context__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Object.assign({\n        canvas: this._canvas\n      }, { style: { width: this.width, height: this.height } }));\n    }\n    this.vCtx.setVideoMetaData(meta);\n    this.videoMetaInited = true;\n  }\n\n  get width () {\n    return this.getAttribute('width') || this.videoWidth\n  }\n\n  set width (val) {\n    this.style.display = 'inline-block'\n    const pxVal = typeof val === 'number' ? `${val}px` : val\n    this.setAttribute('width', pxVal)\n    this.style.width = pxVal\n    this._canvas.style.width = pxVal;\n    this._canvas.width = val;\n  }\n\n  get height () {\n    return this.getAttribute('height')\n  }\n\n  set height (val) {\n    this.style.display = 'inline-block'\n    const pxVal = typeof val === 'number' ? `${val}px` : val\n    this.setAttribute('height', pxVal)\n    this.style.height = pxVal\n    this._canvas.style.height = pxVal;\n    this._canvas.height = val;\n  }\n\n  get videoWidth () {\n    if (this.vCtx && this.vCtx.videoWidth) {\n      return this.vCtx.videoWidth\n    }\n    return 0\n  }\n\n  get videoHeight () {\n    if (this.vCtx && this.vCtx.videoHeight) {\n      return this.vCtx.videoHeight\n    }\n    return 0\n  }\n\n  get src () {\n    return this.getAttribute('src');\n  }\n\n  set src (val) {\n    this.setAttribute('src', val);\n  }\n\n  get readyState () {\n    return this.videoMetaInited ? this.vCtx.readyState : 0\n  }\n\n  get seeking () {\n    return this.videoMetaInited ? this.vCtx.seeking : false\n  }\n\n  get currentTime () {\n    return this.videoMetaInited ? this.vCtx.currentTime / 1000 : 0\n  }\n\n  get duration () {\n    return this.audioMetaInited ? this.aCtx.duration : 0\n  }\n\n  get paused () {\n    return this._paused\n  }\n\n  get playbackRate () {\n    if (this.hasAttribute('playbackRate')) {\n      return this.getAttribute('playbackRate')\n    } else {\n      return 1.0\n    }\n  }\n\n  set playbackRate (val) {\n    this.setAttribute('playbackrate', val);\n    this.aCtx.playbackRate = val;\n    this.vCtx.playbackRate = val;\n\n    this.dispatchEvent(new Event('ratechange'))\n  }\n\n  get ended () {\n    if (this.audioMetaInited) {\n      return this.aCtx.ended;\n    }\n    return false;\n  }\n\n  get autoplay () {\n    if (this.hasAttribute('autoplay')) {\n      return this.getAttribute('autoplay')\n    } else {\n      return false\n    }\n  }\n  set autoplay (value) {\n    this.setAttribute('autoplay', value)\n  }\n  play () {\n    if (this.pendingPlayTask) {\n      return;\n    }\n\n    if (this.played) {\n      this.destroy()\n      this.init()\n    }\n    this.pendingPlayTask = Promise.all([\n      this.vCtx.play(),\n      this.aCtx.play().then(() => {\n        this.aCtx.muted = true\n      })\n    ]).then(() => {\n      this.aCtx.muted = false\n      this.ticker.start(() => {\n        if (!this.start) {\n          this.start = Date.now()\n        }\n        this._currentTime = Date.now() - this.start\n        this.vCtx._onTimer(this._currentTime)\n      })\n\n      this.pendingPlayTask = null\n      this.played = true;\n      this.dispatchEvent(new Event('playing'))\n      this.dispatchEvent(new Event('play'))\n      this._paused = false\n    })\n  }\n\n  pause () {\n    this._paused = true;\n    this.aCtx.pause()\n    this.vCtx.pause()\n\n    this.dispatchEvent(new Event('pause'))\n  }\n\n  get volume () {\n    return this.aCtx.volume\n  }\n\n  set volume (vol) {\n    this.setAttribute('volume', vol);\n    this.aCtx.volume = vol\n  }\n\n  get muted () {\n    const attrMuted = this.getAttribute('muted') === 'true'\n    if (attrMuted !== undefined) {\n      return attrMuted;\n    } else if (this.getAttribute('volume')) {\n      return Number.parseInt(this.getAttribute('volume')) === 0\n    } else {\n      return false\n    }\n  }\n\n  set muted (val) {\n    this.setAttribute('muted', val);\n    if (!val) {\n      this.aCtx.muted = false\n    } else {\n      this.aCtx.muted = true\n    }\n  }\n\n  get error () {\n    return this.vCtx.error || this.aCtx.error;\n  }\n\n  get buffered () {\n    return this.vCtx.buffered\n  }\n}\n// eslint-disable-next-line no-undef\ncustomElements.define('mobile-video', MobileVideo);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/mobile/mobile-video.js?");
>>>>>>> 6568d0dd7c2d795ab5b1bd65773d4c1f5f98fc06

/***/ }),

/***/ "../xgplayer-utils/src/mobile/sourcebuffer.js":
/*!****************************************************!*\
  !*** ../xgplayer-utils/src/mobile/sourcebuffer.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass SourceBuffer {\n  constructor (config) {\n    this.config = Object.assign({}, config);\n    this.type = this.config.type;\n    this.buffer = [];\n    this.currentGop = undefined;\n    this._lastGet = undefined;\n  }\n\n  push (frame) {\n    if (this.type === 'video') {\n      if (frame.isKeyframe) {\n        let currentGop = {\n          samples: [],\n          start: frame.dts,\n          end: frame.dts,\n          nextGop: undefined\n        };\n        if (this.currentGop) {\n          this.currentGop.nextGop = currentGop;\n        }\n        this.currentGop = currentGop;\n        this.buffer.push(this.currentGop);\n      }\n\n      if (this.currentGop) {\n        this.currentGop.samples.push(frame);\n\n        if (frame.dts < this.currentGop.start) {\n          this.currentGop.start = frame.dts;\n        }\n\n        if (frame.dts > this.currentGop.end) {\n          this.currentGop.end = frame.dts;\n        }\n      }\n    }\n  }\n\n  get (time) {\n    if (this.type === 'video') {\n      if (this.buffer.length < 1) {\n        return;\n      }\n\n      if (time === undefined) {\n        let sample = this._getNext();\n        return sample;\n      }\n    }\n  }\n\n  _getNext () {\n    if (!this._lastGet) {\n      let gop = this.buffer[0];\n      if (gop.samples.length < 1) {\n        return\n      }\n\n      this._lastGet = {\n        gop,\n        index: 0\n      }\n      return gop.samples[0];\n    } else {\n      let gop = this._lastGet.gop;\n      let sample = gop.samples[this._lastGet.index + 1];\n      if (sample) {\n        this._lastGet.index = this._lastGet.index + 1;\n        return sample;\n      } else {\n        gop = gop.nextGop;\n        if (!gop || gop.samples.length < 1) {\n          return;\n        }\n        sample = gop.samples[0];\n        this._lastGet = {\n          gop,\n          index: 0\n        }\n        return sample;\n      }\n    }\n  }\n\n  remove (start, end) {\n    if (this.buffer.length < 0) {\n      return;\n    }\n\n    let i = 0;\n    let gop = this.buffer[0];\n    while (gop) {\n      if (gop.end < end && gop.start >= start) {\n        this.buffer.splice(i, 1)\n        gop = this.buffer[i];\n      } else {\n        i += 1;\n        gop = this.buffer[i];\n      }\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SourceBuffer);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/mobile/sourcebuffer.js?");

/***/ }),

/***/ "../xgplayer-utils/src/mobile/ticker.js":
/*!**********************************************!*\
  !*** ../xgplayer-utils/src/mobile/ticker.js ***!
  \**********************************************/
/*! exports provided: getTicker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTicker\", function() { return getTicker; });\n/**\n * @author fuyuhao@bytedance.com\n */\n\nclass Ticker {\n  constructor (options) {\n    this.options = Object.assign({}, options || {}, {\n      interval: 16\n    })\n\n    this.callbacks = []\n  }\n\n  start(...callbacks) {\n    this.callbacks = callbacks\n  }\n\n  onTick () {\n    for (let i = 0, len = this.callbacks.length; i < len; i++) {\n      const callback = this.callbacks[i]\n      callback()\n    }\n  }\n\n  setInterval (interval) {\n    this.options.interval = interval\n    return this;\n  }\n}\n\n/**\n * ticker use requestAnimationFrame\n */\nclass RafTicker extends Ticker {\n  constructor (props) {\n    super(props);\n    this.prev = null;\n    this.timerId = null\n    this._subTimerId = null\n\n    this._tickFunc = RafTicker.getTickFunc()\n    this.tick = this.tick.bind(this)\n  }\n\n  start (...callbacks) {\n    super.start(...callbacks)\n    this.tick()\n  }\n\n  tick () {\n    this.nextTick();\n    this.onTick()\n  }\n\n  nextTick () {\n    const { _tickFunc } = this;\n    this.timerId = _tickFunc(this.tick)\n  }\n\n  stop () {\n    if (this.timerId) {\n      const cancelFunc = RafTicker.getCancelFunc()\n\n      cancelFunc(this.timerId)\n    }\n  }\n\n  resume() {\n    this.nextTick();\n  }\n\n  static getTickFunc () {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame\n  }\n\n  static getCancelFunc () {\n    return window.cancelAnimationFrame || window.webkitCancelAnimationFrame\n  }\n\n  static isSupported () {\n    return RafTicker.getTickFunc() !== undefined\n  }\n}\n\n/**\n * use setTimeout for browsers without raf support\n */\nclass TimeoutTicker extends Ticker {\n  constructor(config) {\n    super(config)\n    this.timeoutId = null\n\n  }\n\n  start (...callbacks) {\n    super.nextTick(...callbacks)\n    this.timeoutId = window.setInterval(() => {\n      this.onTick();\n    }, this.options.interval || 16)\n  }\n\n  stop () {\n    if (this.timeoutId) {\n      window.clearInterval(this.timeoutId)\n    }\n  }\n\n}\n\n/**\n * 返回Ticker构造函数\n * @returns {Ticker}\n */\nconst getTicker = () => {\n  if (RafTicker.isSupported()) {\n    return RafTicker\n  } else {\n    return TimeoutTicker\n  }\n}\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/mobile/ticker.js?");

/***/ }),

/***/ "../xgplayer-utils/src/mobile/video-context.js":
/*!*****************************************************!*\
  !*** ../xgplayer-utils/src/mobile/video-context.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var webworkify_webpack__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webworkify-webpack */ \"../xgplayer-utils/node_modules/webworkify-webpack/index.js\");\n/* harmony import */ var webworkify_webpack__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(webworkify_webpack__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _write_stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../write/stream */ \"../xgplayer-utils/src/write/stream.js\");\n/* harmony import */ var _xgplayer_codec_src_h264_nalunit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../xgplayer-codec/src/h264/nalunit */ \"../xgplayer-codec/src/h264/nalunit/index.js\");\n/* harmony import */ var _yuv_canvas__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./yuv-canvas */ \"../xgplayer-utils/src/mobile/yuv-canvas.js\");\n/* harmony import */ var _sourcebuffer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sourcebuffer */ \"../xgplayer-utils/src/mobile/sourcebuffer.js\");\n/* harmony import */ var _models_TimeRanges__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/TimeRanges */ \"../xgplayer-utils/src/models/TimeRanges.js\");\n\n\n\n\n\n\n\nclass VideoCanvas {\n  constructor (config) {\n    this.config = Object.assign({}, config);\n    this.canvas = this.config.canvas ? this.config.canvas : document.createElement('canvas');\n    this.source = new _sourcebuffer__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({type: 'video'});\n    this.preloadTime = this.config.preloadTime || 3;\n    this.oncanplay = undefined;\n    this.onFirstFrame = undefined;\n    this.meta = undefined;\n    this.readyStatus = 0;\n    this.paused = true;\n    this.count = 0;\n    this.currentTime = 0;\n    this.lastPlayed = 0;\n\n    this._decoderInited = false;\n    this._avccpushed = false;\n    this._decodedFrames = {};\n    this._lastSampleDts = undefined;\n    this._baseDts = undefined;\n    this._lastRenderTime = null\n    this.playFinish = null\n\n  }\n\n  pause () {\n    this.paused = true;\n  }\n\n  initWasmWorker () {\n    let _this = this;\n    this.wasmworker = webworkify_webpack__WEBPACK_IMPORTED_MODULE_0___default()(/*require.resolve*/(/*! ./worker.js */ \"../xgplayer-utils/src/mobile/worker.js\"));\n    this.wasmworker.postMessage({\n      msg: 'init',\n      meta: this.meta\n    })\n    this.wasmworker.addEventListener('message', msg => {\n      switch (msg.data.msg) {\n        case 'DECODER_READY':\n          _this._decoderInited = true;\n          break;\n        case 'DECODED':\n          this._onDecoded(msg.data);\n          break;\n      }\n    });\n  }\n\n  setVideoMetaData (meta) {\n    this.meta = meta;\n    if (!this._decoderInited) {\n      this.initWasmWorker();\n      return\n    }\n    this._avccpushed = true;\n    let data = new Uint8Array(meta.sps.byteLength + 4);\n    data.set([0, 0, 0, 1])\n    data.set(meta.sps, 4);\n    this.wasmworker.postMessage({\n      msg: 'decode',\n      data: data\n    })\n\n    data = new Uint8Array(meta.pps.byteLength + 4);\n    data.set([0, 0, 0, 1])\n    data.set(meta.pps, 4);\n    this.wasmworker.postMessage({\n      msg: 'decode',\n      data: data\n    })\n\n    if (!this.yuvCanvas) {\n      let config = Object.assign({meta, canvas: this.canvas}, this.config);\n      this.yuvCanvas = new _yuv_canvas__WEBPACK_IMPORTED_MODULE_3__[\"default\"](config);\n    }\n    this.readyStatus = 1;\n  }\n\n  decodeVideo (videoTrack) {\n    if (!this._decoderInited) {\n      return\n    }\n\n    if (!this._avccpushed) {\n      this.setVideoMetaData(this.meta);\n    }\n    let { samples } = videoTrack;\n    let sample = samples.shift();\n\n    while (sample) {\n      if (!this._baseDts) {\n        this._baseDts = sample.dts;\n      }\n      this.source.push(sample);\n      sample = samples.shift();\n    }\n\n    this._preload();\n  }\n\n  _preload () {\n    if (!this._lastSampleDts || this._lastSampleDts - this._baseDts < this.currentTime + this.preloadTime * 1000) {\n      let sample = this.source.get();\n      if (sample) {\n        this._lastSampleDts = sample.dts;\n        this._analyseNal(sample);\n      }\n\n      while (sample && this._lastSampleDts - this._baseDts < this.currentTime + this.preloadTime * 1000) {\n        sample = this.source.get();\n        if (sample) {\n          this._analyseNal(sample);\n          this._lastSampleDts = sample.dts;\n        }\n      }\n    }\n  }\n\n  _analyseNal (sample) {\n    let nals = _xgplayer_codec_src_h264_nalunit__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getAvccNals(new _write_stream__WEBPACK_IMPORTED_MODULE_1__[\"default\"](sample.data.buffer));\n\n    let length = 0;\n    for (let i = 0; i < nals.length; i++) {\n      let nal = nals[i];\n      length += nal.body.byteLength + 4;\n    }\n    let offset = 0;\n    let data = new Uint8Array(length);\n    for (let i = 0; i < nals.length; i++) {\n      let nal = nals[i];\n      data.set([0, 0, 0, 1], offset);\n      offset += 4;\n      data.set(new Uint8Array(nal.body), offset);\n      offset += nal.body.byteLength;\n    }\n    this.wasmworker.postMessage({\n      msg: 'decode',\n      data: data,\n      info: {\n        dts: sample.dts,\n        pts: sample.pts ? sample.pts : sample.dts + sample.cts,\n        key: sample.isKeyframe\n      }\n    })\n  }\n\n  _onDecoded (data) {\n    let {dts} = data.info\n    this._decodedFrames[dts] = data;\n    if (Object.keys(this._decodedFrames).length > 10) {\n      if (this.playFinish) {\n        this.playFinish()\n      }\n      if (this.oncanplay) {\n        this.oncanplay();\n      }\n    }\n  }\n\n  play () {\n    this.paused = false;\n    return new Promise((resolve) => {\n      this.playFinish = resolve\n    }).then(() => {\n      this.playFinish = null\n    })\n  }\n\n  _onTimer (currentTime) {\n    if (this.paused) {\n      return;\n    }\n    if (this.meta) {\n      if (this.meta.frameRate && this.meta.frameRate.fixed && this.meta.frameRate.fps) {\n      }\n      let frameTimes = Object.keys(this._decodedFrames);\n      if (frameTimes.length > 0) {\n        this.currentTime = currentTime;\n        let frameTime = -1;\n        for (let i = 0; i < frameTimes.length && Number.parseInt(frameTimes[i]) - this._baseDts <= this.currentTime; i++) {\n          frameTime = Number.parseInt(frameTimes[i - 1]);\n        }\n\n        let frame = this._decodedFrames[frameTime];\n        if (frame) {\n          this.yuvCanvas.render(frame.buffer, frame.width, frame.height, frame.yLinesize, frame.uvLinesize);\n        }\n        for (let i = 0; i < frameTimes.length; i++) {\n          if (Number.parseInt(frameTimes[i]) < frameTime) {\n            delete this._decodedFrames[frameTimes[i]];\n          }\n        }\n      }\n    }\n    this._lastRenderTime = Date.now()\n  }\n\n  cleanBuffer () {\n    if (this.currentTime > 1) {\n      this.source.remove(0, this.currentTime - 1);\n    }\n  }\n\n  destroy () {\n    this.wasmworker.postMessage({msg: 'destroy'})\n    this.wasmworker = null;\n    this.canvas = null\n    this.source = null\n    this._decoderInited = false;\n  }\n\n  get buffered () {\n    const ranges = []\n    let currentRange = {\n      start: null,\n      end: null\n    }\n    for (let i = 0; i < this.source.buffer.length; i++) {\n      const { start, end } = this.source.buffer[i];\n      if (!currentRange.start) {\n        currentRange.start = start;\n      }\n      if (!currentRange.end) {\n        currentRange.end = end;\n      }\n\n      if (start - currentRange.end > 1000) {\n        currentRange.start = currentRange.start / 1000\n        currentRange.end = currentRange.end / 1000\n        currentRange = {\n          start,\n          end\n        }\n      } else {\n        currentRange.end = end\n      }\n    }\n\n    if (currentRange.start !== null && currentRange.end !== null) {\n      currentRange.start = currentRange.start / 1000\n      currentRange.end = currentRange.end / 1000\n      ranges.push(currentRange)\n    }\n\n    return new _models_TimeRanges__WEBPACK_IMPORTED_MODULE_5__[\"default\"](ranges)\n  }\n\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (VideoCanvas);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/mobile/video-context.js?");

/***/ }),

/***/ "../xgplayer-utils/src/mobile/worker.js":
/*!**********************************************!*\
  !*** ../xgplayer-utils/src/mobile/worker.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const MAX_STREAM_BUFFER_LENGTH = 1024 * 1024;\nvar Decoder = function (self) {\n  this.inited = false;\n  this.self = self;\n  this.meta = this.self.meta;\n  this.infolist = {};\n  self.par_broadwayOnBroadwayInited = this.broadwayOnBroadwayInited.bind(this);\n  self.par_broadwayOnPictureDecoded = this.broadwayOnPictureDecoded.bind(this);\n}\n\nDecoder.prototype.toU8Array = function (ptr, length) {\n  return this.self.HEAPU8.subarray(ptr, ptr + length);\n}\n\nDecoder.prototype.init = function () {\n  Module._broadwayInit();\n  this.streamBuffer = this.toU8Array(Module._broadwayCreateStream(MAX_STREAM_BUFFER_LENGTH), MAX_STREAM_BUFFER_LENGTH);\n}\n\nDecoder.prototype.broadwayOnPictureDecoded = function (offset, width, height, yLinesize, uvLinesize, infoid) {\n  let info = Object.assign({}, this.infolist[infoid]);\n  let yRowcount = height;\n  let uvRowcount = height / 2;\n  if (this.meta.chromaFormat === 444 || this.meta.chromaFormat === 422) {\n    uvRowcount = height;\n  }\n  let data = this.toU8Array(offset, (yLinesize * yRowcount) + 2 * (uvLinesize * uvRowcount));\n  this.infolist[infoid] = null;\n  let datetemp = new Uint8Array(data.length);\n  datetemp.set(data);\n  let buffer = datetemp.buffer;\n  this.self.postMessage({\n    msg: 'DECODED',\n    width,\n    height,\n    yLinesize,\n    uvLinesize,\n    info,\n    buffer\n  }, [buffer]);\n}\n\nDecoder.prototype.broadwayOnBroadwayInited = function () {\n  this.inited = true;\n  this.self.postMessage({msg: 'DECODER_READY'});\n}\n\nDecoder.prototype.decode = function (data, info) {\n  let time = parseInt(new Date().getTime());\n  let infoid = time - (Math.floor(time / 10e8) * 10e8);\n  this.infolist[infoid] = info;\n  this.streamBuffer.set(data);\n  Module._broadwayPlayStream(data.length, infoid);\n}\n\nDecoder.prototype.destroy = function () {\n  Module._broadwayExit();\n}\n\nvar decoder;\n\nfunction onPostRun () {\n  decoder = new Decoder(this);\n  decoder.init();\n}\n\nfunction init (meta) {\n  self.importScripts('https://sf1-vcloudcdn.pstatp.com/obj/ttfe/media/decoder/h264/decoder.js');\n  addOnPostRun(onPostRun.bind(self));\n}\n\nmodule.exports = function (self) {\n  self.addEventListener('message', function (e) {\n    var data = e.data;\n    if (!data.msg) {\n      self.postMessage({\n        msg: 'ERROR:invalid message'\n      })\n    } else {\n      switch (data.msg) {\n        case 'init':\n          console.log(data);\n          self.meta = data.meta;\n          init()\n          break;\n        case 'decode':\n          decoder.decode(data.data, data.info);\n          break;\n        case 'destory':\n          decoder.destroy();\n          break\n        default:\n          break;\n      }\n    }\n  }, false);\n}\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/mobile/worker.js?");

/***/ }),

/***/ "../xgplayer-utils/src/mobile/yuv-canvas.js":
/*!**************************************************!*\
  !*** ../xgplayer-utils/src/mobile/yuv-canvas.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass YUVCanvas {\n  constructor (configs) {\n    this.configs = Object.assign({}, configs);\n    this.canvas = this.configs.canvas;\n    this.meta = Object.assign({}, this.configs.meta);\n    this.chroma = this.meta.chromaFormat;\n    this.height = this.meta.presentHeight;\n    this.width = this.meta.presentWidth;\n    // this.canvas.width = this.meta.presentWidth;\n    // this.canvas.height = this.meta.presentHeight;\n    // this.canvas.style.width = configs.style.width;\n    // this.canvas.style.height = configs.style.height;\n    this._initContextGL();\n    if (this.contextGL) {\n      this._initProgram();\n      this._initBuffers();\n      this._initTextures();\n    };\n  }\n\n  _initContextGL () {\n    var canvas = this.canvas;\n    var gl = null;\n\n    var validContextNames = ['webgl', 'experimental-webgl', 'moz-webgl', 'webkit-3d'];\n    var nameIndex = 0;\n\n    while (!gl && nameIndex < validContextNames.length) {\n      var contextName = validContextNames[nameIndex];\n\n      try {\n        if (this.contextOptions) {\n          gl = canvas.getContext(contextName, this.contextOptions);\n        } else {\n          gl = canvas.getContext(contextName);\n        };\n      } catch (e) {\n        gl = null;\n      }\n\n      if (!gl || typeof gl.getParameter !== 'function') {\n        gl = null;\n      }\n\n      ++nameIndex;\n    };\n\n    this.contextGL = gl;\n  };\n\n  _initProgram () {\n    var gl = this.contextGL;\n\n    // vertex shader is the same for all types\n    var vertexShaderScript;\n    var fragmentShaderScript;\n    vertexShaderScript = [\n      'attribute vec4 vertexPos;',\n      'attribute vec4 texturePos;',\n      'attribute vec4 uTexturePos;',\n      'attribute vec4 vTexturePos;',\n      'varying vec2 textureCoord;',\n      'varying vec2 uTextureCoord;',\n      'varying vec2 vTextureCoord;',\n\n      'void main()',\n      '{',\n      '  gl_Position = vertexPos;',\n      '  textureCoord = texturePos.xy;',\n      '  uTextureCoord = uTexturePos.xy;',\n      '  vTextureCoord = vTexturePos.xy;',\n      '}'\n    ].join('\\n');\n\n    fragmentShaderScript = [\n      'precision highp float;',\n      'varying highp vec2 textureCoord;',\n      'varying highp vec2 uTextureCoord;',\n      'varying highp vec2 vTextureCoord;',\n      'uniform sampler2D ySampler;',\n      'uniform sampler2D uSampler;',\n      'uniform sampler2D vSampler;',\n      'uniform mat4 YUV2RGB;',\n\n      'void main(void) {',\n      '  highp float y = texture2D(ySampler,  textureCoord).r;',\n      '  highp float u = texture2D(uSampler,  uTextureCoord).r;',\n      '  highp float v = texture2D(vSampler,  vTextureCoord).r;',\n      '  gl_FragColor = vec4(y, u, v, 1) * YUV2RGB;',\n      '}'\n    ].join('\\n');\n\n    var YUV2RGB = [\n      1.16438, 0.00000, 1.59603, -0.87079,\n      1.16438, -0.39176, -0.81297, 0.52959,\n      1.16438, 2.01723, 0.00000, -1.08139,\n      0, 0, 0, 1\n    ];\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexShaderScript);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      console.log('Vertex shader failed to compile: ' + gl.getShaderInfoLog(vertexShader));\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentShaderScript);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      console.log('Fragment shader failed to compile: ' + gl.getShaderInfoLog(fragmentShader));\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      console.log('Program failed to compile: ' + gl.getProgramInfoLog(program));\n    }\n\n    gl.useProgram(program);\n\n    var YUV2RGBRef = gl.getUniformLocation(program, 'YUV2RGB');\n    gl.uniformMatrix4fv(YUV2RGBRef, false, YUV2RGB);\n\n    this.shaderProgram = program;\n  }\n\n  _initBuffers () {\n    var gl = this.contextGL;\n    var program = this.shaderProgram;\n\n    var vertexPosBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexPosBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, -1, 1, 1, -1, -1, -1]), gl.STATIC_DRAW);\n\n    var vertexPosRef = gl.getAttribLocation(program, 'vertexPos');\n    gl.enableVertexAttribArray(vertexPosRef);\n    gl.vertexAttribPointer(vertexPosRef, 2, gl.FLOAT, false, 0, 0);\n\n    var texturePosBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texturePosBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]), gl.STATIC_DRAW);\n\n    var texturePosRef = gl.getAttribLocation(program, 'texturePos');\n    gl.enableVertexAttribArray(texturePosRef);\n    gl.vertexAttribPointer(texturePosRef, 2, gl.FLOAT, false, 0, 0);\n\n    this.texturePosBuffer = texturePosBuffer;\n\n    var uTexturePosBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uTexturePosBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]), gl.STATIC_DRAW);\n\n    var uTexturePosRef = gl.getAttribLocation(program, 'uTexturePos');\n    gl.enableVertexAttribArray(uTexturePosRef);\n    gl.vertexAttribPointer(uTexturePosRef, 2, gl.FLOAT, false, 0, 0);\n\n    this.uTexturePosBuffer = uTexturePosBuffer;\n\n    var vTexturePosBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vTexturePosBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]), gl.STATIC_DRAW);\n\n    var vTexturePosRef = gl.getAttribLocation(program, 'vTexturePos');\n    gl.enableVertexAttribArray(vTexturePosRef);\n    gl.vertexAttribPointer(vTexturePosRef, 2, gl.FLOAT, false, 0, 0);\n\n    this.vTexturePosBuffer = vTexturePosBuffer;\n  };\n\n  _initTextures () {\n    var gl = this.contextGL;\n    var program = this.shaderProgram;\n    var yTextureRef = this._initTexture();\n    var ySamplerRef = gl.getUniformLocation(program, 'ySampler');\n    gl.uniform1i(ySamplerRef, 0);\n    this.yTextureRef = yTextureRef;\n\n    var uTextureRef = this._initTexture();\n    var uSamplerRef = gl.getUniformLocation(program, 'uSampler');\n    gl.uniform1i(uSamplerRef, 1);\n    this.uTextureRef = uTextureRef;\n\n    var vTextureRef = this._initTexture();\n    var vSamplerRef = gl.getUniformLocation(program, 'vSampler');\n    gl.uniform1i(vSamplerRef, 2);\n    this.vTextureRef = vTextureRef;\n  }\n\n  _initTexture () {\n    var gl = this.contextGL;\n\n    var textureRef = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, textureRef);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    return textureRef;\n  }\n\n  _drawPictureGL (data, width, height, yLinesize, uvLinesize) {\n    var ylen = yLinesize * height;\n    var uvlen = uvLinesize * height / 2;\n    if (this.chroma === 444 || this.chroma === 422) {\n      uvlen *= 2;\n    }\n    data = new Uint8Array(data);\n    let renderData = {\n      yData: data.subarray(0, ylen),\n      uData: data.subarray(ylen, ylen + uvlen),\n      vData: data.subarray(ylen + uvlen, ylen + uvlen + uvlen)\n    }\n    this._drawPictureGL420(renderData, width, height, yLinesize, uvLinesize);\n  }\n\n  _drawPictureGL420 (data, width, height, yLinesize, uvLinesize) {\n    var gl = this.contextGL;\n    var texturePosBuffer = this.texturePosBuffer;\n    var uTexturePosBuffer = this.uTexturePosBuffer;\n    var vTexturePosBuffer = this.vTexturePosBuffer;\n\n    var yTextureRef = this.yTextureRef;\n    var uTextureRef = this.uTextureRef;\n    var vTextureRef = this.vTextureRef;\n\n    var yData = data.yData;\n    var uData = data.uData;\n    var vData = data.vData;\n\n    var yDataPerRow = yLinesize;\n    var yRowCnt = height;\n\n    var uDataPerRow = width / 2;\n    var uRowCnt = height / 2;\n\n    if (this.chroma === 422 || this.chroma === 444) {\n      uRowCnt = height;\n    }\n\n    var vDataPerRow = uvLinesize;\n    var vRowCnt = uRowCnt;\n\n    let ratiow = this.canvas.width / this.width;\n    let ratioh = this.canvas.height / this.height;\n    let left = 0;\n    let top = 0;\n    let w = this.canvas.width;\n    let h = this.canvas.height;\n    if (ratiow < ratioh) {\n      h = (this.height * this.canvas.width / this.width);\n      top = parseInt((this.canvas.height - (this.height * this.canvas.width / this.width)) / 2);\n    } else {\n      w = (this.width * this.canvas.height / this.height);\n      left = parseInt((this.canvas.width - (this.width * this.canvas.height / this.height)) / 2);\n    }\n    gl.viewport(left, top, w, h);\n\n    var texturePosValues = new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]);\n    gl.bindBuffer(gl.ARRAY_BUFFER, texturePosBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, texturePosValues, gl.DYNAMIC_DRAW);\n\n    var uTexturePosValues = new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]);\n    gl.bindBuffer(gl.ARRAY_BUFFER, uTexturePosBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, uTexturePosValues, gl.DYNAMIC_DRAW);\n\n    var vTexturePosValues = new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vTexturePosBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vTexturePosValues, gl.DYNAMIC_DRAW);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, yTextureRef);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, yDataPerRow, yRowCnt, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, yData);\n\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, uTextureRef);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, uDataPerRow, uRowCnt, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, uData);\n    \n    gl.activeTexture(gl.TEXTURE2);\n    gl.bindTexture(gl.TEXTURE_2D, vTextureRef);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, vDataPerRow, vRowCnt, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, vData);\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  _drawPictureRGB (data) {\n\n  }\n\n  render (data, width, height, yLinesize, uvLinesize) {\n    var gl = this.contextGL;\n    if (gl) {\n      this._drawPictureGL(data, width, height, yLinesize, uvLinesize);\n    } else {\n      this._drawPictureRGB(data);\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (YUVCanvas);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/mobile/yuv-canvas.js?");

/***/ }),

/***/ "../xgplayer-utils/src/models/TimeRanges.js":
/*!**************************************************!*\
  !*** ../xgplayer-utils/src/models/TimeRanges.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TimeRanges; });\nclass TimeRanges {\n  constructor (ranges) {\n    this.ranges = ranges || [];\n  }\n\n  start (idx) {\n    return this.ranges[idx] ? this.ranges[idx].start : 0\n  }\n\n  end (idx) {\n    return this.ranges[idx] ? this.ranges[idx].end : 0\n  }\n\n  add (range) {\n    this.ranges.push(range)\n  }\n\n  get length () {\n    return this.ranges.length\n  }\n}\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/models/TimeRanges.js?");

/***/ }),

/***/ "../xgplayer-utils/src/models/media-info.js":
/*!**************************************************!*\
  !*** ../xgplayer-utils/src/models/media-info.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MediaInfo; });\nconst isObjectFilled = (obj) => {\n  for (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (obj[key] === null) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\nclass MediaInfo {\n  constructor () {\n    this.mimeType = null\n    this.duration = null\n\n    this.hasVideo = null\n    this.video = {\n      codec: null,\n      width: null,\n      height: null,\n      profile: null,\n      level: null,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      chromaFormat: null,\n      parRatio: {\n        width: 1,\n        height: 1\n      }\n    }\n\n    this.hasAudio = null\n\n    this.audio = {\n      codec: null,\n      sampleRate: null,\n      sampleRateIndex: null,\n      channelCount: null\n    }\n  }\n\n  isComplete () {\n    return MediaInfo.isBaseInfoReady(this) && MediaInfo.isVideoReady(this) && MediaInfo.isAudioReady(this)\n  }\n\n  static isBaseInfoReady (mediaInfo) {\n    return isObjectFilled(mediaInfo)\n  }\n\n  static isVideoReady (mediaInfo) {\n    if (!mediaInfo.hasVideo) {\n      return true\n    }\n\n    return isObjectFilled(mediaInfo.video)\n  }\n\n  static isAudioReady (mediaInfo) {\n    if (!mediaInfo.hasAudio) {\n      return true\n    }\n\n    return isObjectFilled(mediaInfo.video)\n  }\n}\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/models/media-info.js?");

/***/ }),

/***/ "../xgplayer-utils/src/models/media-sample.js":
/*!****************************************************!*\
  !*** ../xgplayer-utils/src/models/media-sample.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MediaSample; });\nclass MediaSample {\n  constructor (info) {\n    let _default = MediaSample.getDefaultInf()\n\n    if (!info || Object.prototype.toString.call(info) !== '[object Object]') {\n      return _default\n    }\n    let sample = Object.assign({}, _default, info)\n\n    Object.entries(sample).forEach(([k, v]) => {\n      this[k] = v\n    })\n  }\n\n  static getDefaultInf () {\n    return {\n      dts: null,\n      pts: null,\n      duration: null,\n      position: null,\n      isRAP: false, // is Random access point\n      originDts: null\n    }\n  }\n}\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/models/media-sample.js?");

/***/ }),

/***/ "../xgplayer-utils/src/models/media-segment-list.js":
/*!**********************************************************!*\
  !*** ../xgplayer-utils/src/models/media-segment-list.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MediaSegmentList; });\nclass MediaSegmentList {\n\n    constructor (type) {\n        this._type = type;\n        this._list = [];\n        this._lastAppendLocation = -1; // cached last insert location\n    }\n\n    get type () {\n        return this._type;\n    }\n\n    get length () {\n        return this._list.length;\n    }\n\n    isEmpty () {\n        return this._list.length === 0;\n    }\n\n    clear () {\n        this._list = [];\n        this._lastAppendLocation = -1;\n    }\n\n    _searchNearestSegmentBefore (beginDts) {\n        let list = this._list;\n        if (list.length === 0) {\n            return -2;\n        }\n        let last = list.length - 1;\n        let mid = 0;\n        let lbound = 0;\n        let ubound = last;\n\n        let idx = 0;\n\n        if (beginDts < list[0].originDts) {\n            idx = -1;\n            return idx;\n        }\n\n        while (lbound <= ubound) {\n            mid = lbound + Math.floor((ubound - lbound) / 2);\n            if (mid === last || (beginDts > list[mid].lastSample.originDts\n                    && (beginDts < list[mid + 1].originDts))) {\n                idx = mid;\n                break;\n            } else if (list[mid].originDts < beginDts) {\n                lbound = mid + 1;\n            } else {\n                ubound = mid - 1;\n            }\n        }\n        return idx;\n    }\n\n    _searchNearestSegmentAfter (beginDts) {\n        return this._searchNearestSegmentBefore(beginDts) + 1;\n    }\n\n    append (segment) {\n        let list = this._list;\n        let lastAppendIdx = this._lastAppendLocation;\n        let insertIdx = 0;\n\n        if (lastAppendIdx !== -1 && lastAppendIdx < list.length\n            && segment.originStartDts >= list[lastAppendIdx].lastSample.originDts\n            && ((lastAppendIdx === list.length - 1)\n                || (lastAppendIdx < list.length - 1\n                    && segment.originStartDts < list[lastAppendIdx + 1].originStartDts))) {\n            insertIdx = lastAppendIdx + 1; // use cached location idx\n        } else {\n            if (list.length > 0) {\n                insertIdx = this._searchNearestSegmentBefore(segment.originStartDts) + 1;\n            }\n        }\n\n        this._lastAppendLocation = insertIdx;\n        this._list.splice(insertIdx, 0, segment);\n    }\n\n    getLastSegmentBefore (beginDts) {\n        let idx = this._searchNearestSegmentBefore(beginDts);\n        if (idx >= 0) {\n            return this._list[idx];\n        } else { // -1\n            return null;\n        }\n    }\n\n    getLastSampleBefore (beginDts) {\n        let segment = this.getLastSegmentBefore(beginDts);\n        if (segment !== null) {\n            return segment.lastSample;\n        } else {\n            return null;\n        }\n    }\n\n    getLastRAPBefore (beginDts) {\n        let segmentIdx = this._searchNearestSegmentBefore(beginDts);\n        let randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n        while (randomAccessPoints.length === 0 && segmentIdx > 0) {\n            segmentIdx--;\n            randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n        }\n        if (randomAccessPoints.length > 0) {\n            return randomAccessPoints[randomAccessPoints.length - 1];\n        } else {\n            return null;\n        }\n    }\n\n}\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/models/media-segment-list.js?");

/***/ }),

/***/ "../xgplayer-utils/src/models/media-segment.js":
/*!*****************************************************!*\
  !*** ../xgplayer-utils/src/models/media-segment.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MediaSegment; });\nclass MediaSegment {\n    constructor () {\n        this.startDts = -1;\n        this.endDts = -1;\n        this.startPts = -1;\n        this.endPts = -1;\n        this.originStartDts = -1;\n        this.originEndDts = -1;\n        this.randomAccessPoints = [];\n        this.firstSample = null;\n        this.lastSample = null;\n    }\n\n    addRAP (sample) {\n        sample.isRAP = true;\n        this.randomAccessPoints.push(sample);\n    }\n}\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/models/media-segment.js?");

/***/ }),

/***/ "../xgplayer-utils/src/models/track-meta.js":
/*!**************************************************!*\
  !*** ../xgplayer-utils/src/models/track-meta.js ***!
  \**************************************************/
/*! exports provided: AudioTrackMeta, VideoTrackMeta */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AudioTrackMeta\", function() { return AudioTrackMeta; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VideoTrackMeta\", function() { return VideoTrackMeta; });\nclass AudioTrackMeta {\n  constructor (meta) {\n    const _default = {\n      sampleRate: 48000,\n      channelCount: 2,\n      codec: 'mp4a.40.2',\n      config: [41, 401, 136, 0],\n      duration: 0,\n      id: 2,\n      refSampleDuration: 21,\n      sampleRateIndex: 3,\n      timescale: 1000,\n      type: 'audio'\n    }\n    if (meta) {\n      return Object.assign({}, _default, meta)\n    }\n    return _default\n  }\n\n  destroy () {\n    this.init = null\n  }\n}\n\nclass VideoTrackMeta {\n  constructor (meta) {\n    const _default = {\n      avcc: null,\n      sps: new Uint8Array(0),\n      pps: new Uint8Array(0),\n      chromaFormat: 420,\n      codec: 'avc1.640020',\n      codecHeight: 720,\n      codecWidth: 1280,\n      duration: 0,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      id: 1,\n      level: '3.2',\n      presentHeight: 720,\n      presentWidth: 1280,\n      profile: 'High',\n      refSampleDuration: 40,\n      parRatio: {\n        height: 1,\n        width: 1\n      },\n      timescale: 1000,\n      type: 'video'\n    }\n\n    if (meta) {\n      return Object.assign({}, _default, meta)\n    }\n    return _default\n  }\n\n  destroy () {\n    this.init = null\n    this.sps = null\n    this.pps = null\n  }\n}\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/models/track-meta.js?");

/***/ }),

/***/ "../xgplayer-utils/src/models/track-sample.js":
/*!****************************************************!*\
  !*** ../xgplayer-utils/src/models/track-sample.js ***!
  \****************************************************/
/*! exports provided: AudioTrackSample, VideoTrackSample */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AudioTrackSample\", function() { return AudioTrackSample; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VideoTrackSample\", function() { return VideoTrackSample; });\nclass AudioTrackSample {\n  constructor (info) {\n    let _default = AudioTrackSample.getDefault()\n    if (!info) {\n      return _default\n    }\n    let sample = Object.assign({}, _default, info)\n\n    return sample\n  }\n\n  static getDefault () {\n    return {\n      dts: null,\n      pts: null,\n      data: new Uint8Array()\n    }\n  }\n}\n\nclass VideoTrackSample {\n  constructor (info) {\n    let _default = VideoTrackSample.getDefault()\n\n    if (!info) {\n      return _default\n    }\n    let sample = Object.assign({}, _default, info)\n\n    return sample\n  }\n\n  static getDefault () {\n    return {\n      dts: null,\n      pts: null,\n      isKeyframe: false, // is Random access point\n      originDts: null,\n      data: new Uint8Array()\n    }\n  }\n}\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/models/track-sample.js?");

/***/ }),

/***/ "../xgplayer-utils/src/mse/index.js":
/*!******************************************!*\
  !*** ../xgplayer-utils/src/mse/index.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass MSE {\n  constructor (configs) {\n    this.configs = Object.assign({}, configs);\n    this.container = this.configs.container;\n    this.mediaSource = null;\n    this.sourceBuffers = {};\n    this.preloadTime = this.configs.preloadTime || 1;\n    this.onSourceOpen = this.onSourceOpen.bind(this)\n    this.onTimeUpdate = this.onTimeUpdate.bind(this)\n    this.onUpdateEnd = this.onUpdateEnd.bind(this)\n    this.onWaiting = this.onWaiting.bind(this)\n  }\n\n  init () {\n    // eslint-disable-next-line no-undef\n    this.mediaSource = new self.MediaSource();\n    this.mediaSource.addEventListener('sourceopen', this.onSourceOpen);\n    this.container.src = URL.createObjectURL(this.mediaSource);\n    this.url = this.container.src;\n    this.container.addEventListener('timeupdate', this.onTimeUpdate);\n    this.container.addEventListener('waiting', this.onWaiting);\n  }\n\n  onTimeUpdate () {\n    this.emit('TIME_UPDATE', this.container);\n  }\n\n  onWaiting () {\n    this.emit('WAITING', this.container);\n  }\n\n  onSourceOpen () {\n    this.addSourceBuffers();\n  }\n\n  onUpdateEnd () {\n    this.emit('SOURCE_UPDATE_END');\n    this.doAppend()\n  }\n  addSourceBuffers () {\n    if (this.mediaSource.readyState !== 'open') {\n      return;\n    }\n    let sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n    let tracks = this._context.getInstance('TRACKS');\n    let track;\n\n    sources = sources.sources;\n    let add = false;\n    for (let i = 0, k = Object.keys(sources).length; i < k; i++) {\n      let type = Object.keys(sources)[i];\n      if (type === 'audio') {\n        track = tracks.audioTrack;\n      } else if (type === 'video') {\n        track = tracks.videoTrack;\n        // return;\n      }\n      if (track) {\n        let dur = type === 'audio' ? 21 : 40;\n        if (track.meta && track.meta.refSampleDuration) dur = track.meta.refSampleDuration;\n        if (sources[type].data.length >= (this.preloadTime / dur)) {\n          add = true;\n        }\n      }\n    }\n\n    if (add) {\n      if (Object.keys(this.sourceBuffers).length > 0) {\n        return;\n      }\n      for (let i = 0, k = Object.keys(sources).length; i < k; i++) {\n        let type = Object.keys(sources)[i];\n        let source = sources[type]\n        let mime = (type === 'video') ? 'video/mp4;codecs=' + source.mimetype : 'audio/mp4;codecs=' + source.mimetype\n        let sourceBuffer = this.mediaSource.addSourceBuffer(mime);\n        this.sourceBuffers[type] = sourceBuffer;\n        sourceBuffer.addEventListener('updateend', this.onUpdateEnd);\n        this.doAppend();\n      }\n    }\n  }\n\n  doAppend () {\n    let sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n    if (sources) {\n      for (let i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        let type = Object.keys(this.sourceBuffers)[i]\n        let sourceBuffer = this.sourceBuffers[type];\n        if (!sourceBuffer.updating) {\n          let source = sources.sources[type];\n          if (source && !source.inited) {\n            // console.log('append initial segment')\n            sourceBuffer.appendBuffer(source.init.buffer.buffer);\n            source.inited = true;\n          } else if (source) {\n            let data = source.data.shift()\n            if (data) {\n              sourceBuffer.appendBuffer(data.buffer.buffer);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  endOfStream () {\n    const { readyState, activeSourceBuffers } = this.mediaSource;\n    if (readyState === 'open' && activeSourceBuffers.length === 0) {\n      try {\n        this.mediaSource.endOfStream()\n      } catch (e) {\n        // log\n      }\n    }\n  }\n\n  remove (end, start = 0) {\n    for (let i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n      let buffer = this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];\n      if (!buffer.updating) {\n        // console.log(start, end)\n        buffer.remove(start, end);\n      }\n    }\n  }\n  removeBuffers () {\n    const taskList = []\n    for (let i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n      let buffer = this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];\n      buffer.removeEventListener('updateend', this.onUpdateEnd);\n\n      let task;\n      if (buffer.updating) {\n        task = new Promise((resolve) => {\n          const doCleanBuffer = function () {\n            let retryTime = 3\n\n            const clean = () => {\n              if (!buffer.updating) {\n                MSE.clearBuffer(buffer)\n                resolve()\n              } else if (retryTime > 0){\n                setTimeout(clean, 200)\n                retryTime--\n              } else {\n                resolve()\n              }\n            }\n\n            setTimeout(clean, 200)\n            buffer.removeEventListener('updateend', doCleanBuffer)\n          }\n          buffer.addEventListener('updateend', doCleanBuffer)\n        })\n      } else {\n        MSE.clearBuffer(buffer)\n        task = Promise.resolve()\n      }\n\n      taskList.push(task)\n    }\n\n    return Promise.all(taskList)\n  }\n\n  destroy () {\n    return this.removeBuffers().then(() => {\n      for (let i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        let buffer = this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];\n        this.mediaSource.removeSourceBuffer(buffer);\n        delete this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];\n      }\n\n      this.container.removeEventListener('timeupdate', this.onTimeUpdate);\n      this.container.removeEventListener('waiting', this.onWaiting);\n      this.mediaSource.removeEventListener('sourceopen', this.onSourceOpen);\n\n      this.endOfStream()\n      window.URL.revokeObjectURL(this.url);\n\n      this.url = null\n      this.configs = {};\n      this.container = null;\n      this.mediaSource = null;\n      this.sourceBuffers = {};\n      this.preloadTime = 1;\n    })\n  }\n\n  static clearBuffer (buffer) {\n    const buffered = buffer.buffered;\n    let bEnd = 0.1\n    for (let i = 0, len = buffered.length; i < len; i++) {\n      bEnd = buffered.end(i)\n    }\n    try {\n      buffer.remove(0, bEnd)\n    } catch (e) {\n      // DO NOTHING\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (MSE);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/mse/index.js?");

/***/ }),

/***/ "../xgplayer-utils/src/write/buffer.js":
/*!*********************************************!*\
  !*** ../xgplayer-utils/src/write/buffer.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var concat_typed_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! concat-typed-array */ \"../xgplayer-utils/node_modules/concat-typed-array/lib/index.js\");\n/* harmony import */ var concat_typed_array__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(concat_typed_array__WEBPACK_IMPORTED_MODULE_0__);\n\n\nclass Buffer {\n  constructor (buffer) {\n    this.buffer = buffer || new Uint8Array(0)\n  }\n\n  write (...buffer) {\n    buffer.forEach(item => {\n      this.buffer = concat_typed_array__WEBPACK_IMPORTED_MODULE_0___default()(Uint8Array, this.buffer, item)\n    })\n  }\n\n  static writeUint32 (value) {\n    return new Uint8Array([\n      value >> 24,\n      (value >> 16) & 0xff,\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n\n  static readAsInt (arr) {\n    let temp = ''\n\n    function padStart4Hex (hexNum) {\n      let hexStr = hexNum.toString(16)\n      return hexStr.padStart(2, '0')\n    }\n\n    arr.forEach(num => {\n      temp += padStart4Hex(num)\n    })\n    return parseInt(temp, 16)\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Buffer);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/write/buffer.js?");

/***/ }),

/***/ "../xgplayer-utils/src/write/stream.js":
/*!*********************************************!*\
  !*** ../xgplayer-utils/src/write/stream.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Stream {\n  constructor (buffer) {\n    if (buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.dataview = new DataView(buffer);\n      this.dataview.position = 0;\n    } else {\n      throw new Error('data is invalid');\n    }\n  }\n\n  get length () {\n    return this.buffer.byteLength;\n  }\n\n  set position (value) {\n    this.dataview.position = value;\n  }\n\n  get position () {\n    return this.dataview.position;\n  }\n\n  back (count) {\n    this.position -= count;\n  }\n\n  skip (count) {\n    let loop = Math.floor(count / 4);\n    let last = count % 4;\n    for (let i = 0; i < loop; i++) {\n      Stream.readByte(this.dataview, 4);\n    }\n    if (last > 0) {\n      Stream.readByte(this.dataview, last);\n    }\n  }\n\n  /**\n   * [readByte 从DataView中读取数据]\n   * @param  {DataView} buffer [DataView实例]\n   * @param  {Number} size   [读取字节数]\n   * @return {Number}        [整数]\n   */\n  static readByte (buffer, size, sign) {\n    let res;\n    switch (size) {\n      case 1:\n        if (sign) {\n          res = buffer.getInt8(buffer.position);\n        } else {\n          res = buffer.getUint8(buffer.position);\n        }\n        break;\n      case 2:\n        if (sign) {\n          res = buffer.getInt16(buffer.position);\n        } else {\n          res = buffer.getUint16(buffer.position);\n        }\n        break;\n      case 3:\n        if (sign) {\n          throw new Error('not supported for readByte 3');\n        } else {\n          res = buffer.getUint8(buffer.position) << 16;\n          res |= buffer.getUint8(buffer.position + 1) << 8;\n          res |= buffer.getUint8(buffer.position + 2);\n        }\n        break;\n      case 4:\n        if (sign) {\n          res = buffer.getInt32(buffer.position);\n        } else {\n          res = buffer.getUint32(buffer.position);\n        }\n        break;\n      case 8:\n        if (sign) {\n          throw new Error('not supported for readBody 8');\n        } else {\n          res = buffer.getUint32(buffer.position) << 32;\n          res |= buffer.getUint32(buffer.position + 4);\n        }\n        break;\n      default:\n        res = '';\n    }\n    buffer.position += size;\n    return res;\n  }\n\n  readUint8 () {\n    return Stream.readByte(this.dataview, 1);\n  }\n\n  readUint16 () {\n    return Stream.readByte(this.dataview, 2);\n  }\n\n  readUint24 () {\n    return Stream.readByte(this.dataview, 3);\n  }\n\n  readUint32 () {\n    return Stream.readByte(this.dataview, 4);\n  }\n\n  readUint64 () {\n    return Stream.readByte(this.dataview, 8);\n  }\n\n  readInt8 () {\n    return Stream.readByte(this.dataview, 1, true);\n  }\n  readInt16 () {\n    return Stream.readByte(this.dataview, 2, true);\n  }\n\n  readInt32 () {\n    return Stream.readByte(this.dataview, 4, true);\n  }\n\n  writeUint32 (value) {\n    return new Uint8Array([\n      value >>> 24 & 0xff,\n      value >>> 16 & 0xff,\n      value >>> 8 & 0xff,\n      value & 0xff\n    ]);\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Stream);\n\n\n//# sourceURL=webpack://xgplayer/../xgplayer-utils/src/write/stream.js?");

/***/ }),

<<<<<<< HEAD
/***/ "../xgplayer/dist/index.js":
/*!*********************************!*\
  !*** ../xgplayer/dist/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,t){ true?module.exports=t():undefined}(window,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}({\"./node_modules/css-loader/index.js?!./node_modules/postcss-loader/lib/index.js!./node_modules/sass-loader/lib/loader.js!./src/skin/style/index.scss\":\n/*!**************************************************************************************************************************************************!*\\\n  !*** ./node_modules/css-loader??ref--5-1!./node_modules/postcss-loader/lib!./node_modules/sass-loader/lib/loader.js!./src/skin/style/index.scss ***!\n  \\**************************************************************************************************************************************************/\n/*! no static exports found */function(e,t,n){(e.exports=n(/*! ../../../node_modules/css-loader/lib/css-base.js */\"./node_modules/css-loader/lib/css-base.js\")(!1)).push([e.i,'.xgplayer-skin-default{background:#000;width:100%;height:100%;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;-ms-user-select:none}.xgplayer-skin-default *{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}.xgplayer-skin-default.xgplayer-is-fullscreen{width:100%!important;height:100%!important;padding-top:0!important;z-index:9999}.xgplayer-skin-default.xgplayer-is-fullscreen.xgplayer-inactive{cursor:none}.xgplayer-skin-default video{width:100%;height:100%;outline:none}.xgplayer-skin-default .xgplayer-none{display:none}@-webkit-keyframes loadingRotate{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes loadingRotate{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@-webkit-keyframes loadingDashOffset{0%{stroke-dashoffset:236}to{stroke-dashoffset:0}}@keyframes loadingDashOffset{0%{stroke-dashoffset:236}to{stroke-dashoffset:0}}.xgplayer-skin-default .xgplayer-play,.xgplayer-skin-default .xgplayer-play-img{position:relative;-webkit-order:0;-moz-box-ordinal-group:1;order:0;display:block;cursor:pointer}.xgplayer-skin-default .xgplayer-play-img .xgplayer-icon,.xgplayer-skin-default .xgplayer-play .xgplayer-icon{margin-top:3px;width:32px}.xgplayer-skin-default .xgplayer-play-img .xgplayer-icon div,.xgplayer-skin-default .xgplayer-play .xgplayer-icon div{position:absolute}.xgplayer-skin-default .xgplayer-play-img .xgplayer-icon .xgplayer-icon-play,.xgplayer-skin-default .xgplayer-play .xgplayer-icon .xgplayer-icon-play{display:block}.xgplayer-skin-default .xgplayer-play-img .xgplayer-icon .xgplayer-icon-pause,.xgplayer-skin-default .xgplayer-play .xgplayer-icon .xgplayer-icon-pause{display:none}.xgplayer-skin-default .xgplayer-play-img .xgplayer-tips .xgplayer-tip-play,.xgplayer-skin-default .xgplayer-play .xgplayer-tips .xgplayer-tip-play{display:block}.xgplayer-skin-default .xgplayer-play-img .xgplayer-tips .xgplayer-tip-pause,.xgplayer-skin-default .xgplayer-play .xgplayer-tips .xgplayer-tip-pause{display:none}.xgplayer-skin-default .xgplayer-play-img:hover,.xgplayer-skin-default .xgplayer-play:hover{opacity:.85}.xgplayer-skin-default .xgplayer-play-img:hover .xgplayer-tips,.xgplayer-skin-default .xgplayer-play:hover .xgplayer-tips{display:block}.xgplayer-skin-default.xgplayer-playing .xgplayer-play-img .xgplayer-icon .xgplayer-icon-play,.xgplayer-skin-default.xgplayer-playing .xgplayer-play .xgplayer-icon .xgplayer-icon-play{display:none}.xgplayer-skin-default.xgplayer-playing .xgplayer-play-img .xgplayer-icon .xgplayer-icon-pause,.xgplayer-skin-default.xgplayer-playing .xgplayer-play .xgplayer-icon .xgplayer-icon-pause{display:block}.xgplayer-skin-default.xgplayer-playing .xgplayer-play-img .xgplayer-tips .xgplayer-tip-play,.xgplayer-skin-default.xgplayer-playing .xgplayer-play .xgplayer-tips .xgplayer-tip-play{display:none}.xgplayer-skin-default.xgplayer-pause .xgplayer-play-img .xgplayer-icon .xgplayer-icon-play,.xgplayer-skin-default.xgplayer-pause .xgplayer-play .xgplayer-icon .xgplayer-icon-play,.xgplayer-skin-default.xgplayer-playing .xgplayer-play-img .xgplayer-tips .xgplayer-tip-pause,.xgplayer-skin-default.xgplayer-playing .xgplayer-play .xgplayer-tips .xgplayer-tip-pause{display:block}.xgplayer-skin-default.xgplayer-pause .xgplayer-play-img .xgplayer-icon .xgplayer-icon-pause,.xgplayer-skin-default.xgplayer-pause .xgplayer-play .xgplayer-icon .xgplayer-icon-pause{display:none}.xgplayer-skin-default.xgplayer-pause .xgplayer-play-img .xgplayer-tips .xgplayer-tip-play,.xgplayer-skin-default.xgplayer-pause .xgplayer-play .xgplayer-tips .xgplayer-tip-play{display:block}.xgplayer-skin-default.xgplayer-pause .xgplayer-play-img .xgplayer-tips .xgplayer-tip-pause,.xgplayer-skin-default.xgplayer-pause .xgplayer-play .xgplayer-tips .xgplayer-tip-pause{display:none}.xgplayer-skin-default .xgplayer-start{border-radius:50%;display:inline-block;width:70px;height:70px;background:rgba(0,0,0,.38);overflow:hidden;text-align:center;line-height:70px;vertical-align:middle;position:absolute;left:50%;top:50%;z-index:115;margin:-35px auto auto -35px;cursor:pointer}.xgplayer-skin-default .xgplayer-start div{position:absolute}.xgplayer-skin-default .xgplayer-start div svg{fill:hsla(0,0%,100%,.7);margin:14px}.xgplayer-skin-default .xgplayer-start .xgplayer-icon-play{display:block}.xgplayer-skin-default .xgplayer-start .xgplayer-icon-pause{display:none}.xgplayer-skin-default .xgplayer-start:hover{opacity:.85}.xgplayer-skin-default.xgplayer-playing .xgplayer-start,.xgplayer-skin-default.xgplayer-playing .xgplayer-start .xgplayer-icon-play{display:none}.xgplayer-skin-default.xgplayer-playing .xgplayer-start .xgplayer-icon-pause{display:block}.xgplayer-skin-default.xgplayer-pause .xgplayer-start{display:inline-block}.xgplayer-skin-default.xgplayer-pause .xgplayer-start .xgplayer-icon-play{display:block}.xgplayer-skin-default.replay .xgplayer-start,.xgplayer-skin-default.xgplayer-pause .xgplayer-start .xgplayer-icon-pause{display:none}.xgplayer-skin-default.replay .xgplayer-start .xgplayer-icon-play{display:block}.xgplayer-skin-default.replay .xgplayer-start .xgplayer-icon-pause{display:none}.xgplayer-skin-default .xgplayer-enter{display:none;position:absolute;left:0;top:0;width:100%;height:100%;background:#000;z-index:120}.xgplayer-skin-default .xgplayer-enter .xgplayer-enter-spinner{display:block;position:absolute;left:50%;top:50%;height:100px;width:100px;position:relative;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.xgplayer-skin-default .xgplayer-enter .xgplayer-enter-spinner div{width:12%;height:26%;background-color:hsla(0,0%,100%,.7);position:absolute;left:44%;top:37%;opacity:0;border-radius:30px;-webkit-animation:fade 1s linear infinite;animation:fade 1s linear infinite}.xgplayer-skin-default .xgplayer-enter .xgplayer-enter-spinner div.xgplayer-enter-bar1{-webkit-transform:rotate(0deg) translateY(-142%);-ms-transform:rotate(0deg) translateY(-142%);transform:rotate(0deg) translateY(-142%);-webkit-animation-delay:0s;animation-delay:0s}.xgplayer-skin-default .xgplayer-enter .xgplayer-enter-spinner div.xgplayer-enter-bar2{-webkit-transform:rotate(30deg) translateY(-142%);-ms-transform:rotate(30deg) translateY(-142%);transform:rotate(30deg) translateY(-142%);-webkit-animation-delay:-.9163s;animation-delay:-.9163s}.xgplayer-skin-default .xgplayer-enter .xgplayer-enter-spinner div.xgplayer-enter-bar3{-webkit-transform:rotate(60deg) translateY(-142%);-ms-transform:rotate(60deg) translateY(-142%);transform:rotate(60deg) translateY(-142%);-webkit-animation-delay:-.833s;animation-delay:-.833s}.xgplayer-skin-default .xgplayer-enter .xgplayer-enter-spinner div.xgplayer-enter-bar4{-webkit-transform:rotate(90deg) translateY(-142%);-ms-transform:rotate(90deg) translateY(-142%);transform:rotate(90deg) translateY(-142%);-webkit-animation-delay:-.7497s;animation-delay:-.7497s}.xgplayer-skin-default .xgplayer-enter .xgplayer-enter-spinner div.xgplayer-enter-bar5{-webkit-transform:rotate(120deg) translateY(-142%);-ms-transform:rotate(120deg) translateY(-142%);transform:rotate(120deg) translateY(-142%);-webkit-animation-delay:-.6664s;animation-delay:-.6664s}.xgplayer-skin-default .xgplayer-enter .xgplayer-enter-spinner div.xgplayer-enter-bar6{-webkit-transform:rotate(150deg) translateY(-142%);-ms-transform:rotate(150deg) translateY(-142%);transform:rotate(150deg) translateY(-142%);-webkit-animation-delay:-.5831s;animation-delay:-.5831s}.xgplayer-skin-default .xgplayer-enter .xgplayer-enter-spinner div.xgplayer-enter-bar7{-webkit-transform:rotate(180deg) translateY(-142%);-ms-transform:rotate(180deg) translateY(-142%);transform:rotate(180deg) translateY(-142%);-webkit-animation-delay:-.4998s;animation-delay:-.4998s}.xgplayer-skin-default .xgplayer-enter .xgplayer-enter-spinner div.xgplayer-enter-bar8{-webkit-transform:rotate(210deg) translateY(-142%);-ms-transform:rotate(210deg) translateY(-142%);transform:rotate(210deg) translateY(-142%);-webkit-animation-delay:-.4165s;animation-delay:-.4165s}.xgplayer-skin-default .xgplayer-enter .xgplayer-enter-spinner div.xgplayer-enter-bar9{-webkit-transform:rotate(240deg) translateY(-142%);-ms-transform:rotate(240deg) translateY(-142%);transform:rotate(240deg) translateY(-142%);-webkit-animation-delay:-.3332s;animation-delay:-.3332s}.xgplayer-skin-default .xgplayer-enter .xgplayer-enter-spinner div.xgplayer-enter-bar10{-webkit-transform:rotate(270deg) translateY(-142%);-ms-transform:rotate(270deg) translateY(-142%);transform:rotate(270deg) translateY(-142%);-webkit-animation-delay:-.2499s;animation-delay:-.2499s}.xgplayer-skin-default .xgplayer-enter .xgplayer-enter-spinner div.xgplayer-enter-bar11{-webkit-transform:rotate(300deg) translateY(-142%);-ms-transform:rotate(300deg) translateY(-142%);transform:rotate(300deg) translateY(-142%);-webkit-animation-delay:-.1666s;animation-delay:-.1666s}.xgplayer-skin-default .xgplayer-enter .xgplayer-enter-spinner div.xgplayer-enter-bar12{-webkit-transform:rotate(330deg) translateY(-142%);-ms-transform:rotate(330deg) translateY(-142%);transform:rotate(330deg) translateY(-142%);-webkit-animation-delay:-.0833s;animation-delay:-.0833s}@-webkit-keyframes fade{0%{opacity:1}to{opacity:.25}}.xgplayer-skin-default.xgplayer-is-enter .xgplayer-enter{display:block}.xgplayer-skin-default .xgplayer-poster{display:none;position:absolute;left:0;top:0;width:100%;height:100%;z-index:100;background-size:cover;background-position:50%}.xgplayer-skin-default.xgplayer-nostart .xgplayer-poster{display:block}.xgplayer-skin-default .xgplayer-placeholder{-webkit-flex:1;-moz-box-flex:1;flex:1;-webkit-order:3;-moz-box-ordinal-group:4;order:3;display:block}.xgplayer-skin-default .xgplayer-fullscreen,.xgplayer-skin-default .xgplayer-fullscreen-img{position:relative;-webkit-order:13;-moz-box-ordinal-group:14;order:13;display:block;cursor:pointer}.xgplayer-skin-default .xgplayer-fullscreen-img .xgplayer-icon,.xgplayer-skin-default .xgplayer-fullscreen .xgplayer-icon{margin-top:3px}.xgplayer-skin-default .xgplayer-fullscreen-img .xgplayer-icon div,.xgplayer-skin-default .xgplayer-fullscreen .xgplayer-icon div{position:absolute}.xgplayer-skin-default .xgplayer-fullscreen-img .xgplayer-icon .xgplayer-icon-requestfull,.xgplayer-skin-default .xgplayer-fullscreen .xgplayer-icon .xgplayer-icon-requestfull{display:block}.xgplayer-skin-default .xgplayer-fullscreen-img .xgplayer-icon .xgplayer-icon-exitfull,.xgplayer-skin-default .xgplayer-fullscreen .xgplayer-icon .xgplayer-icon-exitfull{display:none}.xgplayer-skin-default .xgplayer-fullscreen-img .xgplayer-tips,.xgplayer-skin-default .xgplayer-fullscreen .xgplayer-tips{position:absolute;right:0;left:auto}.xgplayer-skin-default .xgplayer-fullscreen-img .xgplayer-tips .xgplayer-tip-requestfull,.xgplayer-skin-default .xgplayer-fullscreen .xgplayer-tips .xgplayer-tip-requestfull{display:block}.xgplayer-skin-default .xgplayer-fullscreen-img .xgplayer-tips .xgplayer-tip-exitfull,.xgplayer-skin-default .xgplayer-fullscreen .xgplayer-tips .xgplayer-tip-exitfull{display:none}.xgplayer-skin-default .xgplayer-fullscreen-img:hover,.xgplayer-skin-default .xgplayer-fullscreen:hover{opacity:.85}.xgplayer-skin-default .xgplayer-fullscreen-img:hover .xgplayer-tips,.xgplayer-skin-default .xgplayer-fullscreen:hover .xgplayer-tips{display:block}.xgplayer-skin-default.xgplayer-is-fullscreen .xgplayer-fullscreen-img .xgplayer-icon .xgplayer-icon-requestfull,.xgplayer-skin-default.xgplayer-is-fullscreen .xgplayer-fullscreen .xgplayer-icon .xgplayer-icon-requestfull{display:none}.xgplayer-skin-default.xgplayer-is-fullscreen .xgplayer-fullscreen-img .xgplayer-icon .xgplayer-icon-exitfull,.xgplayer-skin-default.xgplayer-is-fullscreen .xgplayer-fullscreen .xgplayer-icon .xgplayer-icon-exitfull{display:block}.xgplayer-skin-default.xgplayer-is-fullscreen .xgplayer-fullscreen-img .xgplayer-tips .xgplayer-tip-requestfull,.xgplayer-skin-default.xgplayer-is-fullscreen .xgplayer-fullscreen .xgplayer-tips .xgplayer-tip-requestfull{display:none}.xgplayer-skin-default.xgplayer-is-fullscreen .xgplayer-fullscreen-img .xgplayer-tips .xgplayer-tip-exitfull,.xgplayer-skin-default.xgplayer-is-fullscreen .xgplayer-fullscreen .xgplayer-tips .xgplayer-tip-exitfull{display:block}.xgplayer-skin-default .xgplayer-cssfullscreen,.xgplayer-skin-default .xgplayer-cssfullscreen-img{position:relative;-webkit-order:12;-moz-box-ordinal-group:13;order:12;display:block;cursor:pointer}.xgplayer-skin-default .xgplayer-cssfullscreen-img .xgplayer-icon,.xgplayer-skin-default .xgplayer-cssfullscreen .xgplayer-icon{width:32px;margin-top:5px}.xgplayer-skin-default .xgplayer-cssfullscreen-img .xgplayer-icon div,.xgplayer-skin-default .xgplayer-cssfullscreen .xgplayer-icon div{position:absolute}.xgplayer-skin-default .xgplayer-cssfullscreen-img .xgplayer-icon .xgplayer-icon-requestfull,.xgplayer-skin-default .xgplayer-cssfullscreen .xgplayer-icon .xgplayer-icon-requestfull{display:block}.xgplayer-skin-default .xgplayer-cssfullscreen-img .xgplayer-icon .xgplayer-icon-exitfull,.xgplayer-skin-default .xgplayer-cssfullscreen .xgplayer-icon .xgplayer-icon-exitfull{display:none}.xgplayer-skin-default .xgplayer-cssfullscreen-img .xgplayer-tips,.xgplayer-skin-default .xgplayer-cssfullscreen .xgplayer-tips{margin-left:-40px}.xgplayer-skin-default .xgplayer-cssfullscreen-img .xgplayer-tips .xgplayer-tip-requestfull,.xgplayer-skin-default .xgplayer-cssfullscreen .xgplayer-tips .xgplayer-tip-requestfull{display:block}.xgplayer-skin-default .xgplayer-cssfullscreen-img .xgplayer-tips .xgplayer-tip-exitfull,.xgplayer-skin-default .xgplayer-cssfullscreen .xgplayer-tips .xgplayer-tip-exitfull{display:none}.xgplayer-skin-default .xgplayer-cssfullscreen-img:hover,.xgplayer-skin-default .xgplayer-cssfullscreen:hover{opacity:.85}.xgplayer-skin-default .xgplayer-cssfullscreen-img:hover .xgplayer-tips,.xgplayer-skin-default .xgplayer-cssfullscreen:hover .xgplayer-tips{display:block}.xgplayer-skin-default.xgplayer-is-cssfullscreen .xgplayer-cssfullscreen-img .xgplayer-icon .xgplayer-icon-requestfull,.xgplayer-skin-default.xgplayer-is-cssfullscreen .xgplayer-cssfullscreen .xgplayer-icon .xgplayer-icon-requestfull{display:none}.xgplayer-skin-default.xgplayer-is-cssfullscreen .xgplayer-cssfullscreen-img .xgplayer-icon .xgplayer-icon-exitfull,.xgplayer-skin-default.xgplayer-is-cssfullscreen .xgplayer-cssfullscreen .xgplayer-icon .xgplayer-icon-exitfull{display:block}.xgplayer-skin-default.xgplayer-is-cssfullscreen .xgplayer-cssfullscreen-img .xgplayer-tips,.xgplayer-skin-default.xgplayer-is-cssfullscreen .xgplayer-cssfullscreen .xgplayer-tips{margin-left:-47px}.xgplayer-skin-default.xgplayer-is-cssfullscreen .xgplayer-cssfullscreen-img .xgplayer-tips .xgplayer-tip-requestfull,.xgplayer-skin-default.xgplayer-is-cssfullscreen .xgplayer-cssfullscreen .xgplayer-tips .xgplayer-tip-requestfull{display:none}.xgplayer-skin-default.xgplayer-is-cssfullscreen .xgplayer-cssfullscreen-img .xgplayer-tips .xgplayer-tip-exitfull,.xgplayer-skin-default.xgplayer-is-cssfullscreen .xgplayer-cssfullscreen .xgplayer-tips .xgplayer-tip-exitfull{display:block}.xgplayer-skin-default.xgplayer-is-fullscreen .xgplayer-cssfullscreen,.xgplayer-skin-default.xgplayer-is-fullscreen .xgplayer-cssfullscreen-img{display:none}.xgplayer-skin-default.xgplayer-is-cssfullscreen{position:fixed!important;left:0!important;top:0!important;width:100%!important;height:100%!important;z-index:99999!important}.lang-is-en .xgplayer-cssfullscreen-img .xgplayer-tips,.lang-is-en .xgplayer-cssfullscreen .xgplayer-tips,.lang-is-en.xgplayer-is-cssfullscreen .xgplayer-cssfullscreen-img .xgplayer-tips,.lang-is-en.xgplayer-is-cssfullscreen .xgplayer-cssfullscreen .xgplayer-tips{margin-left:-46px}.lang-is-jp .xgplayer-cssfullscreen-img .xgplayer-tips,.lang-is-jp .xgplayer-cssfullscreen .xgplayer-tips{margin-left:-120px}.lang-is-jp.xgplayer-is-cssfullscreen .xgplayer-cssfullscreen-img .xgplayer-tips,.lang-is-jp.xgplayer-is-cssfullscreen .xgplayer-cssfullscreen .xgplayer-tips{margin-left:-60px}.xgplayer-skin-default .xgplayer-volume{outline:none;-webkit-order:4;-moz-box-ordinal-group:5;order:4;width:28px;height:140px;display:block;position:relative;margin-top:-100px;z-index:18}.xgplayer-skin-default .xgplayer-volume .xgplayer-icon{margin-top:8px;cursor:pointer;position:absolute;bottom:-9px}.xgplayer-skin-default .xgplayer-volume .xgplayer-icon div{position:absolute}.xgplayer-skin-default .xgplayer-volume .xgplayer-icon .xgplayer-icon-large{display:block}.xgplayer-skin-default .xgplayer-volume .xgplayer-icon .xgplayer-icon-muted,.xgplayer-skin-default .xgplayer-volume .xgplayer-icon .xgplayer-icon-small{display:none}.xgplayer-skin-default .xgplayer-slider{display:none;position:absolute;width:28px;height:92px;background:rgba(0,0,0,.54);border-radius:1px;bottom:42px;outline:none}.xgplayer-skin-default .xgplayer-slider:after{content:\" \";display:block;height:15px;width:28px;position:absolute;bottom:-15px;left:0;z-index:20}.xgplayer-skin-default .xgplayer-bar,.xgplayer-skin-default .xgplayer-drag{display:block;position:absolute;bottom:6px;left:12px;background:hsla(0,0%,100%,.3);border-radius:100px;width:4px;height:76px;outline:none;cursor:pointer}.xgplayer-skin-default .xgplayer-drag{bottom:0;left:0;background:#fa1f41;max-height:76px}.xgplayer-skin-default .xgplayer-drag:after{content:\" \";display:inline-block;width:8px;height:8px;background:#fff;box-shadow:0 0 5px 0 rgba(0,0,0,.26);position:absolute;border-radius:50%;left:-2px;top:-6px}.xgplayer-skin-default.xgplayer-volume-active .xgplayer-slider,.xgplayer-skin-default.xgplayer-volume-large .xgplayer-volume .xgplayer-icon .xgplayer-icon-large{display:block}.xgplayer-skin-default.xgplayer-volume-large .xgplayer-volume .xgplayer-icon .xgplayer-icon-muted,.xgplayer-skin-default.xgplayer-volume-large .xgplayer-volume .xgplayer-icon .xgplayer-icon-small,.xgplayer-skin-default.xgplayer-volume-small .xgplayer-volume .xgplayer-icon .xgplayer-icon-large{display:none}.xgplayer-skin-default.xgplayer-volume-small .xgplayer-volume .xgplayer-icon .xgplayer-icon-small{display:block}.xgplayer-skin-default.xgplayer-volume-muted .xgplayer-volume .xgplayer-icon .xgplayer-icon-large,.xgplayer-skin-default.xgplayer-volume-muted .xgplayer-volume .xgplayer-icon .xgplayer-icon-small,.xgplayer-skin-default.xgplayer-volume-small .xgplayer-volume .xgplayer-icon .xgplayer-icon-muted{display:none}.xgplayer-skin-default.xgplayer-volume-muted .xgplayer-volume .xgplayer-icon .xgplayer-icon-muted{display:block}.xgplayer-skin-default.xgplayer-mobile .xgplayer-volume .xgplayer-slider{display:none}.xgplayer-skin-default .xgplayer-definition{-webkit-order:5;-moz-box-ordinal-group:6;order:5;width:60px;height:150px;z-index:18;position:relative;outline:none;display:none;cursor:default;margin-left:10px;margin-top:-119px}.xgplayer-skin-default .xgplayer-definition ul{display:none;list-style:none;width:78px;background:rgba(0,0,0,.54);border-radius:1px;position:absolute;bottom:30px;left:0;text-align:center;white-space:nowrap;margin-left:-10px;z-index:26;cursor:pointer}.xgplayer-skin-default .xgplayer-definition ul li{opacity:.7;font-family:PingFangSC-Regular;font-size:11px;color:hsla(0,0%,100%,.8);padding:6px 13px}.xgplayer-skin-default .xgplayer-definition ul li.selected,.xgplayer-skin-default .xgplayer-definition ul li:hover{color:#fff;opacity:1}.xgplayer-skin-default .xgplayer-definition .name{text-align:center;font-family:PingFangSC-Regular;font-size:13px;cursor:pointer;color:hsla(0,0%,100%,.8);position:absolute;bottom:0;width:60px;height:20px;line-height:20px;background:rgba(0,0,0,.38);border-radius:10px;display:inline-block;vertical-align:middle}.xgplayer-skin-default.xgplayer-definition-active .xgplayer-definition ul,.xgplayer-skin-default.xgplayer-is-definition .xgplayer-definition{display:block}.xgplayer-skin-default .xgplayer-time{-webkit-order:2;-moz-box-ordinal-group:3;order:2;font-family:ArialMT;font-size:13px;color:#fff;line-height:40px;text-align:center;display:inline-block}.xgplayer-skin-default .xgplayer-time span:after{content:\"/\";display:inline-block;padding:0 3px}.xgplayer-skin-default .xgplayer-time em{color:hsla(0,0%,100%,.5)}.xgplayer-skin-default .xgplayer-controls{display:-webkit-flex;display:-moz-box;display:flex;position:absolute;bottom:0;left:0;right:0;height:40px;background-image:linear-gradient(180deg,transparent,rgba(0,0,0,.37),rgba(0,0,0,.75),rgba(0,0,0,.75));z-index:10}.xgplayer-skin-default.no-controls .xgplayer-controls,.xgplayer-skin-default.xgplayer-inactive .xgplayer-controls,.xgplayer-skin-default.xgplayer-is-live .xgplayer-controls>*,.xgplayer-skin-default.xgplayer-nostart .xgplayer-controls{display:none}.xgplayer-skin-default.xgplayer-is-live .xgplayer-controls .xgplayer-cssfullscreen,.xgplayer-skin-default.xgplayer-is-live .xgplayer-controls .xgplayer-definition,.xgplayer-skin-default.xgplayer-is-live .xgplayer-controls .xgplayer-fullscreen,.xgplayer-skin-default.xgplayer-is-live .xgplayer-controls .xgplayer-live,.xgplayer-skin-default.xgplayer-is-live .xgplayer-controls .xgplayer-placeholder,.xgplayer-skin-default.xgplayer-is-live .xgplayer-controls .xgplayer-play,.xgplayer-skin-default.xgplayer-is-live .xgplayer-controls .xgplayer-play-img,.xgplayer-skin-default.xgplayer-is-live .xgplayer-controls .xgplayer-volume{display:block}.xgplayer-skin-default .xgplayer-live{display:block;font-size:12px;color:#fff;line-height:40px;-webkit-order:1;-moz-box-ordinal-group:2;order:1}.xgplayer-skin-default .xgplayer-loading{display:none;width:100px;height:100px;overflow:hidden;-webkit-transform:scale(.7);-ms-transform:scale(.7);transform:scale(.7);position:absolute;left:50%;top:50%;margin:-70px auto auto -50px}.xgplayer-skin-default .xgplayer-loading svg{border-radius:50%;-webkit-transform-origin:center;-ms-transform-origin:center;transform-origin:center;-webkit-animation:loadingRotate 1s linear infinite;animation:loadingRotate 1s linear infinite}.xgplayer-skin-default .xgplayer-loading svg path{stroke:#ddd;stroke-dasharray:236;-webkit-animation:loadingDashOffset 2s linear infinite;animation:loadingDashOffset 2s linear infinite;animation-direction:alternate-reverse;fill:none;stroke-width:12px}.xgplayer-skin-default.xgplayer-nostart .xgplayer-loading{display:none}.xgplayer-skin-default.xgplayer-isloading .xgplayer-loading{display:block}.xgplayer-skin-default .xgplayer-progress{display:block;position:absolute;height:20px;line-height:20px;left:12px;right:12px;outline:none;top:-10px;z-index:35}.xgplayer-skin-default .xgplayer-progress-outer{background:hsla(0,0%,100%,.3);display:block;height:3px;line-height:3px;margin-top:8.5px;width:100%;position:relative;cursor:pointer}.xgplayer-skin-default .xgplayer-progress-cache,.xgplayer-skin-default .xgplayer-progress-played{display:block;height:100%;line-height:1;position:absolute;left:0;top:0}.xgplayer-skin-default .xgplayer-progress-cache{width:0;background:hsla(0,0%,100%,.5)}.xgplayer-skin-default .xgplayer-progress-played{display:block;width:0;background-image:linear-gradient(-90deg,#fa1f41,#e31106);border-radius:0 1.5px 1.5px 0}.xgplayer-skin-default .xgplayer-progress-btn{display:none;position:absolute;left:0;top:-5px;width:13px;height:13px;border-radius:30px;background:#fff;box-shadow:0 0 2px 0 rgba(0,0,0,.26);left:100%;-webkit-transform:translate(-50%);-ms-transform:translate(-50%);transform:translate(-50%)}.xgplayer-skin-default .xgplayer-progress-point{position:absolute}.xgplayer-skin-default .xgplayer-progress-point.xgplayer-tips{margin-left:0;top:-25px;display:none;z-index:100}.xgplayer-skin-default .xgplayer-progress-dot{display:inline-block;position:absolute;height:3px;width:5px;top:0;background:#fff;border-radius:6px;z-index:16}.xgplayer-skin-default .xgplayer-progress-dot .xgplayer-progress-tip{position:absolute;left:0;top:-40px;height:auto;line-height:30px;width:auto;-webkit-transform:scale(.8);-ms-transform:scale(.8);transform:scale(.8);background:rgba(0,0,0,.3);border-radius:6px;border:1px solid rgba(0,0,0,.8);cursor:default;white-space:nowrap;display:none}.xgplayer-skin-default .xgplayer-progress-dot-show .xgplayer-progress-tip{display:block}.xgplayer-skin-default .xgplayer-progress-thumbnail{position:absolute;-moz-box-sizing:border-box;box-sizing:border-box}.xgplayer-skin-default .xgplayer-progress-thumbnail.xgplayer-tips{margin-left:0;display:none;z-index:99}.xgplayer-skin-default .xgplayer-progress:focus .xgplayer-progress-outer,.xgplayer-skin-default .xgplayer-progress:hover .xgplayer-progress-outer{height:6px;margin-top:7px}.xgplayer-skin-default .xgplayer-progress:focus .xgplayer-progress-dot,.xgplayer-skin-default .xgplayer-progress:hover .xgplayer-progress-dot{height:6px}.xgplayer-skin-default .xgplayer-progress:focus .xgplayer-progress-btn,.xgplayer-skin-default .xgplayer-progress:hover .xgplayer-progress-btn{display:block;top:-3px}.xgplayer-skin-default.xgplayer-definition-active .xgplayer-progress,.xgplayer-skin-default.xgplayer-playbackrate-active .xgplayer-progress,.xgplayer-skin-default.xgplayer-texttrack-active .xgplayer-progress,.xgplayer-skin-default.xgplayer-volume-active .xgplayer-progress{z-index:15}.xgplayer-skin-default.xgplayer-mobile .xgplayer-progress-btn{display:block!important}.xgplayer-skin-default.xgplayer-mobile .xgplayer-progress:focus .xgplayer-progress-outer,.xgplayer-skin-default.xgplayer-mobile .xgplayer-progress:hover .xgplayer-progress-outer{height:3px!important;margin-top:8.5px!important}.xgplayer-skin-default.xgplayer-mobile .xgplayer-progress:focus .xgplayer-progress-btn,.xgplayer-skin-default.xgplayer-mobile .xgplayer-progress:hover .xgplayer-progress-btn{display:block!important;top:-5px!important}.xgplayer-skin-default .xgplayer-replay{position:absolute;left:0;top:0;width:100%;height:100%;z-index:105;display:none;-webkit-justify-content:center;-moz-box-pack:center;justify-content:center;-webkit-align-items:center;-moz-box-align:center;align-items:center;background:rgba(0,0,0,.54);-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;flex-direction:column}.xgplayer-skin-default .xgplayer-replay svg{background:rgba(0,0,0,.58);border-radius:100%;cursor:pointer}.xgplayer-skin-default .xgplayer-replay svg path{-webkit-transform:translate(20px,21px);-ms-transform:translate(20px,21px);transform:translate(20px,21px);fill:#ddd}.xgplayer-skin-default .xgplayer-replay svg:hover{background:rgba(0,0,0,.38)}.xgplayer-skin-default .xgplayer-replay svg:hover path{fill:#fff}.xgplayer-skin-default .xgplayer-replay .xgplayer-replay-txt{display:inline-block;font-family:PingFangSC-Regular;font-size:14px;color:#fff;line-height:34px}.xgplayer-skin-default.xgplayer.xgplayer-ended .xgplayer-controls{display:none}.xgplayer-skin-default.xgplayer.xgplayer-ended .xgplayer-replay{display:-webkit-flex;display:-moz-box;display:flex}.xgplayer-skin-default .xgplayer-playbackrate{-webkit-order:8;-moz-box-ordinal-group:9;order:8;width:60px;height:20px;z-index:18;position:relative;display:inline-block;cursor:default}.xgplayer-skin-default .xgplayer-playbackrate ul{display:none;list-style:none;width:78px;background:rgba(0,0,0,.54);border-radius:1px;position:absolute;bottom:20px;left:0;text-align:left;white-space:nowrap;z-index:26;cursor:pointer}.xgplayer-skin-default .xgplayer-playbackrate ul li{opacity:.7;font-family:PingFangSC-Regular;font-size:11px;color:hsla(0,0%,100%,.8);position:relative;padding:4px 0;text-align:center}.xgplayer-skin-default .xgplayer-playbackrate ul li.selected,.xgplayer-skin-default .xgplayer-playbackrate ul li:hover{color:#fff;opacity:1}.xgplayer-skin-default .xgplayer-playbackrate ul li:first-child{position:relative;margin-top:12px}.xgplayer-skin-default .xgplayer-playbackrate ul li:last-child{position:relative;margin-bottom:12px}.xgplayer-skin-default .xgplayer-playbackrate .name{height:20px;position:relative;top:11px;text-align:center;background:rgba(0,0,0,.38);color:hsla(0,0%,100%,.8);border-radius:10px;line-height:20px}.xgplayer-skin-default .xgplayer-playbackrate span{position:relative;top:19px;font-weight:700;text-shadow:0 0 4px rgba(0,0,0,.6)}.xgplayer-skin-default .xgplayer-playbackrate:hover{opacity:1}.xgplayer-skin-default.xgplayer-playbackrate-active .xgplayer-playbackrate ul{display:block}.xgplayer-skin-default .xgplayer-download{position:relative;-webkit-order:9;-moz-box-ordinal-group:10;order:9;display:block;cursor:pointer}.xgplayer-skin-default .xgplayer-download .xgplayer-icon{margin-top:3px}.xgplayer-skin-default .xgplayer-download .xgplayer-icon div{position:absolute}.xgplayer-skin-default .xgplayer-download .xgplayer-icon svg{position:relative;top:5px;left:5px}.xgplayer-skin-default .xgplayer-download .xgplayer-tips{margin-left:-20px}.xgplayer-skin-default .xgplayer-download .xgplayer-tips .xgplayer-tip-download{display:block}.xgplayer-skin-default .xgplayer-download:hover{opacity:.85}.xgplayer-skin-default .xgplayer-download:hover .xgplayer-tips{display:block}.lang-is-en .xgplayer-download .xgplayer-tips{margin-left:-32px}.lang-is-jp .xgplayer-download .xgplayer-tips{margin-left:-40px}.xgplayer-skin-default .danmu-switch{-webkit-order:6;-moz-box-ordinal-group:7;order:6;z-index:26}.xgplayer-skin-default .xgplayer-danmu{display:none;position:absolute;top:0;left:0;right:0;height:100%;overflow:hidden;z-index:9;outline:none}.xgplayer-skin-default .xgplayer-danmu>*{position:absolute;white-space:nowrap;z-index:9}.xgplayer-skin-default .xgplayer-danmu.xgplayer-has-danmu{display:block}.xgplayer-skin-default .xgplayer-panel{outline:none;-webkit-order:7;-moz-box-ordinal-group:8;order:7;width:40px;height:40px;display:inline-block;position:relative;font-family:PingFangSC-Regular;font-size:13px;color:hsla(0,0%,100%,.8);z-index:36}.xgplayer-skin-default .xgplayer-panel .xgplayer-panel-icon{cursor:pointer;position:absolute;margin-left:5px;top:10px}.xgplayer-skin-default .xgplayer-panel-active{display:block!important;bottom:30px}.xgplayer-skin-default .xgplayer-panel-slider{z-index:36;display:none;position:absolute;width:230px;height:230px;background:rgba(0,0,0,.54);border-radius:1px;padding:10px 20px;outline:none;left:-115px;bottom:40px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-hidemode{padding-bottom:10px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-hidemode-radio li{display:inline;list-style:none;cursor:pointer}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-hidemode ul{display:-webkit-flex;display:-moz-box;display:flex;-webkit-justify-content:space-around;justify-content:space-around}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-hidemode li{margin:0 12px;font-size:11px;color:#aaa}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-hidemode-font{margin-bottom:10px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-transparency{display:block;margin-top:10px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-transparency .xgplayer-transparency-line{-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;outline:none;width:150px;height:4px;background:#aaa;border-radius:4px;border-style:none;margin-left:10px;margin-top:-2px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-transparency .xgplayer-transparency-line::-moz-focus-outer{border:0!important}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-transparency .xgplayer-transparency-color::-webkit-slider-runnable-track{outline:none;width:150px;height:4px;border-radius:4px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-transparency .xgplayer-transparency-color::-moz-range-track{outline:none;background-color:#aaa;border-color:transparent;cursor:pointer;width:150px;height:4px;border-radius:4px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-transparency .xgplayer-transparency-color::-ms-track{outline:none;background-color:#aaa;color:transparent;border-color:transparent;width:150px;height:4px;border-radius:4px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-transparency .xgplayer-transparency-bar::-webkit-slider-thumb{outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:6px solid #f85959;height:6px;width:6px;margin-top:-4px;border-radius:6px;cursor:pointer}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-transparency .xgplayer-transparency-bar::-moz-range-thumb{outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:6px solid #f85959;height:0;width:0;border-radius:6px;cursor:pointer}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-transparency .xgplayer-transparency-bar::-ms-thumb{outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:6px solid #f85959;height:6px;width:6px;border-radius:6px;cursor:pointer}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-transparency .xgplayer-transparency-bar::-moz-range-progress{outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;height:4px;border-radius:4px;background:linear-gradient(90deg,#f85959,#f85959 100%,#aaa)}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea{display:block;margin-top:8px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea-name{display:inline-block;position:relative;top:-10px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea-control{display:inline-block}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea-control-up{width:150px;margin-left:10px;display:-moz-box;display:-webkit-flex;display:flex;-webkit-justify-content:space-between;-moz-box-pack:justify;justify-content:space-between;color:#aaa}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea-control-down{position:relative;top:-10px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea-control-down-dots{display:-webkit-flex;display:-moz-box;display:flex;width:150px;margin-left:10px;-webkit-justify-content:space-between;-moz-box-pack:justify;justify-content:space-between}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea-threequarters,.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea-twoquarters{margin-left:-6px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea-full{margin-right:3px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea .xgplayer-showarea-line{-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;outline:none;width:150px;height:4px;background:#aaa;border-radius:4px;border-style:none;margin-left:10px;margin-top:-2px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea .xgplayer-showarea-line::-moz-focus-outer{border:0!important}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea .xgplayer-showarea-color::-webkit-slider-runnable-track{outline:none;width:150px;height:4px;border-radius:4px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea .xgplayer-showarea-color::-moz-range-track{outline:none;background-color:#aaa;border-color:transparent;cursor:pointer;width:150px;height:4px;border-radius:4px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea .xgplayer-showarea-color::-ms-track{outline:none;background-color:#aaa;color:transparent;border-color:transparent;width:150px;height:4px;border-radius:4px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea .xgplayer-showarea-bar::-webkit-slider-thumb{outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:6px solid #f85959;height:6px;width:6px;margin-top:-4px;border-radius:6px;cursor:pointer}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea .xgplayer-showarea-bar::-moz-range-thumb{outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:6px solid #f85959;height:0;width:0;border-radius:6px;cursor:pointer}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea .xgplayer-showarea-bar::-ms-thumb{outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:6px solid #f85959;height:6px;width:6px;border-radius:6px;cursor:pointer}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea .xgplayer-showarea-full-dot,.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea .xgplayer-showarea-onequarters-dot,.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea .xgplayer-showarea-threequarters-dot,.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea .xgplayer-showarea-twoquarters-dot,.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-showarea .xgplayer-showarea-zero-dot{width:3px;height:3px;border:3px solid #aaa;border-radius:50%;background-color:#aaa;position:relative;top:16px;z-index:-1}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed{display:block}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed-name{display:inline-block;position:relative;top:-10px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed-control{display:inline-block}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed-control-up{width:150px;margin-left:10px;display:-moz-box;display:-webkit-flex;display:flex;-webkit-justify-content:space-between;-moz-box-pack:justify;justify-content:space-between;color:#aaa}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed-control-down{position:relative;top:-10px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed-control-down-dots{display:-webkit-flex;display:-moz-box;display:flex;width:150px;margin-left:10px;-webkit-justify-content:space-between;-moz-box-pack:justify;justify-content:space-between}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed .xgplayer-danmuspeed-line{-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;outline:none;width:150px;height:4px;background:#aaa;border-radius:4px;border-style:none;margin-left:10px;margin-top:-2px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed .xgplayer-danmuspeed-line::-moz-focus-outer{border:0!important}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed .xgplayer-danmuspeed-color::-webkit-slider-runnable-track{outline:none;width:150px;height:4px;border-radius:4px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed .xgplayer-danmuspeed-color::-moz-range-track{outline:none;background-color:#aaa;border-color:transparent;cursor:pointer;width:150px;height:4px;border-radius:4px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed .xgplayer-danmuspeed-color::-ms-track{outline:none;background-color:#aaa;color:transparent;border-color:transparent;width:150px;height:4px;border-radius:4px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed .xgplayer-danmuspeed-bar::-webkit-slider-thumb{outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:6px solid #f85959;height:6px;width:6px;margin-top:-4px;border-radius:6px;cursor:pointer}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed .xgplayer-danmuspeed-bar::-moz-range-thumb{outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:6px solid #f85959;height:0;width:0;border-radius:6px;cursor:pointer}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed .xgplayer-danmuspeed-bar::-ms-thumb{outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:6px solid #f85959;height:6px;width:6px;border-radius:6px;cursor:pointer}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed .xgplayer-danmuspeed-large-dot,.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed .xgplayer-danmuspeed-middle-dot,.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmuspeed .xgplayer-danmuspeed-small-dot{width:3px;height:3px;border:3px solid #aaa;border-radius:50%;background-color:#aaa;position:relative;top:16px;z-index:-1}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont{display:block}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont-name{display:inline-block;position:relative;top:-10px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont-control{display:inline-block}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont-control-up{width:150px;margin-left:10px;display:-moz-box;display:-webkit-flex;display:flex;-webkit-justify-content:space-between;-moz-box-pack:justify;justify-content:space-between;color:#aaa}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont-control-down{position:relative;top:-10px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont-control-down-dots{display:-webkit-flex;display:-moz-box;display:flex;width:150px;margin-left:10px;-webkit-justify-content:space-between;-moz-box-pack:justify;justify-content:space-between}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont .xgplayer-danmufont-line{-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;outline:none;width:150px;height:4px;background:#aaa;border-radius:4px;border-style:none;margin-left:10px;margin-top:-2px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont .xgplayer-danmufont-line::-moz-focus-outer{border:0!important}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont .xgplayer-danmufont-color::-webkit-slider-runnable-track{outline:none;width:150px;height:4px;border-radius:4px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont .xgplayer-danmufont-color::-moz-range-track{outline:none;background-color:#aaa;border-color:transparent;cursor:pointer;width:150px;height:4px;border-radius:4px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont .xgplayer-danmufont-color::-ms-track{outline:none;background-color:#aaa;color:transparent;border-color:transparent;width:150px;height:4px;border-radius:4px}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont .xgplayer-danmufont-bar::-webkit-slider-thumb{outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:6px solid #f85959;height:6px;width:6px;margin-top:-4px;border-radius:6px;cursor:pointer}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont .xgplayer-danmufont-bar::-moz-range-thumb{outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:6px solid #f85959;height:0;width:0;border-radius:6px;cursor:pointer}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont .xgplayer-danmufont-bar::-ms-thumb{outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:6px solid #f85959;height:6px;width:6px;border-radius:6px;cursor:pointer}.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont .xgplayer-danmufont-large-dot,.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont .xgplayer-danmufont-middle-dot,.xgplayer-skin-default .xgplayer-panel-slider .xgplayer-danmufont .xgplayer-danmufont-small-dot{width:3px;height:3px;border:3px solid #aaa;border-radius:50%;background-color:#aaa;position:relative;top:16px;z-index:-1}.xgplayer-skin-default .xgplayer-playnext{position:relative;-webkit-order:1;-moz-box-ordinal-group:2;order:1;display:block;cursor:pointer;top:-2px}.xgplayer-skin-default .xgplayer-playnext .xgplayer-icon div{position:absolute}.xgplayer-skin-default .xgplayer-playnext .xgplayer-tips .xgplayer-tip-playnext{display:block}.xgplayer-skin-default .xgplayer-playnext:hover{opacity:.85}.xgplayer-skin-default .xgplayer-playnext:hover .xgplayer-tips{display:block}.lang-is-en .xgplayer-playnext .xgplayer-tips{margin-left:-25px}.lang-is-jp .xgplayer-playnext .xgplayer-tips{margin-left:-38px}.xgplayer-skin-default .xgplayer-pip{-webkit-order:9;-moz-box-ordinal-group:10;order:9;position:relative;outline:none;display:block;cursor:pointer;height:20px;top:8px}.xgplayer-skin-default .xgplayer-pip .name{text-align:center;font-family:PingFangSC-Regular;font-size:13px;line-height:20px;height:20px;color:hsla(0,0%,100%,.8)}.xgplayer-skin-default .xgplayer-pip .name span{width:60px;height:20px;line-height:20px;background:rgba(0,0,0,.38);border-radius:10px;display:inline-block;vertical-align:middle}.xgplayer-skin-default .xgplayer-pip-lay{position:absolute;top:26px;left:0;width:100%;height:100%;z-index:130;cursor:pointer;background-color:transparent;display:none}.xgplayer-skin-default .xgplayer-pip-lay div{width:100%;height:100%}.xgplayer-skin-default .xgplayer-pip-drag{cursor:move;position:absolute;top:0;left:0;width:100%;height:26px;line-height:26px;background-image:linear-gradient(rgba(0,0,0,.3),transparent);z-index:130;display:none}.xgplayer-skin-default.xgplayer-pip-active{position:fixed;right:0;bottom:200px;width:320px!important;height:180px!important;z-index:110!important}.xgplayer-skin-default.xgplayer-pip-active .xgplayer-controls,.xgplayer-skin-default.xgplayer-pip-active .xgplayer-danmu{display:none}.xgplayer-skin-default.xgplayer-pip-active .xgplayer-pip-lay{display:block}.xgplayer-skin-default.xgplayer-pip-active .xgplayer-pip-drag{display:-webkit-flex;display:-moz-box;display:flex}.xgplayer-skin-default.xgplayer-inactive .xgplayer-pip-drag{display:none}.lang-is-jp .xgplayer-pip .name span{width:70px;height:20px}.xgplayer-skin-default .xgplayer-rotate{position:relative;-webkit-order:10;-moz-box-ordinal-group:11;order:10;display:block;cursor:pointer}.xgplayer-skin-default .xgplayer-rotate .xgplayer-icon{margin-top:7px;width:26px}.xgplayer-skin-default .xgplayer-rotate .xgplayer-icon div{position:absolute}.xgplayer-skin-default .xgplayer-rotate .xgplayer-tips{margin-left:-22px}.xgplayer-skin-default .xgplayer-rotate .xgplayer-tips .xgplayer-tip-rotate{display:block}.xgplayer-skin-default .xgplayer-rotate:hover{opacity:.85}.xgplayer-skin-default .xgplayer-rotate:hover .xgplayer-tips{display:block}.lang-is-en .xgplayer-rotate .xgplayer-tips{margin-left:-26px}.lang-is-jp .xgplayer-rotate .xgplayer-tips{margin-left:-38px}.xgplayer-skin-default .xgplayer-screenshot{-webkit-order:11;-moz-box-ordinal-group:12;order:11;position:relative;outline:none;display:block;cursor:pointer;height:20px;top:8px}.xgplayer-skin-default .xgplayer-screenshot .name{text-align:center;font-family:PingFangSC-Regular;font-size:13px;line-height:20px;height:20px;color:hsla(0,0%,100%,.8)}.xgplayer-skin-default .xgplayer-screenshot .name span{width:60px;height:20px;line-height:20px;background:rgba(0,0,0,.38);border-radius:10px;display:inline-block;vertical-align:middle}.lang-is-en .xgplayer-screenshot .name span,.lang-is-jp .xgplayer-screenshot .name span{width:75px;height:20px}.xgplayer-skin-default .xgplayer-texttrack{-webkit-order:7;-moz-box-ordinal-group:8;order:7;width:60px;height:150px;z-index:18;position:relative;outline:none;display:none;cursor:default;margin-top:-119px}.xgplayer-skin-default .xgplayer-texttrack ul{display:none;list-style:none;width:78px;background:rgba(0,0,0,.54);border-radius:1px;position:absolute;bottom:30px;left:0;text-align:center;white-space:nowrap;margin-left:-10px;z-index:26;cursor:pointer}.xgplayer-skin-default .xgplayer-texttrack ul li{opacity:.7;font-family:PingFangSC-Regular;font-size:11px;color:hsla(0,0%,100%,.8);padding:6px 13px}.xgplayer-skin-default .xgplayer-texttrack ul li.selected,.xgplayer-skin-default .xgplayer-texttrack ul li:hover{color:#fff;opacity:1}.xgplayer-skin-default .xgplayer-texttrack .name{text-align:center;font-family:PingFangSC-Regular;font-size:13px;cursor:pointer;color:hsla(0,0%,100%,.8);position:absolute;bottom:0;width:60px;height:20px;line-height:20px;background:rgba(0,0,0,.38);border-radius:10px;display:inline-block;vertical-align:middle}.xgplayer-skin-default.xgplayer-is-texttrack .xgplayer-texttrack,.xgplayer-skin-default.xgplayer-texttrack-active .xgplayer-texttrack ul{display:block}.xgplayer-skin-default .xgplayer-icon{display:block;width:40px;height:40px;overflow:hidden;fill:#fff}.xgplayer-skin-default .xgplayer-tips{background:rgba(0,0,0,.54);border-radius:1px;display:none;position:absolute;font-family:PingFangSC-Regular;font-size:11px;color:#fff;padding:2px 4px;text-align:center;top:-30px;left:50%;margin-left:-16px;width:auto;white-space:nowrap}.xgplayer-skin-default.xgplayer-mobile .xgplayer-tips{display:none!important}.xgplayer-skin-default .xgplayer-error{background:#000;display:none;position:absolute;left:0;top:0;width:100%;height:100%;z-index:125;font-family:PingFangSC-Regular;font-size:14px;color:#fff;text-align:center;line-height:100%;-webkit-justify-content:center;-moz-box-pack:center;justify-content:center;-webkit-align-items:center;-moz-box-align:center;align-items:center}.xgplayer-skin-default .xgplayer-error .xgplayer-error-refresh{color:#fa1f41;padding:0 3px;cursor:pointer}.xgplayer-skin-default .xgplayer-error .xgplayer-error-text{line-height:18px;margin:auto 6px}.xgplayer-skin-default.xgplayer-is-error .xgplayer-error{display:-webkit-flex;display:-moz-box;display:flex}.xgplayer-skin-default .xgplayer-memoryplay-spot{position:absolute;height:32px;left:10px;bottom:46px;background:rgba(0,0,0,.5);border-radius:32px;line-height:32px;color:#ddd;z-index:15;padding:0 32px 0 16px}.xgplayer-skin-default .xgplayer-memoryplay-spot .xgplayer-lasttime{color:red;font-weight:700}.xgplayer-skin-default .xgplayer-memoryplay-spot .btn-close{position:absolute;width:16px;height:16px;right:10px;top:2px;cursor:pointer;color:#fff;font-size:16px}',\"\"])},\"./node_modules/css-loader/lib/css-base.js\":\n/*!*************************************************!*\\\n  !*** ./node_modules/css-loader/lib/css-base.js ***!\n  \\*************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||\"\",r=e[3];if(!r)return n;if(t&&\"function\"==typeof btoa){var a=function(e){return\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+\" */\"}(r),i=r.sources.map(function(e){return\"/*# sourceURL=\"+r.sourceRoot+e+\" */\"});return[n].concat(i).concat([a]).join(\"\\n\")}return[n].join(\"\\n\")}(t,e);return t[2]?\"@media \"+t[2]+\"{\"+n+\"}\":n}).join(\"\")},t.i=function(e,n){\"string\"==typeof e&&(e=[[null,e,\"\"]]);for(var r={},a=0;a<this.length;a++){var i=this[a][0];\"number\"==typeof i&&(r[i]=!0)}for(a=0;a<e.length;a++){var o=e[a];\"number\"==typeof o[0]&&r[o[0]]||(n&&!o[2]?o[2]=n:n&&(o[2]=\"(\"+o[2]+\") and (\"+n+\")\"),t.push(o))}},t}},\"./node_modules/d/index.js\":\n/*!*********************************!*\\\n  !*** ./node_modules/d/index.js ***!\n  \\*********************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=n(/*! es5-ext/object/assign */\"./node_modules/es5-ext/object/assign/index.js\"),a=n(/*! es5-ext/object/normalize-options */\"./node_modules/es5-ext/object/normalize-options.js\"),i=n(/*! es5-ext/object/is-callable */\"./node_modules/es5-ext/object/is-callable.js\"),o=n(/*! es5-ext/string/#/contains */\"./node_modules/es5-ext/string/#/contains/index.js\");(e.exports=function(e,t){var n,i,s,l,c;return arguments.length<2||\"string\"!=typeof e?(l=t,t=e,e=null):l=arguments[2],null==e?(n=s=!0,i=!1):(n=o.call(e,\"c\"),i=o.call(e,\"e\"),s=o.call(e,\"w\")),c={value:t,configurable:n,enumerable:i,writable:s},l?r(a(l),c):c}).gs=function(e,t,n){var s,l,c,u;return\"string\"!=typeof e?(c=n,n=t,t=e,e=null):c=arguments[3],null==t?t=void 0:i(t)?null==n?n=void 0:i(n)||(c=n,n=void 0):(c=t,t=n=void 0),null==e?(s=!0,l=!1):(s=o.call(e,\"c\"),l=o.call(e,\"e\")),u={get:t,set:n,configurable:s,enumerable:l},c?r(a(c),u):u}},\"./node_modules/danmu.js/dist/index.js\":\n/*!*********************************************!*\\\n  !*** ./node_modules/danmu.js/dist/index.js ***!\n  \\*********************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";(function(e){var n,r,a,i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};!function(o,s){\"object\"==i(t)&&\"object\"==i(e)?e.exports=s():(r=[],void 0===(a=\"function\"==typeof(n=s)?n.apply(t,r):n)||(e.exports=a))}(window,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==(void 0===e?\"undefined\":i(e))&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=2)}([function(e,t,n){Object.defineProperty(t,\"__esModule\",{value:!0});var r,a=(r=n(22))&&r.__esModule?r:{default:r},i={};i.domObj=new a.default,i.createDom=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"div\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"\",a=document.createElement(e);return a.className=r,a.innerHTML=t,Object.keys(n).forEach(function(t){var r=t,i=n[t];\"video\"===e||\"audio\"===e?i&&a.setAttribute(r,i):a.setAttribute(r,i)}),a},i.hasClass=function(e,t){return e.classList?Array.prototype.some.call(e.classList,function(e){return e===t}):!!e.className.match(new RegExp(\"(\\\\s|^)\"+t+\"(\\\\s|$)\"))},i.addClass=function(e,t){e.classList?t.replace(/(^\\s+|\\s+$)/g,\"\").split(/\\s+/g).forEach(function(t){t&&e.classList.add(t)}):i.hasClass(e,t)||(e.className+=\" \"+t)},i.removeClass=function(e,t){e.classList?t.split(/\\s+/g).forEach(function(t){e.classList.remove(t)}):i.hasClass(e,t)&&t.split(/\\s+/g).forEach(function(t){var n=new RegExp(\"(\\\\s|^)\"+t+\"(\\\\s|$)\");e.className=e.className.replace(n,\" \")})},i.toggleClass=function(e,t){t.split(/\\s+/g).forEach(function(t){i.hasClass(e,t)?i.removeClass(e,t):i.addClass(e,t)})},i.findDom=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:document,t=arguments[1],n=void 0;try{n=e.querySelector(t)}catch(r){t.startsWith(\"#\")&&(n=e.getElementById(t.slice(1)))}return n},i.deepCopy=function(e,t){if(\"Object\"===i.typeOf(t)&&\"Object\"===i.typeOf(e))return Object.keys(t).forEach(function(n){\"Object\"!==i.typeOf(t[n])||t[n]instanceof Node?\"Array\"===i.typeOf(t[n])?e[n]=\"Array\"===i.typeOf(e[n])?e[n].concat(t[n]):t[n]:e[n]=t[n]:e[n]?i.deepCopy(e[n],t[n]):e[n]=t[n]}),e},i.typeOf=function(e){return Object.prototype.toString.call(e).match(/([^\\s.*]+)(?=]$)/g)[0]},i.copyDom=function(e){if(e&&1===e.nodeType){var t=document.createElement(e.tagName);return Array.prototype.forEach.call(e.attributes,function(e){t.setAttribute(e.name,e.value)}),e.innerHTML&&(t.innerHTML=e.innerHTML),t}return\"\"},i.formatTime=function(e){var t=Math.floor(e);return 1e3*t+(e-t)},t.default=i,e.exports=t.default},function(e,t,n){var r=n(13)();e.exports=function(e){return e!==r&&null!==e}},function(e,t,n){e.exports=n(3)},function(e,t,n){Object.defineProperty(t,\"__esModule\",{value:!0});var r,a=(r=n(4))&&r.__esModule?r:{default:r};n(26),t.default=a.default,e.exports=t.default},function(e,t,n){Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=s(n(5)),i=s(n(21)),o=s(n(0));function s(e){return e&&e.__esModule?e:{default:e}}var l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.config=o.default.deepCopy({overlap:!1,area:{start:0,end:1},live:!1,comments:[],direction:\"r2l\"},t),this.hideArr=[],(0,a.default)(this);var n=this;if(this.config.comments.forEach(function(e){e.duration=e.duration<5e3?5e3:e.duration,e.mode||(e.mode=\"scroll\")}),!this.config.container||1!==this.config.container.nodeType)return this.emit(\"error\",\"container id can't be empty\"),!1;if(this.container=this.config.container,this.config.containerStyle){var r=this.config.containerStyle;Object.keys(r).forEach(function(e){n.container.style[e]=r[e]})}this.live=this.config.live,this.player=this.config.player,this.direction=this.config.direction,o.default.addClass(this.container,\"danmu\"),this.bulletBtn=new i.default(this),this.emit(\"ready\")}return r(e,[{key:\"start\",value:function(){this.bulletBtn.main.start()}},{key:\"pause\",value:function(){this.bulletBtn.main.pause()}},{key:\"play\",value:function(){this.bulletBtn.main.play()}},{key:\"stop\",value:function(){this.bulletBtn.main.stop()}},{key:\"sendComment\",value:function(e){e&&e.id&&e.duration&&(e.el||e.txt)&&(e.duration=e.duration<5e3?5e3:e.duration,this.bulletBtn.main.data.push(e))}},{key:\"setCommentID\",value:function(e,t){var n=this.container.getBoundingClientRect();e&&t&&(this.bulletBtn.main.data.some(function(n){return n.id===e&&(n.id=t,!0)}),this.bulletBtn.main.queue.some(function(r){return r.id===e&&(r.id=t,r.pauseMove(n),r.startMove(n),!0)}))}},{key:\"setCommentDuration\",value:function(e,t){var n=this.container.getBoundingClientRect();e&&t&&(t=t<5e3?5e3:t,this.bulletBtn.main.data.some(function(n){return n.id===e&&(n.duration=t,!0)}),this.bulletBtn.main.queue.some(function(r){return r.id===e&&(r.duration=t,r.pauseMove(n),r.startMove(n),!0)}))}},{key:\"setAllDuration\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"scroll\",t=arguments[1],n=this.container.getBoundingClientRect();t&&(t=t<5e3?5e3:t,this.bulletBtn.main.data.forEach(function(n){e===n.mode&&(n.duration=t)}),this.bulletBtn.main.queue.forEach(function(r){e===r.mode&&(r.duration=t,r.pauseMove(n),r.startMove(n))}))}},{key:\"hide\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"scroll\";this.hideArr.indexOf(e)<0&&this.hideArr.push(e),this.bulletBtn.main.queue.filter(function(t){return e===t.mode||\"color\"===e&&t.color}).forEach(function(e){return e.remove()})}},{key:\"show\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"scroll\",t=this.hideArr.indexOf(e);t>-1&&this.hideArr.splice(t,1)}},{key:\"setDirection\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"r2l\";this.emit(\"changeDirection\",e)}}]),e}();t.default=l,e.exports=t.default},function(e,t,n){var r,a,o,s,l,c,u,d=n(6),p=n(20),f=Function.prototype.apply,g=Function.prototype.call,y=Object.create,h=Object.defineProperty,x=Object.defineProperties,m=Object.prototype.hasOwnProperty,v={configurable:!0,enumerable:!1,writable:!0};a=function(e,t){var n,a;return p(t),a=this,r.call(this,e,n=function(){o.call(a,e,n),f.call(t,this,arguments)}),n.__eeOnceListener__=t,this},l={on:r=function(e,t){var n;return p(t),m.call(this,\"__ee__\")?n=this.__ee__:(n=v.value=y(null),h(this,\"__ee__\",v),v.value=null),n[e]?\"object\"==i(n[e])?n[e].push(t):n[e]=[n[e],t]:n[e]=t,this},once:a,off:o=function(e,t){var n,r,a,o;if(p(t),!m.call(this,\"__ee__\"))return this;if(!(n=this.__ee__)[e])return this;if(\"object\"==i(r=n[e]))for(o=0;a=r[o];++o)a!==t&&a.__eeOnceListener__!==t||(2===r.length?n[e]=r[o?0:1]:r.splice(o,1));else r!==t&&r.__eeOnceListener__!==t||delete n[e];return this},emit:s=function(e){var t,n,r,a,o;if(m.call(this,\"__ee__\")&&(a=this.__ee__[e]))if(\"object\"==(void 0===a?\"undefined\":i(a))){for(n=arguments.length,o=new Array(n-1),t=1;t<n;++t)o[t-1]=arguments[t];for(a=a.slice(),t=0;r=a[t];++t)f.call(r,this,o)}else switch(arguments.length){case 1:g.call(a,this);break;case 2:g.call(a,this,arguments[1]);break;case 3:g.call(a,this,arguments[1],arguments[2]);break;default:for(n=arguments.length,o=new Array(n-1),t=1;t<n;++t)o[t-1]=arguments[t];f.call(a,this,o)}}},c={on:d(r),once:d(a),off:d(o),emit:d(s)},u=x({},c),e.exports=t=function(e){return null==e?y(u):x(Object(e),c)},t.methods=l},function(e,t,n){var r=n(7),a=n(15),i=n(16),o=n(17);(e.exports=function(e,t){var n,i,s,l,c;return arguments.length<2||\"string\"!=typeof e?(l=t,t=e,e=null):l=arguments[2],null==e?(n=s=!0,i=!1):(n=o.call(e,\"c\"),i=o.call(e,\"e\"),s=o.call(e,\"w\")),c={value:t,configurable:n,enumerable:i,writable:s},l?r(a(l),c):c}).gs=function(e,t,n){var s,l,c,u;return\"string\"!=typeof e?(c=n,n=t,t=e,e=null):c=arguments[3],null==t?t=void 0:i(t)?null==n?n=void 0:i(n)||(c=n,n=void 0):(c=t,t=n=void 0),null==e?(s=!0,l=!1):(s=o.call(e,\"c\"),l=o.call(e,\"e\")),u={get:t,set:n,configurable:s,enumerable:l},c?r(a(c),u):u}},function(e,t,n){e.exports=n(8)()?Object.assign:n(9)},function(e,t,n){e.exports=function(){var e,t=Object.assign;return\"function\"==typeof t&&(t(e={foo:\"raz\"},{bar:\"dwa\"},{trzy:\"trzy\"}),e.foo+e.bar+e.trzy===\"razdwatrzy\")}},function(e,t,n){var r=n(10),a=n(14),i=Math.max;e.exports=function(e,t){var n,o,s,l=i(arguments.length,2);for(e=Object(a(e)),s=function(r){try{e[r]=t[r]}catch(e){n||(n=e)}},o=1;o<l;++o)t=arguments[o],r(t).forEach(s);if(void 0!==n)throw n;return e}},function(e,t,n){e.exports=n(11)()?Object.keys:n(12)},function(e,t,n){e.exports=function(){try{return Object.keys(\"primitive\"),!0}catch(e){return!1}}},function(e,t,n){var r=n(1),a=Object.keys;e.exports=function(e){return a(r(e)?Object(e):e)}},function(e,t,n){e.exports=function(){}},function(e,t,n){var r=n(1);e.exports=function(e){if(!r(e))throw new TypeError(\"Cannot use null or undefined\");return e}},function(e,t,n){var r=n(1),a=Array.prototype.forEach,i=Object.create;e.exports=function(e){var t=i(null);return a.call(arguments,function(e){r(e)&&function(e,t){var n;for(n in e)t[n]=e[n]}(Object(e),t)}),t}},function(e,t,n){e.exports=function(e){return\"function\"==typeof e}},function(e,t,n){e.exports=n(18)()?String.prototype.contains:n(19)},function(e,t,n){var r=\"razdwatrzy\";e.exports=function(){return\"function\"==typeof r.contains&&!0===r.contains(\"dwa\")&&!1===r.contains(\"foo\")}},function(e,t,n){var r=String.prototype.indexOf;e.exports=function(e){return r.call(this,e,arguments[1])>-1}},function(e,t,n){e.exports=function(e){if(\"function\"!=typeof e)throw new TypeError(e+\" is not a function\");return e}},function(e,t,n){Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=o(n(0)),i=o(n(23));function o(e){return e&&e.__esModule?e:{default:e}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.danmu=t,this.main=new i.default(t),t.config.defaultOff||this.main.start()}return r(e,[{key:\"createSwitch\",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return this.switchBtn=a.default.createDom(\"dk-switch\",'<span class=\"txt\">弹</span>',{},\"danmu-switch \"+(e?\"danmu-switch-active\":\"\")),this.switchBtn}}]),e}();t.default=s,e.exports=t.default},function(e,t,n){Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),t={initDOM:function(){return document.createElement(\"div\")},initSize:10},this.init(t)}return r(e,[{key:\"init\",value:function(e){this.idleList=[],this.usingList=[],this._id=0,this.options=e,this._expand(e.initSize)}},{key:\"use\",value:function(){this.idleList.length||this._expand(1);var e=this.idleList.shift();return this.usingList.push(e),e}},{key:\"unuse\",value:function(e){var t=this.usingList.indexOf(e);t<0||(this.usingList.splice(t,1),e.innerHTML=\"\",e.textcontent=\"\",e.style=\"\",this.idleList.push(e))}},{key:\"_expand\",value:function(e){for(var t=0;t<e;t++)this.idleList.push(this.options.initDOM(this._id++))}}]),e}();t.default=a,e.exports=t.default},function(e,t,n){Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=s(n(24)),i=s(n(25)),o=s(n(0));function s(e){return e&&e.__esModule?e:{default:e}}var l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.danmu=t,this.container=t.container,this.channel=new a.default(t),this.data=[].concat(t.config.comments),this.queue=[],this.timer=null,this.retryTimer=null,this.interval=2e3,this.status=\"idle\",t.on(\"bullet_remove\",this.updateQueue.bind(this));var n=this;this.danmu.on(\"changeDirection\",function(e){n.danmu.direction=e})}return r(e,[{key:\"updateQueue\",value:function(e){var t=this;t.queue.some(function(n,r){return n.id===e.bullet.id&&(t.queue.splice(r,1),!0)})}},{key:\"init\",value:function(e,t){t||(t=this),t.data.sort(function(e,t){return e.start-t.start}),t.retryTimer||(t.retryTimer=setInterval(function(){t.readData(),t.dataHandle()},t.interval-1e3))}},{key:\"start\",value:function(){this.status=\"playing\",this.queue=[],this.container.innerHTML=\"\",this.channel.resetWithCb(this.init,this)}},{key:\"stop\",value:function(){this.status=\"closed\",clearInterval(this.retryTimer),this.retryTimer=null,this.channel.reset(),this.queue=[],this.container.innerHTML=\"\"}},{key:\"play\",value:function(){this.status=\"playing\";var e=this.channel.channels,t=this.danmu.container.getBoundingClientRect();e&&e.length>0&&[\"scroll\",\"top\",\"bottom\"].forEach(function(n){for(var r=0;r<e.length;r++)e[r].queue[n].forEach(function(e){e.resized||(e.startMove(t),e.resized=!0)});for(var a=0;a<e.length;a++)e[a].queue[n].forEach(function(e){e.resized=!1})})}},{key:\"pause\",value:function(){this.status=\"paused\";var e=this.channel.channels,t=this.danmu.container.getBoundingClientRect();e&&e.length>0&&[\"scroll\",\"top\",\"bottom\"].forEach(function(n){for(var r=0;r<e.length;r++)e[r].queue[n].forEach(function(e){e.pauseMove(t)})})}},{key:\"dataHandle\",value:function(){var e=this;\"paused\"!==this.status&&\"closed\"!==this.status&&e.queue.length&&e.queue.forEach(function(t){\"waiting\"!==t.status&&\"paused\"!==t.status||t.startMove(e.channel.containerPos)})}},{key:\"readData\",value:function(){var e=this,t=this.danmu,n=0;t.player&&t.player.currentTime&&(n=o.default.formatTime(t.player.currentTime));var r=void 0,a=e.interval,s=e.channel,l=void 0;t.player?(l=e.data.filter(function(t){return!t.start&&e.danmu.hideArr.indexOf(t.mode)<0&&(!t.color||e.danmu.hideArr.indexOf(\"color\")<0)&&(t.start=n),e.danmu.hideArr.indexOf(t.mode)<0&&(!t.color||e.danmu.hideArr.indexOf(\"color\")<0)&&t.start-a<=n&&n<=t.start+a}),t.live&&(e.data=e.data.filter(function(e){return e.start||(e.start=n),e.start>n-3*a}))):l=e.data.filter(function(t){return e.danmu.hideArr.indexOf(t.mode)<0&&(!t.color||e.danmu.hideArr.indexOf(\"color\")<0)}),l.length>0&&l.forEach(function(n){(r=new i.default(t,n)).attach(),s.addBullet(r).result?(e.queue.push(r),r.topInit()):r.detach()})}}]),e}();t.default=l,e.exports=t.default},function(e,t,n){Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.danmu=t,this.reset();var n=this;this.danmu.on(\"bullet_remove\",function(e){n.removeBullet(e.bullet)}),this.direction=t.direction,this.danmu.on(\"changeDirection\",function(e){n.direction=e}),this.containerPos=this.danmu.container.getBoundingClientRect(),this.containerWidth=this.containerPos.width,this.containerHeight=this.containerPos.height,this.containerLeft=this.containerPos.left,this.containerRight=this.containerPos.right,this.danmu.bulletResizeTimer=setInterval(function(){n.containerPos=n.danmu.container.getBoundingClientRect(),(Math.abs(n.containerPos.width-n.containerWidth)>=2||Math.abs(n.containerPos.height-n.containerHeight)>=2||Math.abs(n.containerPos.left-n.containerLeft)>=2||Math.abs(n.containerPos.right-n.containerRight)>=2)&&(n.containerWidth=n.containerPos.width,n.containerHeight=n.containerPos.height,n.containerLeft=n.containerPos.left,n.containerRight=n.containerPos.right,n.resize(!0))},50)}return r(e,[{key:\"resize\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=this.danmu.container,n=this;setTimeout(function(){n.danmu.bulletBtn.main.data&&n.danmu.bulletBtn.main.data.forEach(function(e){e.bookChannelId&&delete e.bookChannelId});var r=t.getBoundingClientRect();n.width=r.width,n.height=r.height,n.danmu.config.area&&n.danmu.config.area.start>=0&&n.danmu.config.area.end>=n.danmu.config.area.start&&(\"b2t\"===n.direction?n.width=n.width*(n.danmu.config.area.end-n.danmu.config.area.start):n.height=n.height*(n.danmu.config.area.end-n.danmu.config.area.start)),n.container=t;var a,i=/mobile/gi.test(navigator.userAgent)?10:12;a=\"b2t\"===n.direction?Math.floor(n.width/i):Math.floor(n.height/i);for(var o=[],s=0;s<a;s++)o[s]={id:s,queue:{scroll:[],top:[],bottom:[]},operating:{scroll:!1,top:!1,bottom:!1},bookId:{}};if(n.channels&&n.channels.length<=o.length){for(var l=function(t){o[t]={id:t,queue:{scroll:[],top:[],bottom:[]},operating:{scroll:!1,top:!1,bottom:!1},bookId:{}},[\"scroll\",\"top\"].forEach(function(r){n.channels[t].queue[r].forEach(function(a){a.el&&(o[t].queue[r].push(a),a.resized||(a.pauseMove(n.containerPos,e),a.startMove(n.containerPos),a.resized=!0))})}),n.channels[t].queue.bottom.forEach(function(r){if(r.el){if(o[t+o.length-n.channels.length].queue.bottom.push(r),r.channel_id[0]+r.channel_id[1]-1===t){var a=[].concat(r.channel_id);r.channel_id=[a[0]-n.channels.length+o.length,a[1]],r.top=r.channel_id[0]*i,n.danmu.config.area&&n.danmu.config.area.start&&(r.top+=n.containerHeight*n.danmu.config.area.start),r.topInit()}r.resized||(r.pauseMove(n.containerPos,e),r.startMove(n.containerPos),r.resized=!0)}})},c=0;c<n.channels.length;c++)l(c);for(var u=function(e){[\"scroll\",\"top\",\"bottom\"].forEach(function(t){o[e].queue[t].forEach(function(e){e.resized=!1})})},d=0;d<o.length;d++)u(d);n.channels=o,\"b2t\"===n.direction?n.channelWidth=i:n.channelHeight=i}else if(n.channels&&n.channels.length>o.length){for(var p=function(t){o[t]={id:t,queue:{scroll:[],top:[],bottom:[]},operating:{scroll:!1,top:!1,bottom:!1},bookId:{}},[\"scroll\",\"top\",\"bottom\"].forEach(function(r){if(\"top\"===r&&t>Math.floor(o.length/2));else if(\"bottom\"===r&&t<=Math.floor(o.length/2));else{var a=\"bottom\"===r?t-o.length+n.channels.length:t;n.channels[a].queue[r].forEach(function(s,l){if(s.el){if(o[t].queue[r].push(s),\"bottom\"===r&&s.channel_id[0]+s.channel_id[1]-1===a){var c=[].concat(s.channel_id);s.channel_id=[c[0]-n.channels.length+o.length,c[1]],s.top=s.channel_id[0]*i,n.danmu.config.area&&n.danmu.config.area.start&&(s.top+=n.containerHeight*n.danmu.config.area.start),s.topInit()}s.resized||(s.pauseMove(n.containerPos,e),s.startMove(n.containerPos),s.resized=!0)}n.channels[a].queue[r].splice(l,1)})}})},f=0;f<o.length;f++)p(f);for(var g=function(e){[\"scroll\",\"top\",\"bottom\"].forEach(function(t){n.channels[e].queue[t].forEach(function(e){e.pauseMove(n.containerPos),e.remove()})})},y=o.length;y<n.channels.length;y++)g(y);for(var h=function(e){[\"scroll\",\"top\",\"bottom\"].forEach(function(t){o[e].queue[t].forEach(function(e){e.resized=!1})})},x=0;x<o.length;x++)h(x);n.channels=o,\"b2t\"===n.direction?n.channelWidth=i:n.channelHeight=i}},10)}},{key:\"addBullet\",value:function(e){var t=this.danmu,n=this.channels,r=void 0,a=void 0,i=void 0;if(\"b2t\"===this.direction?(a=this.channelWidth,i=Math.ceil(e.width/a)):(r=this.channelHeight,i=Math.ceil(e.height/r)),i>n.length)return{result:!1,message:\"exceed channels.length, occupy=\"+i+\",channelsSize=\"+n.length};for(var o=!0,s=void 0,l=-1,c=0,u=n.length;c<u;c++)if(n[c].queue[e.mode].some(function(t){return t.id===e.id}))return{result:!1,message:\"exsited, channelOrder=\"+c+\",danmu_id=\"+e.id};if(\"scroll\"===e.mode)for(var d=0,p=n.length-i;d<=p;d++){o=!0;for(var f=d;f<d+i;f++){if((s=n[f]).operating.scroll){o=!1;break}if((s.bookId.scroll||e.prior)&&s.bookId.scroll!==e.id){o=!1;break}s.operating.scroll=!0;var g=s.queue.scroll[0];if(g){var y=g.el.getBoundingClientRect();if(\"b2t\"===this.direction){if(y.bottom>this.containerPos.bottom){o=!1,s.operating.scroll=!1;break}}else if(y.right>this.containerPos.right){o=!1,s.operating.scroll=!1;break}var h,x=void 0,m=void 0,v=void 0,b=void 0;if(\"b2t\"===this.direction?(m=(y.top-this.containerPos.top+y.height)/(x=(this.containerPos.height+y.height)/g.duration),v=this.containerPos.height,b=(this.containerPos.height+e.height)/e.duration):(m=(y.left-this.containerPos.left+y.width)/(x=(this.containerPos.width+y.width)/g.duration),v=this.containerPos.width,b=(this.containerPos.width+e.width)/e.duration),h=v/b,t.config.bOffset||(t.config.bOffset=0),x<b&&m+t.config.bOffset>h){o=!1,s.operating.scroll=!1;break}}s.operating.scroll=!1}if(o){l=d;break}}else if(\"top\"===e.mode)for(var k=0,w=n.length-i;k<=w;k++){o=!0;for(var _=k;_<k+i;_++){if(_>Math.floor(n.length/2)){o=!1;break}if((s=n[_]).operating[e.mode]){o=!1;break}if((s.bookId[e.mode]||e.prior)&&s.bookId[e.mode]!==e.id){o=!1;break}if(s.operating[e.mode]=!0,s.queue[e.mode].length>0){o=!1,s.operating[e.mode]=!1;break}s.operating[e.mode]=!1}if(o){l=k;break}}else if(\"bottom\"===e.mode)for(var E=n.length-i;E>=0;E--){o=!0;for(var C=E;C<E+i;C++){if(C<=Math.floor(n.length/2)){o=!1;break}if((s=n[C]).operating[e.mode]){o=!1;break}if((s.bookId[e.mode]||e.prior)&&s.bookId[e.mode]!==e.id){o=!1;break}if(s.operating[e.mode]=!0,s.queue[e.mode].length>0){o=!1,s.operating[e.mode]=!1;break}s.operating[e.mode]=!1}if(o){l=E;break}}if(-1!==l){for(var S=l,P=l+i;S<P;S++)(s=n[S]).operating[e.mode]=!0,s.queue[e.mode].unshift(e),e.prior&&delete s.bookId[e.mode],s.operating[e.mode]=!1;return e.prior&&(delete e.bookChannelId,t.bulletBtn.main.data.some(function(t){return t.id===e.id&&(delete t.bookChannelId,!0)})),e.channel_id=[l,i],\"b2t\"===this.direction?(e.top=l*a,this.danmu.config.area&&this.danmu.config.area.start&&(e.top+=this.containerWidth*this.danmu.config.area.start)):(e.top=l*r,this.danmu.config.area&&this.danmu.config.area.start&&(e.top+=this.containerHeight*this.danmu.config.area.start)),{result:e,message:\"success\"}}if(e.prior)if(e.bookChannelId)t.bulletBtn.main.data.some(function(t){return t.id===e.id&&(t.start+=2e3,!0)});else{l=-1;for(var j=0,T=n.length-i;j<=T;j++){o=!0;for(var O=j;O<j+i;O++)if(n[O].bookId[e.mode]){o=!1;break}if(o){l=j;break}}if(-1!==l){for(var L=l;L<l+i;L++)n[L].bookId[e.mode]=e.id;t.bulletBtn.main.data.some(function(t){return t.id===e.id&&(t.start+=2e3,t.bookChannelId=[l,i],!0)})}}return{result:!1,message:\"no surplus will right\"}}},{key:\"removeBullet\",value:function(e){for(var t=this.channels,n=e.channel_id,r=void 0,a=n[0],i=n[0]+n[1];a<i;a++)if(r=t[a]){r.operating[e.mode]=!0;var o=-1;r.queue[e.mode].some(function(t,n){return t.id===e.id&&(o=n,!0)}),o>-1&&r.queue[e.mode].splice(o,1),r.operating[e.mode]=!1}}},{key:\"resetArea\",value:function(){var e=this.danmu.container,t=this,n=e.getBoundingClientRect();t.width=n.width,t.height=n.height,t.danmu.config.area&&t.danmu.config.area.start>=0&&t.danmu.config.area.end>=t.danmu.config.area.start&&(\"b2t\"===t.direction?t.width=t.width*(t.danmu.config.area.end-t.danmu.config.area.start):t.height=t.height*(t.danmu.config.area.end-t.danmu.config.area.start)),t.container=e;var r,a=/mobile/gi.test(navigator.userAgent)?10:12;r=\"b2t\"===t.direction?Math.floor(t.width/a):Math.floor(t.height/a);for(var i=[],o=0;o<r;o++)i[o]={id:o,queue:{scroll:[],top:[],bottom:[]},operating:{scroll:!1,top:!1,bottom:!1},bookId:{}};if(t.channels&&t.channels.length<=i.length){for(var s=function(e){i[e]={id:e,queue:{scroll:[],top:[],bottom:[]},operating:{scroll:!1,top:!1,bottom:!1},bookId:{}},[\"scroll\",\"top\"].forEach(function(n){t.channels[e].queue[n].forEach(function(r){r.el&&(i[e].queue[n].push(r),r.resized||(r.pauseMove(t.containerPos,!1),r.startMove(t.containerPos),r.resized=!0))})}),t.channels[e].queue.bottom.forEach(function(n){if(n.el){if(i[e+i.length-t.channels.length].queue.bottom.push(n),n.channel_id[0]+n.channel_id[1]-1===e){var r=[].concat(n.channel_id);n.channel_id=[r[0]-t.channels.length+i.length,r[1]],n.top=n.channel_id[0]*a,t.danmu.config.area&&t.danmu.config.area.start&&(n.top+=t.containerHeight*t.danmu.config.area.start),n.topInit()}n.resized||(n.pauseMove(t.containerPos,!1),n.startMove(t.containerPos),n.resized=!0)}})},l=0;l<t.channels.length;l++)s(l);for(var c=function(e){[\"scroll\",\"top\",\"bottom\"].forEach(function(t){i[e].queue[t].forEach(function(e){e.resized=!1})})},u=0;u<i.length;u++)c(u);t.channels=i,\"b2t\"===t.direction?t.channelWidth=a:t.channelHeight=a}else if(t.channels&&t.channels.length>i.length){for(var d=function(e){i[e]={id:e,queue:{scroll:[],top:[],bottom:[]},operating:{scroll:!1,top:!1,bottom:!1},bookId:{}},[\"scroll\",\"top\",\"bottom\"].forEach(function(n){if(\"top\"===n&&e>Math.floor(i.length/2));else if(\"bottom\"===n&&e<=Math.floor(i.length/2));else{var r=\"bottom\"===n?e-i.length+t.channels.length:e;t.channels[r].queue[n].forEach(function(o,s){if(o.el){if(i[e].queue[n].push(o),\"bottom\"===n&&o.channel_id[0]+o.channel_id[1]-1===r){var l=[].concat(o.channel_id);o.channel_id=[l[0]-t.channels.length+i.length,l[1]],o.top=o.channel_id[0]*a,t.danmu.config.area&&t.danmu.config.area.start&&(o.top+=t.containerHeight*t.danmu.config.area.start),o.topInit()}o.resized||(o.pauseMove(t.containerPos,!1),o.startMove(t.containerPos),o.resized=!0)}t.channels[r].queue[n].splice(s,1)})}})},p=0;p<i.length;p++)d(p);for(var f=function(e){[\"scroll\",\"top\",\"bottom\"].forEach(function(t){i[e].queue[t].forEach(function(e){e.resized=!1})})},g=0;g<i.length;g++)f(g);t.channels=i,\"b2t\"===t.direction?t.channelWidth=a:t.channelHeight=a}}},{key:\"reset\",value:function(){var e=this.danmu.container,t=this;t.channels&&t.channels.length>0&&[\"scroll\",\"top\",\"bottom\"].forEach(function(e){for(var n=0;n<t.channels.length;n++)t.channels[n].queue[e].forEach(function(e){e.pauseMove(t.containerPos),e.remove()})}),setTimeout(function(){var n=e.getBoundingClientRect();t.width=n.width,t.height=n.height,t.danmu.config.area&&t.danmu.config.area.start>=0&&t.danmu.config.area.end>=t.danmu.config.area.start&&(\"b2t\"===t.direction?t.width=t.width*(t.danmu.config.area.end-t.danmu.config.area.start):t.height=t.height*(t.danmu.config.area.end-t.danmu.config.area.start)),t.container=e;var r,a=/mobile/gi.test(navigator.userAgent)?10:12;r=\"b2t\"===t.direction?Math.floor(t.width/a):Math.floor(t.height/a);for(var i=[],o=0;o<r;o++)i[o]={id:o,queue:{scroll:[],top:[],bottom:[]},operating:{scroll:!1,top:!1,bottom:!1},bookId:{}};t.channels=i,\"b2t\"===t.direction?t.channelWidth=a:t.channelHeight=a},200)}},{key:\"resetWithCb\",value:function(e,t){var n=this.danmu.container,r=this;r.channels&&r.channels.length>0&&[\"scroll\",\"top\",\"bottom\"].forEach(function(e){for(var t=0;t<r.channels.length;t++)r.channels[t].queue[e].forEach(function(e){e.pauseMove(r.containerPos),e.remove()})});var a=n.getBoundingClientRect();r.width=a.width,r.height=a.height,r.danmu.config.area&&r.danmu.config.area.start>=0&&r.danmu.config.area.end>=r.danmu.config.area.start&&(\"b2t\"===r.direction?r.width=r.width*(r.danmu.config.area.end-r.danmu.config.area.start):r.height=r.height*(r.danmu.config.area.end-r.danmu.config.area.start)),r.container=n;var i,o=/mobile/gi.test(navigator.userAgent)?10:12;i=\"b2t\"===r.direction?Math.floor(r.width/o):Math.floor(r.height/o);for(var s=[],l=0;l<i;l++)s[l]={id:l,queue:{scroll:[],top:[],bottom:[]},operating:{scroll:!1,top:!1,bottom:!1},bookId:{}};r.channels=s,r.channelHeight=o,e&&e(!0,t)}}]),e}();t.default=a,e.exports=t.default},function(e,t,n){Object.defineProperty(t,\"__esModule\",{value:!0});var r,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=(r=n(0))&&r.__esModule?r:{default:r},o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.danmu=t,this.duration=n.duration,this.id=n.id,this.container=t.container,this.start=n.start,this.prior=n.prior,this.color=n.color,this.bookChannelId=n.bookChannelId,this.direction=t.direction;var r=this;this.danmu.on(\"changeDirection\",function(e){r.direction=e});var a=void 0;if(this.domObj=i.default.domObj,n.el&&1===n.el.nodeType)(a=this.domObj.use()).appendChild(i.default.copyDom(n.el));else if((a=this.domObj.use()).textContent=n.txt,n.style){var o=n.style;Object.keys(o).forEach(function(e){a.style[e]=o[e]})}\"top\"===n.mode||\"bottom\"===n.mode?this.mode=n.mode:this.mode=\"scroll\",this.el=a,this.status=\"waiting\";var s=this.container.getBoundingClientRect();this.el.style.left=s.width+\"px\"}return a(e,[{key:\"attach\",value:function(){this.container.appendChild(this.el),this.elPos=this.el.getBoundingClientRect(),\"b2t\"===this.direction?(this.width=this.elPos.height,this.height=this.elPos.width):(this.width=this.elPos.width,this.height=this.elPos.height)}},{key:\"detach\",value:function(){this.container&&this.el&&(this.domObj.unuse(this.el),this.container.removeChild(this.el));var e=this;this.danmu.off(\"changeDirection\",function(t){e.direction=t}),this.el=null}},{key:\"topInit\",value:function(){if(\"b2t\"===this.direction){var e=this.container.getBoundingClientRect();this.el.style.transformOrigin=\"left top\",this.el.style.transform=\"translateX(-\"+this.top+\"px) translateY(\"+e.height+\"px) translateZ(0px) rotate(90deg)\",this.el.style.transition=\"transform 0s linear 0s\"}else this.el.style.top=this.top+\"px\"}},{key:\"pauseMove\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(\"paused\"!==this.status&&(this.status=\"paused\",clearTimeout(this.removeTimer),this.el))if(this.el.style.willChange=\"auto\",\"scroll\"===this.mode){if(t){var n,r=((new Date).getTime()-this.moveTime)/1e3*this.moveV;n=this.moveMoreS-r>=0?\"b2t\"===this.direction?(this.moveMoreS-r)/this.moveContainerHeight*e.height:(this.moveMoreS-r)/this.moveContainerWidth*e.width:this.moveMoreS-r,\"b2t\"===this.direction?this.el.style.transform=\"translateX(-\"+this.top+\"px) translateY(\"+n+\"px) translateZ(0px) rotate(90deg)\":this.el.style.left=n+\"px\"}else\"b2t\"===this.direction?this.el.style.transform=\"translateX(-\"+this.top+\"px) translateY(\"+(this.el.getBoundingClientRect().top-e.top)+\"px) translateZ(0px) rotate(90deg)\":this.el.style.left=this.el.getBoundingClientRect().left-e.left+\"px\";\"b2t\"===this.direction?this.el.style.transition=\"transform 0s linear 0s\":(this.el.style.transform=\"translateX(0px) translateY(0px) translateZ(0px)\",this.el.style.transition=\"transform 0s linear 0s\")}else this.pastDuration&&this.startTime?this.pastDuration=this.pastDuration+(new Date).getTime()-this.startTime:this.pastDuration=1}},{key:\"startMove\",value:function(e){var t=this;if(this.el&&\"start\"!==this.status)if(this.status=\"start\",this.el.style.willChange=\"transform\",\"scroll\"===this.mode)if(\"b2t\"===this.direction){this.moveV=(e.height+this.height)/this.duration*1e3;var n=(t.el.getBoundingClientRect().bottom-e.top)/this.moveV;this.el.style.transition=\"transform \"+n+\"s linear 0s\",setTimeout(function(){t.el&&(t.el.style.transform=\"translateX(-\"+t.top+\"px) translateY(-\"+t.height+\"px) translateZ(0px) rotate(90deg)\",t.moveTime=(new Date).getTime(),t.moveMoreS=t.el.getBoundingClientRect().top-e.top,t.moveContainerHeight=e.height,t.removeTimer=setTimeout(i,1e3*n))},20)}else{this.moveV=(e.width+this.width)/this.duration*1e3;var r=(t.el.getBoundingClientRect().right-e.left)/this.moveV;this.el.style.transition=\"transform \"+r+\"s linear 0s\",setTimeout(function(){t.el&&(t.el.style.transform=\"translateX(-\"+(t.el.getBoundingClientRect().right-e.left)+\"px) translateY(0px) translateZ(0px)\",t.moveTime=(new Date).getTime(),t.moveMoreS=t.el.getBoundingClientRect().left-e.left,t.moveContainerWidth=e.width,t.removeTimer=setTimeout(i,1e3*r))},20)}else{this.el.style.left=\"50%\",this.el.style.margin=\"0 0 0 -\"+this.width/2+\"px\",this.pastDuration||(this.pastDuration=1);var a=this.duration>=this.pastDuration?this.duration-this.pastDuration:0;this.removeTimer=setTimeout(i,a),this.startTime=(new Date).getTime()}function i(){if(t.el)if(\"scroll\"===t.mode){var e=t.danmu.container.getBoundingClientRect(),n=t.el.getBoundingClientRect();\"b2t\"===t.direction?n&&n.bottom<=e.top+100?(t.status=\"end\",t.remove()):(t.pauseMove(e),t.startMove(e)):n&&n.right<=e.left+100?(t.status=\"end\",t.remove()):(t.pauseMove(e),t.startMove(e))}else t.status=\"end\",t.remove()}}},{key:\"remove\",value:function(){var e=this;this.removeTimer&&clearTimeout(this.removeTimer),e.el&&e.el.parentNode&&(e.el.style.willChange=\"auto\",this.danmu.off(\"changeDirection\",function(t){e.direction=t}),this.domObj.unuse(e.el),e.el.parentNode.removeChild(e.el),e.el=null,e.danmu.emit(\"bullet_remove\",{bullet:e}))}}]),e}();t.default=o,e.exports=t.default},function(e,t,n){var r=n(27);\"string\"==typeof r&&(r=[[e.i,r,\"\"]]);n(29)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(28)(!1)).push([e.i,\".danmu{overflow:hidden;-webkit-user-select:none;-moz-user-select:none;user-select:none;-ms-user-select:none}.danmu>*{position:absolute;white-space:nowrap}.danmu-switch{width:32px;height:20px;border-radius:100px;background-color:#ccc;-webkit-box-sizing:border-box;box-sizing:border-box;outline:none;cursor:pointer;position:relative;text-align:center;margin:10px auto}.danmu-switch.danmu-switch-active{padding-left:12px;background-color:#f85959}.danmu-switch span.txt{width:20px;height:20px;line-height:20px;text-align:center;display:block;border-radius:100px;background-color:#ffffff;-webkit-box-shadow:-2px 0 0 0 rgba(0, 0, 0, .04);box-shadow:-2px 0 0 0 rgba(0, 0, 0, .04);font-family:PingFangSC;font-size:10px;font-weight:500;color:#f44336}\\n\",\"\"])},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n,r=e[1]||\"\",a=e[3];if(!a)return r;if(t&&\"function\"==typeof btoa){var i=(n=a,\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+\" */\"),o=a.sources.map(function(e){return\"/*# sourceURL=\"+a.sourceRoot+e+\" */\"});return[r].concat(o).concat([i]).join(\"\\n\")}return[r].join(\"\\n\")}(t,e);return t[2]?\"@media \"+t[2]+\"{\"+n+\"}\":n}).join(\"\")},t.i=function(e,n){\"string\"==typeof e&&(e=[[null,e,\"\"]]);for(var r={},a=0;a<this.length;a++){var i=this[a][0];\"number\"==typeof i&&(r[i]=!0)}for(a=0;a<e.length;a++){var o=e[a];\"number\"==typeof o[0]&&r[o[0]]||(n&&!o[2]?o[2]=n:n&&(o[2]=\"(\"+o[2]+\") and (\"+n+\")\"),t.push(o))}},t}},function(e,t,n){var r,a,o={},s=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===a&&(a=r.apply(this,arguments)),a}),l=function(e){var t={};return function(e){if(\"function\"==typeof e)return e();if(void 0===t[e]){var n=function(e){return document.querySelector(e)}.call(this,e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),c=null,u=0,d=[],p=n(30);function f(e,t){for(var n=0;n<e.length;n++){var r=e[n],a=o[r.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](r.parts[i]);for(;i<r.parts.length;i++)a.parts.push(v(r.parts[i],t))}else{var s=[];for(i=0;i<r.parts.length;i++)s.push(v(r.parts[i],t));o[r.id]={id:r.id,refs:1,parts:s}}}}function g(e,t){for(var n=[],r={},a=0;a<e.length;a++){var i=e[a],o=t.base?i[0]+t.base:i[0],s={css:i[1],media:i[2],sourceMap:i[3]};r[o]?r[o].parts.push(s):n.push(r[o]={id:o,parts:[s]})}return n}function y(e,t){var n=l(e.insertInto);if(!n)throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");var r=d[d.length-1];if(\"top\"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),d.push(t);else if(\"bottom\"===e.insertAt)n.appendChild(t);else{if(\"object\"!=i(e.insertAt)||!e.insertAt.before)throw new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");var a=l(e.insertInto+\" \"+e.insertAt.before);n.insertBefore(t,a)}}function h(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=d.indexOf(e);t>=0&&d.splice(t,1)}function x(e){var t=document.createElement(\"style\");return void 0===e.attrs.type&&(e.attrs.type=\"text/css\"),m(t,e.attrs),y(e,t),t}function m(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function v(e,t){var n,r,a,i;if(t.transform&&e.css){if(!(i=t.transform(e.css)))return function(){};e.css=i}if(t.singleton){var o=u++;n=c||(c=x(t)),r=w.bind(null,n,o,!1),a=w.bind(null,n,o,!0)}else e.sourceMap&&\"function\"==typeof URL&&\"function\"==typeof URL.createObjectURL&&\"function\"==typeof URL.revokeObjectURL&&\"function\"==typeof Blob&&\"function\"==typeof btoa?(n=function(e){var t=document.createElement(\"link\");return void 0===e.attrs.type&&(e.attrs.type=\"text/css\"),e.attrs.rel=\"stylesheet\",m(t,e.attrs),y(e,t),t}(t),r=function(e,t,n){var r=n.css,a=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&a;(t.convertToAbsoluteUrls||i)&&(r=p(r)),a&&(r+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+\" */\");var o=new Blob([r],{type:\"text/css\"}),s=e.href;e.href=URL.createObjectURL(o),s&&URL.revokeObjectURL(s)}.bind(null,n,t),a=function(){h(n),n.href&&URL.revokeObjectURL(n.href)}):(n=x(t),r=function(e,t){var n=t.css,r=t.media;if(r&&e.setAttribute(\"media\",r),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),a=function(){h(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else a()}}e.exports=function(e,t){if(\"undefined\"!=typeof DEBUG&&DEBUG&&\"object\"!=(\"undefined\"==typeof document?\"undefined\":i(document)))throw new Error(\"The style-loader cannot be used in a non-browser environment\");(t=t||{}).attrs=\"object\"==i(t.attrs)?t.attrs:{},t.singleton||\"boolean\"==typeof t.singleton||(t.singleton=s()),t.insertInto||(t.insertInto=\"head\"),t.insertAt||(t.insertAt=\"bottom\");var n=g(e,t);return f(n,t),function(e){for(var r=[],a=0;a<n.length;a++){var i=n[a];(s=o[i.id]).refs--,r.push(s)}for(e&&f(g(e,t),t),a=0;a<r.length;a++){var s;if(0===(s=r[a]).refs){for(var l=0;l<s.parts.length;l++)s.parts[l]();delete o[s.id]}}}};var b,k=(b=[],function(e,t){return b[e]=t,b.filter(Boolean).join(\"\\n\")});function w(e,t,n,r){var a=n?\"\":r.css;if(e.styleSheet)e.styleSheet.cssText=k(t,a);else{var i=document.createTextNode(a),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(i,o[t]):e.appendChild(i)}}},function(e,t){e.exports=function(e){var t=\"undefined\"!=typeof window&&window.location;if(!t)throw new Error(\"fixUrls requires window.location\");if(!e||\"string\"!=typeof e)return e;var n=t.protocol+\"//\"+t.host,r=n+t.pathname.replace(/\\/[^\\/]*$/,\"/\");return e.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi,function(e,t){var a,i=t.trim().replace(/^\"(.*)\"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(i)?e:(a=0===i.indexOf(\"//\")?i:0===i.indexOf(\"/\")?n+i:r+i.replace(/^\\.\\//,\"\"),\"url(\"+JSON.stringify(a)+\")\")})}}])})}).call(this,n(/*! ./../../webpack/buildin/module.js */\"./node_modules/webpack/buildin/module.js\")(e))},\"./node_modules/downloadjs/download.js\":\n/*!*********************************************!*\\\n  !*** ./node_modules/downloadjs/download.js ***!\n  \\*********************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r,a,i;\"function\"==typeof Symbol&&Symbol.iterator;a=[],void 0===(i=\"function\"==typeof(r=function(){return function e(t,n,r){var a,i,o=window,s=\"application/octet-stream\",l=r||s,c=t,u=!n&&!r&&c,d=document.createElement(\"a\"),p=function(e){return String(e)},f=o.Blob||o.MozBlob||o.WebKitBlob||p,g=n||\"download\";if(f=f.call?f.bind(o):Blob,\"true\"===String(this)&&(l=(c=[c,l])[0],c=c[1]),u&&u.length<2048&&(g=u.split(\"/\").pop().split(\"?\")[0],d.href=u,-1!==d.href.indexOf(u))){var y=new XMLHttpRequest;return y.open(\"GET\",u,!0),y.responseType=\"blob\",y.onload=function(t){e(t.target.response,g,s)},setTimeout(function(){y.send()},0),y}if(/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(c)){if(!(c.length>2096103.424&&f!==p))return navigator.msSaveBlob?navigator.msSaveBlob(v(c),g):b(c);c=v(c),l=c.type||s}else if(/([\\x80-\\xff])/.test(c)){for(var h=0,x=new Uint8Array(c.length),m=x.length;h<m;++h)x[h]=c.charCodeAt(h);c=new f([x],{type:l})}function v(e){for(var t=e.split(/[:;,]/),n=t[1],r=\"base64\"==t[2]?atob:decodeURIComponent,a=r(t.pop()),i=a.length,o=0,s=new Uint8Array(i);o<i;++o)s[o]=a.charCodeAt(o);return new f([s],{type:n})}function b(e,t){if(\"download\"in d)return d.href=e,d.setAttribute(\"download\",g),d.className=\"download-js-link\",d.innerHTML=\"downloading...\",d.style.display=\"none\",document.body.appendChild(d),setTimeout(function(){d.click(),document.body.removeChild(d),!0===t&&setTimeout(function(){o.URL.revokeObjectURL(d.href)},250)},66),!0;if(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent))return/^data:/.test(e)&&(e=\"data:\"+e.replace(/^data:([\\w\\/\\-\\+]+)/,s)),window.open(e)||confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")&&(location.href=e),!0;var n=document.createElement(\"iframe\");document.body.appendChild(n),!t&&/^data:/.test(e)&&(e=\"data:\"+e.replace(/^data:([\\w\\/\\-\\+]+)/,s)),n.src=e,setTimeout(function(){document.body.removeChild(n)},333)}if(a=c instanceof f?c:new f([c],{type:l}),navigator.msSaveBlob)return navigator.msSaveBlob(a,g);if(o.URL)b(o.URL.createObjectURL(a),!0);else{if(\"string\"==typeof a||a.constructor===p)try{return b(\"data:\"+l+\";base64,\"+o.btoa(a))}catch(e){return b(\"data:\"+l+\",\"+encodeURIComponent(a))}(i=new FileReader).onload=function(e){b(this.result)},i.readAsDataURL(a)}return!0}})?r.apply(t,a):r)||(e.exports=i)},\"./node_modules/draggabilly/draggabilly.js\":\n/*!*************************************************!*\\\n  !*** ./node_modules/draggabilly/draggabilly.js ***!\n  \\*************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r,a;\"function\"==typeof Symbol&&Symbol.iterator;\n/*!\n * Draggabilly v2.2.0\n * Make that shiz draggable\n * https://draggabilly.desandro.com\n * MIT license\n */\n!function(i,o){r=[n(/*! get-size/get-size */\"./node_modules/get-size/get-size.js\"),n(/*! unidragger/unidragger */\"./node_modules/unidragger/unidragger.js\")],void 0===(a=function(e,t){return function(e,t,n){function r(e,t){for(var n in t)e[n]=t[n];return e}var a=e.jQuery;function i(e,t){this.element=\"string\"==typeof e?document.querySelector(e):e,a&&(this.$element=a(this.element)),this.options=r({},this.constructor.defaults),this.option(t),this._create()}var o=i.prototype=Object.create(n.prototype);i.defaults={},o.option=function(e){r(this.options,e)};var s={relative:!0,absolute:!0,fixed:!0};function l(e,t,n){return n=n||\"round\",t?Math[n](e/t)*t:e}o._create=function(){this.position={},this._getPosition(),this.startPoint={x:0,y:0},this.dragPoint={x:0,y:0},this.startPosition=r({},this.position);var e=getComputedStyle(this.element);s[e.position]||(this.element.style.position=\"relative\"),this.on(\"pointerDown\",this.onPointerDown),this.on(\"pointerMove\",this.onPointerMove),this.on(\"pointerUp\",this.onPointerUp),this.enable(),this.setHandles()},o.setHandles=function(){this.handles=this.options.handle?this.element.querySelectorAll(this.options.handle):[this.element],this.bindHandles()},o.dispatchEvent=function(e,t,n){var r=[t].concat(n);this.emitEvent(e,r),this.dispatchJQueryEvent(e,t,n)},o.dispatchJQueryEvent=function(t,n,r){var a=e.jQuery;if(a&&this.$element){var i=a.Event(n);i.type=t,this.$element.trigger(i,r)}},o._getPosition=function(){var e=getComputedStyle(this.element),t=this._getPositionCoord(e.left,\"width\"),n=this._getPositionCoord(e.top,\"height\");this.position.x=isNaN(t)?0:t,this.position.y=isNaN(n)?0:n,this._addTransformPosition(e)},o._getPositionCoord=function(e,n){if(-1!=e.indexOf(\"%\")){var r=t(this.element.parentNode);return r?parseFloat(e)/100*r[n]:0}return parseInt(e,10)},o._addTransformPosition=function(e){var t=e.transform;if(0===t.indexOf(\"matrix\")){var n=t.split(\",\"),r=0===t.indexOf(\"matrix3d\")?12:4,a=parseInt(n[r],10),i=parseInt(n[r+1],10);this.position.x+=a,this.position.y+=i}},o.onPointerDown=function(e,t){this.element.classList.add(\"is-pointer-down\"),this.dispatchJQueryEvent(\"pointerDown\",e,[t])},o.dragStart=function(e,t){this.isEnabled&&(this._getPosition(),this.measureContainment(),this.startPosition.x=this.position.x,this.startPosition.y=this.position.y,this.setLeftTop(),this.dragPoint.x=0,this.dragPoint.y=0,this.element.classList.add(\"is-dragging\"),this.dispatchEvent(\"dragStart\",e,[t]),this.animate())},o.measureContainment=function(){var e=this.getContainer();if(e){var n=t(this.element),r=t(e),a=this.element.getBoundingClientRect(),i=e.getBoundingClientRect(),o=r.borderLeftWidth+r.borderRightWidth,s=r.borderTopWidth+r.borderBottomWidth,l=this.relativeStartPosition={x:a.left-(i.left+r.borderLeftWidth),y:a.top-(i.top+r.borderTopWidth)};this.containSize={width:r.width-o-l.x-n.width,height:r.height-s-l.y-n.height}}},o.getContainer=function(){var e=this.options.containment;if(e)return e instanceof HTMLElement?e:\"string\"==typeof e?document.querySelector(e):this.element.parentNode},o.onPointerMove=function(e,t,n){this.dispatchJQueryEvent(\"pointerMove\",e,[t,n])},o.dragMove=function(e,t,n){if(this.isEnabled){var r=n.x,a=n.y,i=this.options.grid,o=i&&i[0],s=i&&i[1];r=l(r,o),a=l(a,s),r=this.containDrag(\"x\",r,o),a=this.containDrag(\"y\",a,s),r=\"y\"==this.options.axis?0:r,a=\"x\"==this.options.axis?0:a,this.position.x=this.startPosition.x+r,this.position.y=this.startPosition.y+a,this.dragPoint.x=r,this.dragPoint.y=a,this.dispatchEvent(\"dragMove\",e,[t,n])}},o.containDrag=function(e,t,n){if(!this.options.containment)return t;var r=\"x\"==e?\"width\":\"height\",a=l(-this.relativeStartPosition[e],n,\"ceil\"),i=this.containSize[r];return i=l(i,n,\"floor\"),Math.max(a,Math.min(i,t))},o.onPointerUp=function(e,t){this.element.classList.remove(\"is-pointer-down\"),this.dispatchJQueryEvent(\"pointerUp\",e,[t])},o.dragEnd=function(e,t){this.isEnabled&&(this.element.style.transform=\"\",this.setLeftTop(),this.element.classList.remove(\"is-dragging\"),this.dispatchEvent(\"dragEnd\",e,[t]))},o.animate=function(){if(this.isDragging){this.positionDrag();var e=this;requestAnimationFrame(function(){e.animate()})}},o.setLeftTop=function(){this.element.style.left=this.position.x+\"px\",this.element.style.top=this.position.y+\"px\"},o.positionDrag=function(){this.element.style.transform=\"translate3d( \"+this.dragPoint.x+\"px, \"+this.dragPoint.y+\"px, 0)\"},o.staticClick=function(e,t){this.dispatchEvent(\"staticClick\",e,[t])},o.setPosition=function(e,t){this.position.x=e,this.position.y=t,this.setLeftTop()},o.enable=function(){this.isEnabled=!0},o.disable=function(){this.isEnabled=!1,this.isDragging&&this.dragEnd()},o.destroy=function(){this.disable(),this.element.style.transform=\"\",this.element.style.left=\"\",this.element.style.top=\"\",this.element.style.position=\"\",this.unbindHandles(),this.$element&&this.$element.removeData(\"draggabilly\")},o._init=function(){},a&&a.bridget&&a.bridget(\"draggabilly\",i);return i}(i,e,t)}.apply(t,r))||(e.exports=a)}(window)},\"./node_modules/es5-ext/function/noop.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/es5-ext/function/noop.js ***!\n  \\***********************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";e.exports=function(){}},\"./node_modules/es5-ext/object/assign/index.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/es5-ext/object/assign/index.js ***!\n  \\*****************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";e.exports=n(/*! ./is-implemented */\"./node_modules/es5-ext/object/assign/is-implemented.js\")()?Object.assign:n(/*! ./shim */\"./node_modules/es5-ext/object/assign/shim.js\")},\"./node_modules/es5-ext/object/assign/is-implemented.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/es5-ext/object/assign/is-implemented.js ***!\n  \\**************************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";e.exports=function(){var e,t=Object.assign;return\"function\"==typeof t&&(t(e={foo:\"raz\"},{bar:\"dwa\"},{trzy:\"trzy\"}),e.foo+e.bar+e.trzy===\"razdwatrzy\")}},\"./node_modules/es5-ext/object/assign/shim.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/es5-ext/object/assign/shim.js ***!\n  \\****************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=n(/*! ../keys */\"./node_modules/es5-ext/object/keys/index.js\"),a=n(/*! ../valid-value */\"./node_modules/es5-ext/object/valid-value.js\"),i=Math.max;e.exports=function(e,t){var n,o,s,l=i(arguments.length,2);for(e=Object(a(e)),s=function(r){try{e[r]=t[r]}catch(e){n||(n=e)}},o=1;o<l;++o)t=arguments[o],r(t).forEach(s);if(void 0!==n)throw n;return e}},\"./node_modules/es5-ext/object/is-callable.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/es5-ext/object/is-callable.js ***!\n  \\****************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";e.exports=function(e){return\"function\"==typeof e}},\"./node_modules/es5-ext/object/is-value.js\":\n/*!*************************************************!*\\\n  !*** ./node_modules/es5-ext/object/is-value.js ***!\n  \\*************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=n(/*! ../function/noop */\"./node_modules/es5-ext/function/noop.js\")();e.exports=function(e){return e!==r&&null!==e}},\"./node_modules/es5-ext/object/keys/index.js\":\n/*!***************************************************!*\\\n  !*** ./node_modules/es5-ext/object/keys/index.js ***!\n  \\***************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";e.exports=n(/*! ./is-implemented */\"./node_modules/es5-ext/object/keys/is-implemented.js\")()?Object.keys:n(/*! ./shim */\"./node_modules/es5-ext/object/keys/shim.js\")},\"./node_modules/es5-ext/object/keys/is-implemented.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/es5-ext/object/keys/is-implemented.js ***!\n  \\************************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";e.exports=function(){try{return Object.keys(\"primitive\"),!0}catch(e){return!1}}},\"./node_modules/es5-ext/object/keys/shim.js\":\n/*!**************************************************!*\\\n  !*** ./node_modules/es5-ext/object/keys/shim.js ***!\n  \\**************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=n(/*! ../is-value */\"./node_modules/es5-ext/object/is-value.js\"),a=Object.keys;e.exports=function(e){return a(r(e)?Object(e):e)}},\"./node_modules/es5-ext/object/normalize-options.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/es5-ext/object/normalize-options.js ***!\n  \\**********************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=n(/*! ./is-value */\"./node_modules/es5-ext/object/is-value.js\"),a=Array.prototype.forEach,i=Object.create;e.exports=function(e){var t=i(null);return a.call(arguments,function(e){r(e)&&function(e,t){var n;for(n in e)t[n]=e[n]}(Object(e),t)}),t}},\"./node_modules/es5-ext/object/valid-callable.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/es5-ext/object/valid-callable.js ***!\n  \\*******************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";e.exports=function(e){if(\"function\"!=typeof e)throw new TypeError(e+\" is not a function\");return e}},\"./node_modules/es5-ext/object/valid-value.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/es5-ext/object/valid-value.js ***!\n  \\****************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=n(/*! ./is-value */\"./node_modules/es5-ext/object/is-value.js\");e.exports=function(e){if(!r(e))throw new TypeError(\"Cannot use null or undefined\");return e}},\"./node_modules/es5-ext/string/#/contains/index.js\":\n/*!*********************************************************!*\\\n  !*** ./node_modules/es5-ext/string/#/contains/index.js ***!\n  \\*********************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";e.exports=n(/*! ./is-implemented */\"./node_modules/es5-ext/string/#/contains/is-implemented.js\")()?String.prototype.contains:n(/*! ./shim */\"./node_modules/es5-ext/string/#/contains/shim.js\")},\"./node_modules/es5-ext/string/#/contains/is-implemented.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/es5-ext/string/#/contains/is-implemented.js ***!\n  \\******************************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=\"razdwatrzy\";e.exports=function(){return\"function\"==typeof r.contains&&(!0===r.contains(\"dwa\")&&!1===r.contains(\"foo\"))}},\"./node_modules/es5-ext/string/#/contains/shim.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/es5-ext/string/#/contains/shim.js ***!\n  \\********************************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=String.prototype.indexOf;e.exports=function(e){return r.call(this,e,arguments[1])>-1}},\"./node_modules/ev-emitter/ev-emitter.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/ev-emitter/ev-emitter.js ***!\n  \\***********************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r,a;\"function\"==typeof Symbol&&Symbol.iterator;\"undefined\"!=typeof window&&window,void 0===(a=\"function\"==typeof(r=function(){function e(){}var t=e.prototype;return t.on=function(e,t){if(e&&t){var n=this._events=this._events||{},r=n[e]=n[e]||[];return-1==r.indexOf(t)&&r.push(t),this}},t.once=function(e,t){if(e&&t){this.on(e,t);var n=this._onceEvents=this._onceEvents||{};return(n[e]=n[e]||{})[t]=!0,this}},t.off=function(e,t){var n=this._events&&this._events[e];if(n&&n.length){var r=n.indexOf(t);return-1!=r&&n.splice(r,1),this}},t.emitEvent=function(e,t){var n=this._events&&this._events[e];if(n&&n.length){n=n.slice(0),t=t||[];for(var r=this._onceEvents&&this._onceEvents[e],a=0;a<n.length;a++){var i=n[a];r&&r[i]&&(this.off(e,i),delete r[i]),i.apply(this,t)}return this}},t.allOff=function(){delete this._events,delete this._onceEvents},e})?r.call(t,n,t,e):r)||(e.exports=a)},\"./node_modules/event-emitter/index.js\":\n/*!*********************************************!*\\\n  !*** ./node_modules/event-emitter/index.js ***!\n  \\*********************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r,a,i,o,s,l,c,u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},d=n(/*! d */\"./node_modules/d/index.js\"),p=n(/*! es5-ext/object/valid-callable */\"./node_modules/es5-ext/object/valid-callable.js\"),f=Function.prototype.apply,g=Function.prototype.call,y=Object.create,h=Object.defineProperty,x=Object.defineProperties,m=Object.prototype.hasOwnProperty,v={configurable:!0,enumerable:!1,writable:!0};s={on:r=function(e,t){var n;return p(t),m.call(this,\"__ee__\")?n=this.__ee__:(n=v.value=y(null),h(this,\"__ee__\",v),v.value=null),n[e]?\"object\"===u(n[e])?n[e].push(t):n[e]=[n[e],t]:n[e]=t,this},once:a=function(e,t){var n,a;return p(t),a=this,r.call(this,e,n=function(){i.call(a,e,n),f.call(t,this,arguments)}),n.__eeOnceListener__=t,this},off:i=function(e,t){var n,r,a,i;if(p(t),!m.call(this,\"__ee__\"))return this;if(!(n=this.__ee__)[e])return this;if(\"object\"===(void 0===(r=n[e])?\"undefined\":u(r)))for(i=0;a=r[i];++i)a!==t&&a.__eeOnceListener__!==t||(2===r.length?n[e]=r[i?0:1]:r.splice(i,1));else r!==t&&r.__eeOnceListener__!==t||delete n[e];return this},emit:o=function(e){var t,n,r,a,i;if(m.call(this,\"__ee__\")&&(a=this.__ee__[e]))if(\"object\"===(void 0===a?\"undefined\":u(a))){for(n=arguments.length,i=new Array(n-1),t=1;t<n;++t)i[t-1]=arguments[t];for(a=a.slice(),t=0;r=a[t];++t)f.call(r,this,i)}else switch(arguments.length){case 1:g.call(a,this);break;case 2:g.call(a,this,arguments[1]);break;case 3:g.call(a,this,arguments[1],arguments[2]);break;default:for(n=arguments.length,i=new Array(n-1),t=1;t<n;++t)i[t-1]=arguments[t];f.call(a,this,i)}}},l={on:d(r),once:d(a),off:d(i),emit:d(o)},c=x({},l),e.exports=t=function(e){return null==e?y(c):x(Object(e),l)},t.methods=s},\"./node_modules/get-size/get-size.js\":\n/*!*******************************************!*\\\n  !*** ./node_modules/get-size/get-size.js ***!\n  \\*******************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r,a,i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};window,void 0===(a=\"function\"==typeof(r=function(){function e(e){var t=parseFloat(e),n=-1==e.indexOf(\"%\")&&!isNaN(t);return n&&t}var t=\"undefined\"==typeof console?function(){}:function(e){console.error(e)},n=[\"paddingLeft\",\"paddingRight\",\"paddingTop\",\"paddingBottom\",\"marginLeft\",\"marginRight\",\"marginTop\",\"marginBottom\",\"borderLeftWidth\",\"borderRightWidth\",\"borderTopWidth\",\"borderBottomWidth\"],r=n.length;function a(e){var n=getComputedStyle(e);return n||t(\"Style returned \"+n+\". Are you running this code in a hidden iframe on Firefox? See https://bit.ly/getsizebug1\"),n}var o,s=!1;function l(t){if(function(){if(!s){s=!0;var t=document.createElement(\"div\");t.style.width=\"200px\",t.style.padding=\"1px 2px 3px 4px\",t.style.borderStyle=\"solid\",t.style.borderWidth=\"1px 2px 3px 4px\",t.style.boxSizing=\"border-box\";var n=document.body||document.documentElement;n.appendChild(t);var r=a(t);o=200==Math.round(e(r.width)),l.isBoxSizeOuter=o,n.removeChild(t)}}(),\"string\"==typeof t&&(t=document.querySelector(t)),t&&\"object\"==(void 0===t?\"undefined\":i(t))&&t.nodeType){var c=a(t);if(\"none\"==c.display)return function(){for(var e={width:0,height:0,innerWidth:0,innerHeight:0,outerWidth:0,outerHeight:0},t=0;t<r;t++){var a=n[t];e[a]=0}return e}();var u={};u.width=t.offsetWidth,u.height=t.offsetHeight;for(var d=u.isBorderBox=\"border-box\"==c.boxSizing,p=0;p<r;p++){var f=n[p],g=c[f],y=parseFloat(g);u[f]=isNaN(y)?0:y}var h=u.paddingLeft+u.paddingRight,x=u.paddingTop+u.paddingBottom,m=u.marginLeft+u.marginRight,v=u.marginTop+u.marginBottom,b=u.borderLeftWidth+u.borderRightWidth,k=u.borderTopWidth+u.borderBottomWidth,w=d&&o,_=e(c.width);!1!==_&&(u.width=_+(w?0:h+b));var E=e(c.height);return!1!==E&&(u.height=E+(w?0:x+k)),u.innerWidth=u.width-(h+b),u.innerHeight=u.height-(x+k),u.outerWidth=u.width+m,u.outerHeight=u.height+v,u}}return l})?r.call(t,n,t,e):r)||(e.exports=a)},\"./node_modules/style-loader/lib/addStyles.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/style-loader/lib/addStyles.js ***!\n  \\****************************************************/\n/*! no static exports found */function(e,t,n){var r={},a=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),i=function(e){var t={};return function(e){if(\"function\"==typeof e)return e();if(void 0===t[e]){var n=function(e){return document.querySelector(e)}.call(this,e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),o=null,s=0,l=[],c=n(/*! ./urls */\"./node_modules/style-loader/lib/urls.js\");function u(e,t){for(var n=0;n<e.length;n++){var a=e[n],i=r[a.id];if(i){i.refs++;for(var o=0;o<i.parts.length;o++)i.parts[o](a.parts[o]);for(;o<a.parts.length;o++)i.parts.push(h(a.parts[o],t))}else{var s=[];for(o=0;o<a.parts.length;o++)s.push(h(a.parts[o],t));r[a.id]={id:a.id,refs:1,parts:s}}}}function d(e,t){for(var n=[],r={},a=0;a<e.length;a++){var i=e[a],o=t.base?i[0]+t.base:i[0],s={css:i[1],media:i[2],sourceMap:i[3]};r[o]?r[o].parts.push(s):n.push(r[o]={id:o,parts:[s]})}return n}function p(e,t){var n=i(e.insertInto);if(!n)throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");var r=l[l.length-1];if(\"top\"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),l.push(t);else if(\"bottom\"===e.insertAt)n.appendChild(t);else{if(\"object\"!=typeof e.insertAt||!e.insertAt.before)throw new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");var a=i(e.insertInto+\" \"+e.insertAt.before);n.insertBefore(t,a)}}function f(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=l.indexOf(e);t>=0&&l.splice(t,1)}function g(e){var t=document.createElement(\"style\");return e.attrs.type=\"text/css\",y(t,e.attrs),p(e,t),t}function y(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function h(e,t){var n,r,a,i;if(t.transform&&e.css){if(!(i=t.transform(e.css)))return function(){};e.css=i}if(t.singleton){var l=s++;n=o||(o=g(t)),r=m.bind(null,n,l,!1),a=m.bind(null,n,l,!0)}else e.sourceMap&&\"function\"==typeof URL&&\"function\"==typeof URL.createObjectURL&&\"function\"==typeof URL.revokeObjectURL&&\"function\"==typeof Blob&&\"function\"==typeof btoa?(n=function(e){var t=document.createElement(\"link\");return e.attrs.type=\"text/css\",e.attrs.rel=\"stylesheet\",y(t,e.attrs),p(e,t),t}(t),r=function(e,t,n){var r=n.css,a=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&a;(t.convertToAbsoluteUrls||i)&&(r=c(r));a&&(r+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+\" */\");var o=new Blob([r],{type:\"text/css\"}),s=e.href;e.href=URL.createObjectURL(o),s&&URL.revokeObjectURL(s)}.bind(null,n,t),a=function(){f(n),n.href&&URL.revokeObjectURL(n.href)}):(n=g(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute(\"media\",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),a=function(){f(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else a()}}e.exports=function(e,t){if(\"undefined\"!=typeof DEBUG&&DEBUG&&\"object\"!=typeof document)throw new Error(\"The style-loader cannot be used in a non-browser environment\");(t=t||{}).attrs=\"object\"==typeof t.attrs?t.attrs:{},t.singleton||\"boolean\"==typeof t.singleton||(t.singleton=a()),t.insertInto||(t.insertInto=\"head\"),t.insertAt||(t.insertAt=\"bottom\");var n=d(e,t);return u(n,t),function(e){for(var a=[],i=0;i<n.length;i++){var o=n[i];(s=r[o.id]).refs--,a.push(s)}e&&u(d(e,t),t);for(i=0;i<a.length;i++){var s;if(0===(s=a[i]).refs){for(var l=0;l<s.parts.length;l++)s.parts[l]();delete r[s.id]}}}};var x=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join(\"\\n\")}}();function m(e,t,n,r){var a=n?\"\":r.css;if(e.styleSheet)e.styleSheet.cssText=x(t,a);else{var i=document.createTextNode(a),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(i,o[t]):e.appendChild(i)}}},\"./node_modules/style-loader/lib/urls.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/style-loader/lib/urls.js ***!\n  \\***********************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";e.exports=function(e){var t=\"undefined\"!=typeof window&&window.location;if(!t)throw new Error(\"fixUrls requires window.location\");if(!e||\"string\"!=typeof e)return e;var n=t.protocol+\"//\"+t.host,r=n+t.pathname.replace(/\\/[^\\/]*$/,\"/\");return e.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi,function(e,t){var a,i=t.trim().replace(/^\"(.*)\"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(i)?e:(a=0===i.indexOf(\"//\")?i:0===i.indexOf(\"/\")?n+i:r+i.replace(/^\\.\\//,\"\"),\"url(\"+JSON.stringify(a)+\")\")})}},\"./node_modules/unidragger/unidragger.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/unidragger/unidragger.js ***!\n  \\***********************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r,a;\"function\"==typeof Symbol&&Symbol.iterator;\n/*!\n * Unidragger v2.3.0\n * Draggable base class\n * MIT license\n */\n!function(i,o){r=[n(/*! unipointer/unipointer */\"./node_modules/unipointer/unipointer.js\")],void 0===(a=function(e){return function(e,t){function n(){}var r=n.prototype=Object.create(t.prototype);r.bindHandles=function(){this._bindHandles(!0)},r.unbindHandles=function(){this._bindHandles(!1)},r._bindHandles=function(t){for(var n=(t=void 0===t||t)?\"addEventListener\":\"removeEventListener\",r=t?this._touchActionValue:\"\",a=0;a<this.handles.length;a++){var i=this.handles[a];this._bindStartEvent(i,t),i[n](\"click\",this),e.PointerEvent&&(i.style.touchAction=r)}},r._touchActionValue=\"none\",r.pointerDown=function(e,t){var n=this.okayPointerDown(e);n&&(this.pointerDownPointer=t,e.preventDefault(),this.pointerDownBlur(),this._bindPostStartEvents(e),this.emitEvent(\"pointerDown\",[e,t]))};var a={TEXTAREA:!0,INPUT:!0,SELECT:!0,OPTION:!0},i={radio:!0,checkbox:!0,button:!0,submit:!0,image:!0,file:!0};return r.okayPointerDown=function(e){var t=a[e.target.nodeName],n=i[e.target.type],r=!t||n;return r||this._pointerReset(),r},r.pointerDownBlur=function(){var e=document.activeElement;e&&e.blur&&e!=document.body&&e.blur()},r.pointerMove=function(e,t){var n=this._dragPointerMove(e,t);this.emitEvent(\"pointerMove\",[e,t,n]),this._dragMove(e,t,n)},r._dragPointerMove=function(e,t){var n={x:t.pageX-this.pointerDownPointer.pageX,y:t.pageY-this.pointerDownPointer.pageY};return!this.isDragging&&this.hasDragStarted(n)&&this._dragStart(e,t),n},r.hasDragStarted=function(e){return Math.abs(e.x)>3||Math.abs(e.y)>3},r.pointerUp=function(e,t){this.emitEvent(\"pointerUp\",[e,t]),this._dragPointerUp(e,t)},r._dragPointerUp=function(e,t){this.isDragging?this._dragEnd(e,t):this._staticClick(e,t)},r._dragStart=function(e,t){this.isDragging=!0,this.isPreventingClicks=!0,this.dragStart(e,t)},r.dragStart=function(e,t){this.emitEvent(\"dragStart\",[e,t])},r._dragMove=function(e,t,n){this.isDragging&&this.dragMove(e,t,n)},r.dragMove=function(e,t,n){e.preventDefault(),this.emitEvent(\"dragMove\",[e,t,n])},r._dragEnd=function(e,t){this.isDragging=!1,setTimeout(function(){delete this.isPreventingClicks}.bind(this)),this.dragEnd(e,t)},r.dragEnd=function(e,t){this.emitEvent(\"dragEnd\",[e,t])},r.onclick=function(e){this.isPreventingClicks&&e.preventDefault()},r._staticClick=function(e,t){this.isIgnoringMouseUp&&\"mouseup\"==e.type||(this.staticClick(e,t),\"mouseup\"!=e.type&&(this.isIgnoringMouseUp=!0,setTimeout(function(){delete this.isIgnoringMouseUp}.bind(this),400)))},r.staticClick=function(e,t){this.emitEvent(\"staticClick\",[e,t])},n.getPointerPoint=t.getPointerPoint,n}(i,e)}.apply(t,r))||(e.exports=a)}(window)},\"./node_modules/unipointer/unipointer.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/unipointer/unipointer.js ***!\n  \\***********************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r,a;\"function\"==typeof Symbol&&Symbol.iterator;\n/*!\n * Unipointer v2.3.0\n * base class for doing one thing with pointer event\n * MIT license\n */\n!function(i,o){r=[n(/*! ev-emitter/ev-emitter */\"./node_modules/ev-emitter/ev-emitter.js\")],void 0===(a=function(e){return function(e,t){function n(){}var r=n.prototype=Object.create(t.prototype);r.bindStartEvent=function(e){this._bindStartEvent(e,!0)},r.unbindStartEvent=function(e){this._bindStartEvent(e,!1)},r._bindStartEvent=function(t,n){var r=(n=void 0===n||n)?\"addEventListener\":\"removeEventListener\",a=\"mousedown\";e.PointerEvent?a=\"pointerdown\":\"ontouchstart\"in e&&(a=\"touchstart\"),t[r](a,this)},r.handleEvent=function(e){var t=\"on\"+e.type;this[t]&&this[t](e)},r.getTouch=function(e){for(var t=0;t<e.length;t++){var n=e[t];if(n.identifier==this.pointerIdentifier)return n}},r.onmousedown=function(e){var t=e.button;t&&0!==t&&1!==t||this._pointerDown(e,e)},r.ontouchstart=function(e){this._pointerDown(e,e.changedTouches[0])},r.onpointerdown=function(e){this._pointerDown(e,e)},r._pointerDown=function(e,t){e.button||this.isPointerDown||(this.isPointerDown=!0,this.pointerIdentifier=void 0!==t.pointerId?t.pointerId:t.identifier,this.pointerDown(e,t))},r.pointerDown=function(e,t){this._bindPostStartEvents(e),this.emitEvent(\"pointerDown\",[e,t])};var a={mousedown:[\"mousemove\",\"mouseup\"],touchstart:[\"touchmove\",\"touchend\",\"touchcancel\"],pointerdown:[\"pointermove\",\"pointerup\",\"pointercancel\"]};return r._bindPostStartEvents=function(t){if(t){var n=a[t.type];n.forEach(function(t){e.addEventListener(t,this)},this),this._boundPointerEvents=n}},r._unbindPostStartEvents=function(){this._boundPointerEvents&&(this._boundPointerEvents.forEach(function(t){e.removeEventListener(t,this)},this),delete this._boundPointerEvents)},r.onmousemove=function(e){this._pointerMove(e,e)},r.onpointermove=function(e){e.pointerId==this.pointerIdentifier&&this._pointerMove(e,e)},r.ontouchmove=function(e){var t=this.getTouch(e.changedTouches);t&&this._pointerMove(e,t)},r._pointerMove=function(e,t){this.pointerMove(e,t)},r.pointerMove=function(e,t){this.emitEvent(\"pointerMove\",[e,t])},r.onmouseup=function(e){this._pointerUp(e,e)},r.onpointerup=function(e){e.pointerId==this.pointerIdentifier&&this._pointerUp(e,e)},r.ontouchend=function(e){var t=this.getTouch(e.changedTouches);t&&this._pointerUp(e,t)},r._pointerUp=function(e,t){this._pointerDone(),this.pointerUp(e,t)},r.pointerUp=function(e,t){this.emitEvent(\"pointerUp\",[e,t])},r._pointerDone=function(){this._pointerReset(),this._unbindPostStartEvents(),this.pointerDone()},r._pointerReset=function(){this.isPointerDown=!1,delete this.pointerIdentifier},r.pointerDone=function(){},r.onpointercancel=function(e){e.pointerId==this.pointerIdentifier&&this._pointerCancel(e,e)},r.ontouchcancel=function(e){var t=this.getTouch(e.changedTouches);t&&this._pointerCancel(e,t)},r._pointerCancel=function(e,t){this._pointerDone(),this.pointerCancel(e,t)},r.pointerCancel=function(e,t){this.emitEvent(\"pointerCancel\",[e,t])},n.getPointerPoint=function(e){return{x:e.pageX,y:e.pageY}},n}(i,e)}.apply(t,r))||(e.exports=a)}(window)},\"./node_modules/webpack/buildin/module.js\":\n/*!***********************************!*\\\n  !*** (webpack)/buildin/module.js ***!\n  \\***********************************/\n/*! no static exports found */function(e,t,n){\"use strict\";e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,\"loaded\",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,\"id\",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},\"./package.json\":\n/*!**********************!*\\\n  !*** ./package.json ***!\n  \\**********************/\n/*! exports provided: name, version, description, main, bin, scripts, keywords, babel, repository, author, license, dependencies, browserslist, devDependencies, default */function(e){e.exports={name:\"xgplayer\",version:\"2.2.0\",description:\"video player\",main:\"./dist/index.js\",bin:{xgplayer:\"bin/xgplayer.js\"},scripts:{prepare:\"npm run build\",build:\"webpack --progress --display-chunks -p\",watch:\"webpack --progress --display-chunks -p --watch --mode development\"},keywords:[\"video\",\"player\"],babel:{presets:[\"es2015\"],plugins:[\"add-module-exports\",\"babel-plugin-bulk-import\"]},repository:{type:\"git\",url:\"git+https://github.com/bytedance/xgplayer.git\"},author:\"yinguohui@bytedance.com\",license:\"MIT\",dependencies:{chalk:\"^2.3.2\",commander:\"^2.15.1\",\"danmu.js\":\"0.1.0\",deepmerge:\"^1.5.0\",downloadjs:\"1.4.7\",draggabilly:\"^2.2.0\",\"event-emitter\":\"^0.3.5\",\"fs-extra\":\"^5.0.0\",pasition:\"^1.0.1\",\"request-frame\":\"^1.5.3\"},browserslist:[\"> 5%\",\"IE 9\",\"iOS 7\",\"Firefox > 20\"],devDependencies:{autoprefixer:\"^9.1.5\",\"babel-core\":\"^6.26.3\",\"babel-loader\":\"^7.1.4\",\"babel-plugin-add-module-exports\":\"^0.2.1\",\"babel-plugin-bulk-import\":\"^1.0.2\",\"babel-plugin-transform-object-rest-spread\":\"^6.26.0\",\"babel-plugin-transform-runtime\":\"^6.23.0\",\"babel-preset-es2015\":\"^6.24.1\",chai:\"^4.1.2\",\"core-js\":\"^2.5.4\",\"css-loader\":\"^0.28.11\",\"json-loader\":\"^0.5.7\",\"node-sass\":\"^4.8.3\",\"postcss-cssnext\":\"^3.1.0\",\"postcss-loader\":\"^2.1.5\",\"raw-loader\":\"^2.0.0\",\"sass-loader\":\"^6.0.7\",\"style-loader\":\"^0.20.3\",sugarss:\"^1.0.1\",webpack:\"^4.11.0\",\"webpack-cli\":\"^3.0.2\",zlib:\"^1.0.5\"}}},\"./src/controls/collect.js\":\n/*!*********************************!*\\\n  !*** ./src/controls/collect.js ***!\n  \\*********************************/\n/*! no static exports found */function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var i=void 0,o=function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.set=function(e,n){var r=e,a=n;if(null===a)return!1;var i=\"\";if(r.indexOf(\".\")>-1){var o=r.split(\".\");i=o[0],r=o[1]}\"os_version\"===r&&(a=\"\"+a),i?\"user\"===i||\"header\"===i?t.envInfo[i][r]=a:\"headers\"===i?t.envInfo.header.headers[r]=a:t.envInfo.header.headers.custom[r]=a:t.envInfo.user.hasOwnProperty(r)?[\"user_type\",\"device_id\",\"ip_addr_id\"].indexOf(r)>-1?t.envInfo.user[r]=Number(a):[\"user_id\",\"web_id\",\"user_unique_id\",\"ssid\"].indexOf(r)>-1?t.envInfo.user[r]=String(a):[\"user_is_auth\",\"user_is_login\"].indexOf(r)>-1&&(t.envInfo.user[r]=Boolean(a)):t.envInfo.header.hasOwnProperty(r)?t.envInfo.header[r]=a:t.envInfo.header.headers.hasOwnProperty(r)?t.envInfo.header.headers[r]=a:t.envInfo.header.headers.custom[r]=a},this.get=function(){var e={user:{},header:{headers:{custom:{}}}},n=t.envInfo,r=n.user,o=Object.keys(r),s=Array.isArray(o),l=0;for(o=s?o:o[Symbol.iterator]();;){var c;if(s){if(l>=o.length)break;c=o[l++]}else{if((l=o.next()).done)break;c=l.value}var u=c;r[u]!==i&&(e.user[u]=r[u])}var d=n.header,p=Object.keys(d),f=Array.isArray(p),g=0;for(p=f?p:p[Symbol.iterator]();;){var y;if(f){if(g>=p.length)break;y=p[g++]}else{if((g=p.next()).done)break;y=g.value}var h=y;d[h]!==i&&\"headers\"!==h&&(e.header[h]=d[h])}var x=n.header.headers,m=Object.keys(x),v=Array.isArray(m),b=0;for(m=v?m:m[Symbol.iterator]();;){var k;if(v){if(b>=m.length)break;k=m[b++]}else{if((b=m.next()).done)break;k=b.value}var w=k;\"custom\"!==w&&x[w]!==i&&(e.header.headers[w]=x[w])}var _=n.header.headers.custom,E=Object.keys(_);if(E.length){var C=E,S=Array.isArray(C),P=0;for(C=S?C:C[Symbol.iterator]();;){var j;if(S){if(P>=C.length)break;j=C[P++]}else{if((P=C.next()).done)break;j=P.value}var T=j;e.header.headers.custom[T]=_[T]}}return{user:e.user,header:a({},e.header,{headers:e.header.headers})}},this.envInfo={user:{user_unique_id:i,user_type:i,user_id:i,user_is_auth:i,user_is_login:i,device_id:i,web_id:i,ip_addr_id:i,ssid:i},header:{app_id:i,app_name:i,app_install_id:i,app_package:i,app_channel:i,app_version:i,os_name:i,os_version:i,device_model:i,ab_client:i,ab_version:i,traffic_type:i,utm_source:i,utm_medium:i,utm_campaign:i,client_ip:i,device_brand:i,os_api:i,access:i,language:i,region:i,app_language:i,app_region:i,creative_id:i,ad_id:i,campaign_id:i,log_type:i,rnd:i,platform:i,sdk_version:i,province:i,city:i,timezone:i,tz_offset:i,tz_name:i,sim_region:i,carrier:i,resolution:i,browser:i,browser_version:i,referrer:i,referrer_host:i,headers:{utm_term:i,utm_content:i,custom:{}}}}},s=function(e){var t=document.createElement(\"a\");return t.href=e,t},l=screen.width||0,c=screen.height||0,u=l+\" x \"+c,d=navigator.appVersion,p=navigator.userAgent,f=navigator.language,g=document.referrer,y=s(g).hostname,h=function(e){var t=s(e).search,n={};return(t=t.slice(1)).split(\"&\").forEach(function(e){var t=e.split(\"=\"),r=t[0],a=t[1];n[r]=decodeURIComponent(void 0===a?\"\":a)}),n}(location.href),x=\"\",m=\"\",v=\"\",b=\"\"+parseFloat(d),k=void 0,w=void 0;-1!==(k=p.indexOf(\"Opera\"))&&(v=\"Opera\",b=p.substring(k+6),-1!==(k=p.indexOf(\"Version\"))&&(b=p.substring(k+8))),-1!==(k=p.indexOf(\"Edge\"))?(v=\"Microsoft Edge\",b=p.substring(k+5)):-1!==(k=p.indexOf(\"MSIE\"))?(v=\"Microsoft Internet Explorer\",b=p.substring(k+5)):-1!==(k=p.indexOf(\"Chrome\"))?(v=\"Chrome\",b=p.substring(k+7)):-1!==(k=p.indexOf(\"Safari\"))?(v=\"Safari\",b=p.substring(k+7),-1!==(k=p.indexOf(\"Version\"))&&(b=p.substring(k+8))):-1!==(k=p.indexOf(\"Firefox\"))&&(v=\"Firefox\",b=p.substring(k+8)),-1!==(w=b.indexOf(\";\"))&&(b=b.substring(0,w)),-1!==(w=b.indexOf(\" \"))&&(b=b.substring(0,w)),-1!==(w=b.indexOf(\")\"))&&(b=b.substring(0,w));for(var _=/Mobile|htc|mini|Android|iP(ad|od|hone)/.test(d)?\"wap\":\"web\",E=[{s:\"Windows 10\",r:/(Windows 10.0|Windows NT 10.0)/},{s:\"Windows 8.1\",r:/(Windows 8.1|Windows NT 6.3)/},{s:\"Windows 8\",r:/(Windows 8|Windows NT 6.2)/},{s:\"Windows 7\",r:/(Windows 7|Windows NT 6.1)/},{s:\"Android\",r:/Android/},{s:\"Sun OS\",r:/SunOS/},{s:\"Linux\",r:/(Linux|X11)/},{s:\"iOS\",r:/(iPhone|iPad|iPod)/},{s:\"Mac OS X\",r:/Mac OS X/},{s:\"Mac OS\",r:/(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/}],C=0;C<E.length;C++){var S=E[C];if(S.r.test(p)){x=S.s;break}}function P(e,t){var n=e.exec(t);return n&&n[1]?n[1]:\"\"}switch(/Windows/.test(x)&&(m=P(/Windows (.*)/,x),x=\"windows\"),x){case\"Mac OS X\":m=P(/Mac OS X (10[\\.\\_\\d]+)/,p),x=\"mac\";break;case\"Android\":m=function(e){var t=P(/Android ([\\.\\_\\d]+)/,e);return t||(t=P(/Android\\/([\\.\\_\\d]+)/,e)),t}(p),x=\"android\";break;case\"iOS\":m=(m=/OS (\\d+)_(\\d+)_?(\\d+)?/.exec(d))?m[1]+\".\"+m[2]+\".\"+(0|m[3]):\"\",x=\"ios\"}var j={screen_size:u,browser:v,browser_version:b,platform:_,os_name:x,os_version:m,userAgent:p,screen_width:l,screen_height:c,device_model:x,language:f,referrer:g,referrer_host:y,utm_source:h.utm_source,utm_medium:h.utm_medium,utm_campaign:h.utm_campaign,utm_term:h.utm_term,utm_content:h.utm_content},T={get:function(e){var t=\"no localStorage\";localStorage&&localStorage.getItem&&(t=localStorage.getItem(e));var n=t;try{t&&\"string\"==typeof t&&(n=JSON.parse(t))}catch(e){}return n},set:function(e,t){try{var n=\"string\"==typeof t?t:JSON.stringify(t);localStorage&&localStorage.setItem&&localStorage.setItem(e,n)}catch(e){}}},O=\"__tea_cache_\",L=4001,D=4e3,M=4002,R=4003,z=500,A=5001,I=\"function\"==typeof Symbol&&\"symbol\"===r(Symbol.iterator)?function(e){return void 0===e?\"undefined\":r(e)}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":void 0===e?\"undefined\":r(e)};var B=function e(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\";!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.init=function(e){t.isLog=e},this.info=function(e){for(var n=arguments.length,r=Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];var i;t.isLog&&(i=console).log.apply(i,[t.prefix+e].concat(r))},this.warn=function(e){for(var n=arguments.length,r=Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];var i;t.isLog&&(i=console).warn.apply(i,[t.prefix+e].concat(r))},this.error=function(e){for(var n=arguments.length,r=Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];var i;t.isLog&&(i=console).error.apply(i,[t.prefix+e].concat(r))},this.dir=function(){var e;t.isLog&&(e=console).dir.apply(e,arguments)},this.table=function(e){t.isLog&&console.table(e)},this.logJSON=function(e){\"object\"===(void 0===e?\"undefined\":I(e))&&t.isLog&&t.info(\"\",JSON.stringify(e,null,2))},this.deprecated=function(e){for(var n=arguments.length,r=Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];t.warn.apply(t,[\"[DEPRECATED]\"+e].concat(r))},this.throw=function(e){throw t.error(t.prefix),new Error(e)};var r=n?\"[\"+n+\"]\":\"\";this.prefix=\"[tea-sdk]\"+r},N=new B,q=function(e,t,n,r){var a=new XMLHttpRequest;a.open(\"POST\",e,!0),a.setRequestHeader(\"Content-Type\",\"application/json; charset=utf-8\"),a.onload=function(){try{var e=JSON.parse(a.responseText);n&&n(e)}catch(e){r&&r()}},a.onerror=function(){r&&r()},a.send(JSON.stringify(t))};var F=(new Date).getTimezoneOffset(),U=parseInt(-F/60,10),H=60*F,W=void 0;try{W=\"3.2.7\"}catch(e){W=\"2.x\"}var V=new(function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!==(void 0===t?\"undefined\":r(t))&&\"function\"!=typeof t?e:t}(this,e.call(this));return n.initClientEnv=function(){n.set(\"os_name\",j.os_name),n.set(\"os_version\",j.os_version),n.set(\"device_model\",j.device_model),n.set(\"platform\",j.platform),n.set(\"sdk_version\",W),n.set(\"browser\",j.browser),n.set(\"browser_version\",j.browser_version),n.set(\"language\",j.language),n.set(\"timezone\",U),n.set(\"tz_offset\",H),n.set(\"resolution\",j.screen_width+\"x\"+j.screen_height),n.set(\"screen_width\",j.screen_width),n.set(\"screen_height\",j.screen_height),n.set(\"referrer\",j.referrer),n.set(\"referrer_host\",j.referrer_host),n.set(\"utm_source\",j.utm_source),n.set(\"utm_medium\",j.utm_medium),n.set(\"utm_campaign\",j.utm_campaign),n.set(\"utm_term\",j.utm_term),n.set(\"utm_content\",j.utm_content)},n.initClientEnv(),n}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+(void 0===t?\"undefined\":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(o));var Y=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e)}return e.prototype.isString=function(e){return\"String\"===Object.prototype.toString.call(e).slice(8,-1)},e.prototype.isNumber=function(e){return\"Number\"===Object.prototype.toString.call(e).slice(8,-1)},e.prototype.isBoolean=function(e){return\"Boolean\"===Object.prototype.toString.call(e).slice(8,-1)},e.prototype.isFunction=function(e){return\"Function\"===Object.prototype.toString.call(e).slice(8,-1)},e.prototype.isNull=function(e){return\"Null\"===Object.prototype.toString.call(e).slice(8,-1)},e.prototype.isUndefined=function(e){return\"Undefined\"===Object.prototype.toString.call(e).slice(8,-1)},e.prototype.isObj=function(e){return\"Object\"===Object.prototype.toString.call(e).slice(8,-1)},e.prototype.isArray=function(e){return\"Array\"===Object.prototype.toString.call(e).slice(8,-1)},e.prototype.isFalse=function(e){return\"\"===e||void 0===e||null===e||\"null\"===e||\"undefined\"===e||0===e||!1===e||NaN===e},e.prototype.isTrue=function(e){return!this.isFalse(e)},e.prototype.isLowIE=function(){return window.XDomainRequest},e}());var K=function(e){return function(e,t,n){if(\"string\"==typeof e&&\"number\"==typeof t&&\"number\"==typeof n){var r,a=[];n=n<=25?n:n%25;var i=String.fromCharCode(n+97);r=e.split(i);for(var o=0;o<r.length;o++){var s=parseInt(r[o],n);s=1*s^t;var l=String.fromCharCode(s);a.push(l)}return a.join(\"\")}}(e,64,25)};function X(e){return e?(e^16*Math.random()>>e/4).toString(10):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,X)}var J=function(){return X().replace(/-/g,\"\").slice(0,19)},$=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var Q={cn:\"1fz22z22z1nz21z4mz4bz4bz1kz1az21z4az21z1lz21z21z1bz1iz4az1az1mz1k\",sg:\"1fz22z22z1nz21z4mz4bz4bz21z1ez18z1jz1gz49z1kz1az21z4az19z27z22z1cz1mz24z1cz20z21z1cz18z4az1az1mz1k\",va:\"1fz22z22z1nz21z4mz4bz4bz1kz18z1jz1gz24z18z49z1kz1az21z4az19z27z22z1cz1mz24z1cz20z21z1cz18z4az1az1mz1k\"},G=function(e){try{var t=document.cookie.match(new RegExp(\"(?:^|;)\\\\s*\"+e+\"=([^;]+)\"));return decodeURIComponent(t?t[1]:\"\")}catch(e){return\"\"}},Z=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!==(void 0===t?\"undefined\":r(t))&&\"function\"!=typeof t?e:t}(this,e.call(this));return n.init=function(e){var t=e.app_id,r=e.channel,a=e.log,i=e.channel_domain,o=e.name;if(\"number\"!=typeof t)throw new Error(\"app_id 必须是一个数字，注意检查是否是以`string`的方式传入的？\");n.logger=new B(o),n.logger.init(a),n.initConfigs(e),n.initUrls(r,i),n.setEnv(\"app_id\",t)},n.initConfigs=function(e){var t=e.app_id,r=e.disable_ssid,a=e.disable_webid,i=e.disable_sdk_monitor;n.app_id=t,n.evtDataCacheKey=O+\"events_\"+t,r&&(n.logger.info(\"ssid已禁用，设置user_unique_id不会请求ssid接口。\"),n.isSsidDisabled=!0),a&&(n.logger.info(\"webid服务已禁用，ssid同时被禁用。将本地生成webid。\"),n.isWebidDisabled=!0,n.isSsidDisabled=!0),i&&(n.logger.info(\"SDK监控已禁用。\"),n.isSdkMonitorDisabled=!0)},n.initUrls=function(e,t){if(\"internal\"===e&&(n.logger.warn(\"channel 的值 internal 已被废弃，已自动改为 cn。\"),e=\"cn\"),!t&&!Q[e])throw new Error(\"channel 变量只能是 `cn`, `sg`,`va`\");var r=t||K(Q[e]);r=r.replace(/\\/+$/,\"\"),n.reportUrl=r+\"/v1/list\",n.userTokensPrefix=\"\"+r},n.setEnv=function(e,t){if(\"app_id\"===e&&n.checkUserToken(t),\"user_unique_id\"===e){if(n.blackUuid.some(function(e){return e===String(t)}))return void n.logger.warn('设置了无效的值 {user_unique_id：\"%s\"}。该操作已忽略。',t);n.verifyTokens(t)}if(\"web_id\"===e){if(!t)return;(!n.envInfo.user.user_unique_id||n.envInfo.user.user_unique_id&&n.envInfo.user.user_unique_id===n.envInfo.user.web_id)&&n.set(\"user_unique_id\",t)}n.set(e,t)},n.transferFromCookie=function(){var e=n.tokensCacheKey,t=G(\"tt_webid\"),r=G(\"__tea_sdk__ssid\"),a=G(\"__tea_sdk__user_unique_id\");if(Y.isLowIE()){if(t){var i={web_id:t,ssid:t,user_unique_id:t};T.set(e,JSON.stringify(i))}return!1}if(t&&r&&a){var o={web_id:t,ssid:r,user_unique_id:a};T.set(e,JSON.stringify(o))}},n.purifyBlackUuid=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(n.blackUuid.some(function(t){return t===e.user_unique_id})){var t={};return n.setUserTokens(t),n.logger.warn('检测到无效的用户标识，已重置用户状态。{user_unique_id: \"%s\"}',e.user_unique_id),t}return e},n.getUserTokens=function(){return T.get(n.tokensCacheKey)||{}},n.setUserTokens=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return T.set(n.tokensCacheKey,e)},n.checkUserToken=function(e){var t=O+\"tokens_\"+e;n.tokensCacheKey=t,n.transferFromCookie();var r=n.purifyBlackUuid(n.getUserTokens());r.user_unique_id&&r.web_id?(n.envInfo.user.user_unique_id=r.user_unique_id,n.envInfo.user.web_id=r.web_id,n.envInfo.user.ssid=r.ssid||\"\",n.logger.info(\"初始化已经检测到了 webid user_unique_id，一般情况下不需要再次验证 id 了\"),n.unlock()):n.requestWebId(e)},n.saveTokenToStorage=function(e){var t=e.web_id,r=e.ssid,a=e.user_unique_id;n.setUserTokens({web_id:t,ssid:r,user_unique_id:a})},n.requestWebId=function(){n.isRequestWebId=!0;var e=function(e){var t=n.envInfo.user.web_id||e.web_id,r=e.ssid;n.isRequestWebId=!1,n.envInfo.user.ssid=r,n.envInfo.user.web_id=t,n.envInfo.user.user_unique_id=t,n.saveTokenToStorage({web_id:t,ssid:r,user_unique_id:t}),n.waitForVerifyTokens?(n.lock(),n.verifyTokens(n.realUuid)):(n.unlock(),n.callback&&n.callback())};n.isWebidDisabled?e({web_id:J(),ssid:\"\"}):function(){var t=n.userTokensPrefix+\"/v1/user/webid\";q(t,{app_id:n.app_id,url:location.href,user_agent:j.userAgent,referer:j.referrer,user_unique_id:\"\"},function(t){0!==t.e?n.logger.error(\"请求 webid 失败。请联系管理员。\"):e(t)},function(){n.isRequestWebId=!1,n.logger.error(\"获取 webid 失败，数据将不会被上报\")})}()},n.verifyTokens=function(e){var t=n.tokensCacheKey;if(n.waitForVerifyTokens=!1,n.realUuid=\"\"+e,n.isRequestWebId)return n.waitForVerifyTokens=!0,n.logger.info(\"正在请求 webid，requestSsid 将会在前者请求完毕之后被调用\"),!1;var r=n.getUserTokens();if(r.user_unique_id===n.realUuid&&r.ssid&&r.web_id)n.logger.info(\"传入的 user_id/user_unique_id 与 缓存中的完全一致，无需再次请求\"),n.unlock();else{n.lock(),n.envInfo.user.user_unique_id=n.realUuid;var a=$({},n.getUserTokens(),{user_unique_id:n.realUuid});if(T.set(t,JSON.stringify(a)),Y.isLowIE())return n.unlock(),!1;n.isSsidDisabled?(n.unlock(),n.callback&&n.callback()):n.requestSsid()}},n.requestSsid=function(){var e=n.getUserTokens(),t=n.userTokensPrefix+\"/v1/user/ssid\";q(t,{app_id:n.app_id,web_id:e.web_id,user_unique_id:\"\"+e.user_unique_id},function(t){if(n.unlock(),0!==t.e)n.logger.error(\"请求 ssid 失败~\");else{n.envInfo.user.ssid=t.ssid;var r=$({},e,{ssid:t.ssid});n.setUserTokens(r),n.logger.info(\"根据 user_unique_id 更新 ssid 成功！注意：在这之前不应该有数据被发出去\"),n.callback&&n.callback()}},function(){n.unlock(),n.logger.error(\"根据 user_unique_id 获取新 ssid 失败\")})},n.setEvtParams=function(e){var t=$({},e);Object.keys(t).forEach(function(e){n.evtParams[e]=t[e]})},n.mergeEnvToEvents=function(e){var t=n.mergeEnv(),r=[],a=0,i=void 0;return e.forEach(function(e){var t=!!e.params.__disable_storage__;void 0===i?i=t:(t!==i||r[a].length>=5)&&(a+=1,i=!i),r[a]=r[a]||[],r[a].push(e)}),r.map(function(e){return{events:e.map(function(e){var t=$({},n.evtParams,e.params);return delete t.__disable_storage__,$({},e,{params:JSON.stringify(t)})}),user:t.user,header:t.header,verbose:n.debugMode?1:void 0,__disable_storage__:e[0].params.__disable_storage__}})},n.mergeEnv=function(){var e=n.get(),t=V.get(),r=$({},e.user),a=$({},t.header.headers.custom,e.header.headers.custom),i=$({},t.header.headers,e.header.headers,{custom:a}),o=$({},t.header,e.header);return{user:r,header:$({},o,{headers:JSON.stringify(i)})}},n.evtParams={},n.reportUrl=\"\",n.userTokensPrefix=\"\",n.isSsidDisabled=!1,n.isWebidDisabled=!1,n.isSdkMonitorDisabled=!1,n.debugMode=!1,n.blackUuid=[\"null\",\"undefined\",\"0\",\"\",\"None\"],n.logger=function(){},n}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+(void 0===t?\"undefined\":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.lock=function(){this.isUserTokensReady=!1},t.prototype.unlock=function(){this.isUserTokensReady=!0},t.prototype.enableDebugMode=function(e){this.debugMode=e},t}(o);var ee=function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.set=function(e,n){t.cache[e]=n},this.get=function(e){return t.cache[e]},this.clean=function(e){t.cache[e]=void 0},this.cache={}},te=new ee;var ne=function(){function e(t){var n=t.disable_storage,r=void 0!==n&&n;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._isPersistent=!r,this._storage=this._isPersistent?T:new ee,this._storageKey=\"\",this._data=void 0}return e.prototype.setStorageKey=function(e){this._storageKey=e},e.prototype.getAllEvents=function(){var e=this.getData();Object.keys(e).reduce(function(t,n){return t.concat(e[n]||[])},[])},e.prototype.getData=function(){return this._checkIsDataInit(),this._data},e.prototype.add=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];this._checkIsDataInit(),0!==t.length&&(this._data[e]=t,this._save())},e.prototype.delete=function(e){this._checkIsDataInit(),this._data[e]&&(delete this._data[e],this._save())},e.prototype._checkIsDataInit=function(){if(void 0===this._data)try{var e,t=this._getDataFromStorage();if(Y.isArray(t))this._data=((e={})[J()]=t,e),this._save();else this._data=t}catch(e){this._data={}}},e.prototype._checkStorageKey=function(){if(!this._storageKey)throw new Error(\"must call setStorageKey('xxx') first\")},e.prototype._getDataFromStorage=function(){return this._checkStorageKey(),this._storage.get(this._storageKey)||{}},e.prototype._save=function(){this._checkStorageKey(),this._storage.set(this._storageKey,this._data)},e}(),re=function(e,t){try{var n=e.split(\"v1\")[0];t.forEach(function(e){var t=function(e){var t=\"\";for(var n in e)e.hasOwnProperty(n)&&(t+=\"&\"+n+\"=\"+encodeURIComponent(JSON.stringify(e[n])));return t=\"&\"===t[0]?t.slice(1):t}(e),r=new Image(1,1);r.onload=function(){r=null},r.onerror=function(){r=null},r.src=n+\"/v1/gif?\"+t})}catch(e){}},ae=function(e,t){if(window.XDomainRequest)return re(e,t);var n=new XMLHttpRequest;n.open(\"POST\",e+\"?rdn=\"+Math.random(),!0),n.onload=function(){},n.onerror=function(){n.abort()},n.send(JSON.stringify(t))},ie=function e(t,n,r,a){try{var i=t.split(\"v1\")[0];if(!i)return void a(t,n,L);n.forEach(function(e){var o=function(e){var t=\"\";for(var n in e)e.hasOwnProperty(n)&&(t+=\"&\"+n+\"=\"+encodeURIComponent(JSON.stringify(e[n])));return t=\"&\"===t[0]?t.slice(1):t}(e),s=new Image(1,1);s.onload=function(){s=null,r()},s.onerror=function(){s=null,a(t,n,D)},s.src=i+\"/v1/gif?\"+o})}catch(e){a(t,n,M,e.message)}};var oe=function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.send=function(e){var t=e.url,r=e.data,a=e.success,i=e.fail,o=e.eventError;if(function(e){var t=e.url,n=e.data,r=e.success,a=e.fail,i=e.notSure,o=e.isUnload,s=n;if(window.XDomainRequest)ie(t,s,r,a);else{if(o)return window.navigator&&window.navigator.sendBeacon?(i(),void(window.navigator.sendBeacon(t,JSON.stringify(s))?r():a(t,n,R))):void ie(t,s,r,a);var l=new XMLHttpRequest;l.open(\"POST\",t+\"?rdn=\"+Math.random(),!0),l.onload=function(){r(t,s,l.responseText)},l.onerror=function(){l.abort(),a(t,s,z)},l.send(JSON.stringify(s))}}({url:t,data:r,success:function(e,t,r){a();try{var i=JSON.parse(r).e;if(0!==i){var s=\"未知错误\";-2===i&&(s=\"事件格式错误！请检查字段类型是否正确。\"),n.logger.error(\"数据上报失败！\",\"错误码：\"+i+\"。错误信息：\"+s),o(t,i),le(e,t,i)}}catch(n){le(e,t,A)}},fail:function(e,t,r){n.logger.error(\"数据上报失败！\",\"错误码：\"+r),i(t,r),le(e,t,r)},notSure:e.notSure,isUnload:e.isUnload}),!n.isSdkMonitorDisabled&&!n.isSdkOnLoadEventReady){n.isSdkOnLoadEventReady=!0;try{var s=r[0].header,l=r[0].user;se(t,{app_id:s.app_id,app_name:s.app_name,sdk_version:s.sdk_version,web_id:l.web_id})}catch(e){}}},this.logger=t.logger||N,this.isSdkOnLoadEventReady=!1,this.isSdkMonitorDisabled=!1},se=function(e,t){try{var n={events:[{event:\"onload\",params:JSON.stringify({app_id:t.app_id,app_name:t.app_name||\"\",sdk_version:t.sdk_version}),local_time_ms:Date.now()}],user:{user_unique_id:t.web_id},header:{app_id:1338}};setTimeout(function(){ae(e,[n])},16)}catch(e){}},le=function(e,t,n){try{var r=t[0].user,a=t[0].header,i=[];t.forEach(function(e){e.events.forEach(function(e){i.push(e)})});var o={events:i.map(function(e){return{event:\"on_error\",params:JSON.stringify({error_code:n,app_id:a.app_id,app_name:a.app_name||\"\",error_event:e.event,local_time_ms:e.local_time_ms,tea_event_index:Date.now(),params:e.params,header:JSON.stringify(a),user:JSON.stringify(r)}),local_time_ms:Date.now()}}),user:{user_unique_id:r.user_unique_id},header:{app_id:1338}};setTimeout(function(){ae(e,[o])},16)}catch(e){}};var ce=function(e){function t(n){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!==(void 0===t?\"undefined\":r(t))&&\"function\"!=typeof t?e:t}(this,e.call(this));a.addListener=function(){window.addEventListener(\"unload\",function(){a.report(!0)},!1),window.addEventListener(\"beforeunload\",function(){a.report(!0)},!1),document.addEventListener(\"visibilitychange\",function(){\"hidden\"===document.visibilityState&&a.report(!0)},!1)},a.setReady=function(e){a.isReady=e,a.eventSender.isSdkMonitorDisabled=a.isSdkMonitorDisabled,a.checkAndSendCachedStorageEvents(),a.report()},a.eventReportTimer=null,a.event=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=te.get(a.evtDataCacheKey)||[],r=t?[].concat(e,n):[].concat(n,e);te.set(a.evtDataCacheKey,r),r.length>=5?a.report():(a.eventReportTimer&&clearTimeout(a.eventReportTimer),a.eventReportTimer=setTimeout(function(){a.report(),a.eventReportTimer=null},a.waitForBatchTime))},a.report=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!a.isUserTokensReady)return!1;if(!a.isReady)return!1;var t=te.get(a.evtDataCacheKey)||[];te.clean(a.evtDataCacheKey);var n=a.mergeEnvToEvents(t);a.sendData(n,e)},a.sendData=function(e,t){var n=[],r=0,i=void 0;e.forEach(function(e){var t=!!e.__disable_storage__;void 0===i?i=t:(t!==i||n[r].length>=5)&&(r+=1,i=!i),n[r]=n[r]||[],n[r].push(e)}),n.forEach(function(e){var n=J();e[0].__disable_storage__||a.eventStorage.add(n,e),a._sendData(n,e,t)})},a.checkAndSendCachedStorageEvents=function(){var e=a.eventStorage.getData(),t=Object.keys(e);t.length>0&&t.forEach(function(t){a._sendData(t,e[t])})},a._sendData=function(e,t,n){a.isReporting=!0;var r=function(){a.isReporting=!1};a.eventSender.send({url:a.reportUrl,data:t,success:function(){r(),a.sendDataSuccess(e)},fail:function(e,t){r(),a.reportErrorCallback(e,t),setTimeout(function(){a.report()},3e3)},eventError:function(e,t){a.reportErrorCallback(e,t)},notSure:r,isUnload:n})},a.sendDataSuccess=function(e){a.eventStorage.delete(e),a.report()};var i=n.log,o=n.disable_storage,s=n.max_batch_num,l=void 0===s?5:s,c=n.batch_time,u=void 0===c?30:c;return a.init(n),a.maxBatchNum=l,a.waitForBatchTime=u,a.isReady=!1,a.addListener(),a.enableDebugMode(!!i),a.eventStorage=new ne({disable_storage:o}),a.eventStorage.setStorageKey(a.evtDataCacheKey),a.eventSender=new oe({logger:a.logger}),a.reportErrorCallback=function(){},a}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+(void 0===t?\"undefined\":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(Z),ue=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var de=function(){var e=+Date.now()+Number((\"\"+Math.random()).slice(2,8));return function(){return e+=1}}(),pe=function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.init=function(e){if(!Y.isObj(e))throw new Error(\"init 的参数必须是Object类型\");n.logger.init(e.log),n.channel=new ce(ue({},e,{name:n.name})),n.channel.callback=function(){n.callbackSend&&n.start()}},this.config=function(e){Y.isObj(e)||n.logger.throw(\"config 参数必须是 {} 的格式\"),e.log&&(n.logger.init(!0),n.channel.enableDebugMode(!0),e.log=null);var t=Object.keys(e);if(!t.length)return!1;var r=t,a=Array.isArray(r),i=0;for(r=a?r:r[Symbol.iterator]();;){var o;if(a){if(i>=r.length)break;o=r[i++]}else{if((i=r.next()).done)break;o=i.value}var s=o,l=e[s];switch(s){case\"evtParams\":n.channel.setEvtParams(l);break;case\"disable_ssid\":n.logger.deprecated(\"(disable_ssid)请通过init函数来设置。\"),l&&(n.logger.info(\"ssid已禁用，设置user_unique_id不会请求ssid接口。\"),n.channel.isSsidDisabled=l);break;case\"disable_auto_pv\":l&&(n.logger.info(\"已禁止默认上报predefine_pageview事件，需手动上报。\"),n._autoSendPV=!1);break;case\"_staging_flag\":\"\"+l==\"1\"&&n.logger.info(\"根据_staging_flag设置，数据将会上报到stag 表。\"),n.channel.setEvtParams({_staging_flag:Number(l)});break;case\"reportErrorCallback\":\"function\"==typeof l&&(n.channel.reportErrorCallback=l);break;default:n.channel.setEnv(s,l)}}},this.send=function(){n.start()},this.start=function(){if(n.channel.isUserTokensReady){if(n._isSendFuncCalled)return;n._isSendFuncCalled=!0,n.logger.info(\"看到本提示，意味着用户信息已完全就绪，上报通道打开。用户标识如下：\"),n.logger.logJSON(n.channel.get().user),n._autoSendPV&&n.predefinePageView(),n.channel.setReady(!0)}else n.callbackSend=!0},this.predefinePageView=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={title:document.title||location.pathname,url:location.href,url_path:location.pathname},r=ue({},t,e);n.event(\"predefine_pageview\",r,!0)},this.event=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];var a=Y.isBoolean(t[t.length-1]),i=!!a&&t[t.length-1],o=a?t.slice(0,t.length-1):t,s=o[0],l=[];Y.isArray(s)?l=o:l[0]=o,l=l.map(function(e){return function(e,t){var n=e;/^event\\./.test(e)&&(n=e.slice(6));var r=t;return Y.isObj(r)||(r={}),r.event_index=de(),{event:n,params:r,local_time_ms:+new Date}}.apply(void 0,e)}),n.channel.event(l,i)},this._isSendFuncCalled=!1,this._autoSendPV=!0,this.name=t,this.logger=new B(t)};pe.exportMethods=[\"init\",\"config\",\"send\",\"start\",\"predefinePageView\"];t.default=function e(t){var n=this;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._exportCollect=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];n._isQueueProcessed?n._executeCmd.apply(n,t):(n.cmdQueue.push(t),n._processCmdQueue())},this._processCmdQueue=function(){if(0!==n.cmdQueue.length){var e=function(e,t,n){var r=-1;return e.forEach(function(e,a){(void 0!==n?e[n]:e)===t&&(r=a)}),r}(n.cmdQueue,\"init\",\"0\");-1!==e&&(n._isQueueProcessed=!0,n._executeCmd.apply(n,n.cmdQueue[e]),n.cmdQueue.forEach(function(t,r){r!==e&&n._executeCmd.apply(n,t)}),n.cmdQueue=[])}},this._executeCmd=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];var a,i,o=t[0];pe.exportMethods.indexOf(o)>-1?(a=n.colloctor)[o].apply(a,t.slice(1)):(i=n.colloctor).event.apply(i,t)},this.name=t||\"Collector\"+ +new Date,this.cmdQueue=[],this.colloctor=new pe(this.name),this._isQueueProcessed=!1,this._processCmdQueue(),this._exportCollect.init=this._exportCollect.bind(this,\"init\"),this._exportCollect.config=this._exportCollect.bind(this,\"config\"),this._exportCollect.send=this._exportCollect.bind(this,\"send\"),this._exportCollect.start=this._exportCollect.bind(this,\"start\"),this._exportCollect.predefinePageView=this._exportCollect.bind(this,\"predefinePageView\"),this._exportCollect},e.exports=t.default},\"./src/controls/cssFullscreen.js\":\n/*!***************************************!*\\\n  !*** ./src/controls/cssFullscreen.js ***!\n  \\***************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../player */\"./src/player.js\"));r.default.install(\"cssFullscreen\",function(){var e=this,t=e.root,n=r.default.util;function a(){n.hasClass(t,\"xgplayer-is-cssfullscreen\")?e.exitCssFullscreen():e.getCssFullscreen()}e.on(\"cssFullscreenBtnClick\",a),e.on(\"exitFullscreen\",function(){n.removeClass(t,\"xgplayer-is-cssfullscreen\")}),e.once(\"destroy\",function t(){e.off(\"cssFullscreenBtnClick\",a),e.off(\"destroy\",t)})})},\"./src/controls/danmu.js\":\n/*!*******************************!*\\\n  !*** ./src/controls/danmu.js ***!\n  \\*******************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../player */\"./src/player.js\"));r.default.install(\"danmu\",function(){var e=this,t=(e.root,r.default.util);e.on(\"initDefaultDanmu\",function(n){var r=e.root.querySelector(\"xg-danmu\");if(t.addClass(r,\"xgplayer-has-danmu\"),!e.config.danmu.closeDefaultBtn){var a=function(){n.start()},i=function(){t.hasClass(e.danmuBtn,\"danmu-switch-active\")&&n.pause()},o=function(){t.hasClass(e.danmuBtn,\"danmu-switch-active\")&&n.play()},s=function(){t.hasClass(e.danmuBtn,\"danmu-switch-active\")&&(n.stop(),n.start())};e.danmuBtn=t.copyDom(n.bulletBtn.createSwitch(!0)),e.controls.appendChild(e.danmuBtn),[\"click\",\"touchend\"].forEach(function(i){e.danmuBtn.addEventListener(i,function(i){i.preventDefault(),i.stopPropagation(),t.toggleClass(e.danmuBtn,\"danmu-switch-active\"),t.hasClass(e.danmuBtn,\"danmu-switch-active\")?(t.addClass(r,\"xgplayer-has-danmu\"),e.once(\"timeupdate\",a)):(t.removeClass(r,\"xgplayer-has-danmu\"),n.stop())})}),e.onElementClick&&r.addEventListener(\"click\",function(t){e.onElementClick(t,r)},!1),e.onElementDblclick&&r.addEventListener(\"dblclick\",function(t){e.onElementDblclick(t,r)},!1),e.on(\"pause\",i),e.on(\"play\",o),e.on(\"seeked\",s),e.once(\"destroy\",function t(){e.off(\"timeupdate\",a),e.off(\"pause\",i),e.off(\"play\",o),e.off(\"seeked\",s),e.off(\"destroy\",t)})}})})},\"./src/controls/definition.js\":\n/*!************************************!*\\\n  !*** ./src/controls/definition.js ***!\n  \\************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";(function(e){return e&&e.__esModule?e:{default:e}})(n(/*! ../player */\"./src/player.js\")).default.install(\"definition\",function(){var e=this;e.root;e.once(\"destroy\",function t(){e.off(\"destroy\",t)})})},\"./src/controls/download.js\":\n/*!**********************************!*\\\n  !*** ./src/controls/download.js ***!\n  \\**********************************/\n/*! no static exports found */function(e,t,n){\"use strict\";(function(e){return e&&e.__esModule?e:{default:e}})(n(/*! ../player */\"./src/player.js\")).default.install(\"download\",function(){var e=this;function t(){e.download()}e.on(\"downloadBtnClick\",t),e.once(\"destroy\",function n(){e.off(\"downloadBtnClick\",t),e.off(\"destroy\",n)})})},\"./src/controls/fullscreen.js\":\n/*!************************************!*\\\n  !*** ./src/controls/fullscreen.js ***!\n  \\************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../player */\"./src/player.js\"));r.default.install(\"fullscreen\",function(){var e=this,t=e.root,n=r.default.util;function a(){n.hasClass(t,\"xgplayer-is-fullscreen\")?e.exitFullscreen(t):e.getFullscreen(t)}function i(){var r=document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement;r&&r===t?(n.addClass(t,\"xgplayer-is-fullscreen\"),e.emit(\"requestFullscreen\")):(n.removeClass(t,\"xgplayer-is-fullscreen\"),e.emit(\"exitFullscreen\"))}e.on(\"fullscreenBtnClick\",a),[\"fullscreenchange\",\"webkitfullscreenchange\",\"mozfullscreenchange\",\"MSFullscreenChange\"].forEach(function(e){document.addEventListener(e,i)}),e.once(\"destroy\",function t(){e.off(\"fullscreenBtnClick\",a),[\"fullscreenchange\",\"webkitfullscreenchange\",\"mozfullscreenchange\",\"MSFullscreenChange\"].forEach(function(e){document.removeEventListener(e,i)}),e.off(\"destroy\",t)})})},\"./src/controls/i18n.js\":\n/*!******************************!*\\\n  !*** ./src/controls/i18n.js ***!\n  \\******************************/\n/*! no static exports found */function(e,t,n){\"use strict\";(function(e){return e&&e.__esModule?e:{default:e}})(n(/*! ../player */\"./src/player.js\")).default.install(\"i18n\",function(){var e=this,t={},n=e.constructor.util;t.en={HAVE_NOTHING:\"There is no information on whether audio/video is ready\",HAVE_METADATA:\"Audio/video metadata is ready \",HAVE_CURRENT_DATA:\"Data about the current play location is available, but there is not enough data to play the next frame/millisecond\",HAVE_FUTURE_DATA:\"Current and at least one frame of data is available\",HAVE_ENOUGH_DATA:\"The available data is sufficient to start playing\",NETWORK_EMPTY:\"Audio/video has not been initialized\",NETWORK_IDLE:\"Audio/video is active and has been selected for resources, but no network is used\",NETWORK_LOADING:\"The browser is downloading the data\",NETWORK_NO_SOURCE:\"No audio/video source was found\",MEDIA_ERR_ABORTED:\"The fetch process is aborted by the user\",MEDIA_ERR_NETWORK:\"An error occurred while downloading\",MEDIA_ERR_DECODE:\"An error occurred while decoding\",MEDIA_ERR_SRC_NOT_SUPPORTED:\"Audio/video is not supported\",REPLAY:\"Replay\",ERROR:\"Network is offline\",PLAY_TIPS:\"Play\",PAUSE_TIPS:\"Pause\",PLAYNEXT_TIPS:\"Play next\",DOWNLOAD_TIPS:\"Download\",ROTATE_TIPS:\"Rotate\",FULLSCREEN_TIPS:\"Fullscreen\",EXITFULLSCREEN_TIPS:\"Exit fullscreen\",CSSFULLSCREEN_TIPS:\"Cssfullscreen\",EXITCSSFULLSCREEN_TIPS:\"Exit cssfullscreen\",TEXTTRACK:\"Caption\",PIP:\"Pip\",SCREENSHOT:\"Screenshot\"},t[\"zh-cn\"]={HAVE_NOTHING:\"没有关于音频/视频是否就绪的信息\",HAVE_METADATA:\"音频/视频的元数据已就绪\",HAVE_CURRENT_DATA:\"关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒\",HAVE_FUTURE_DATA:\"当前及至少下一帧的数据是可用的\",HAVE_ENOUGH_DATA:\"可用数据足以开始播放\",NETWORK_EMPTY:\"音频/视频尚未初始化\",NETWORK_IDLE:\"音频/视频是活动的且已选取资源，但并未使用网络\",NETWORK_LOADING:\"浏览器正在下载数据\",NETWORK_NO_SOURCE:\"未找到音频/视频来源\",MEDIA_ERR_ABORTED:\"取回过程被用户中止\",MEDIA_ERR_NETWORK:\"当下载时发生错误\",MEDIA_ERR_DECODE:\"当解码时发生错误\",MEDIA_ERR_SRC_NOT_SUPPORTED:\"不支持的音频/视频格式\",REPLAY:\"重播\",ERROR:\"网络连接似乎出现了问题\",PLAY_TIPS:\"播放\",PAUSE_TIPS:\"暂停\",PLAYNEXT_TIPS:\"下一集\",DOWNLOAD_TIPS:\"下载\",ROTATE_TIPS:\"旋转\",FULLSCREEN_TIPS:\"进入全屏\",EXITFULLSCREEN_TIPS:\"退出全屏\",CSSFULLSCREEN_TIPS:\"进入样式全屏\",EXITCSSFULLSCREEN_TIPS:\"退出样式全屏\",TEXTTRACK:\"字幕\",PIP:\"画中画\",SCREENSHOT:\"截图\"},t.jp={HAVE_NOTHING:\"オーディオ/ビデオが準備できているか情報がありません\",HAVE_METADATA:\"オーディオ/ビデオのメタデータは準備できています\",HAVE_CURRENT_DATA:\"現在の再生位置に関するデータは利用可能ですが、次のフレーム/ミリ秒を再生するのに十分なデータがありません\",HAVE_FUTURE_DATA:\"現在、少なくとも次のフレームのデータが利用可能です\",HAVE_ENOUGH_DATA:\"利用可能なデータは再生を開始するのに十分です\",NETWORK_EMPTY:\"オーディオ/ビデオが初期化されていません\",NETWORK_IDLE:\"オーディオ/ビデオはアクティブでリソースが選択されていますが、ネットワークが使用されていません\",NETWORK_LOADING:\"ブラウザーはデータをダウンロードしています\",NETWORK_NO_SOURCE:\"オーディオ/ビデオ のソースが見つかりません\",MEDIA_ERR_ABORTED:\"ユーザーによってフェッチプロセスが中止されました\",MEDIA_ERR_NETWORK:\"ダウンロード中にエラーが発生しました\",MEDIA_ERR_DECODE:\"デコード中にエラーが発生しました\",MEDIA_ERR_SRC_NOT_SUPPORTED:\"オーディオ/ビデオ の形式がサポートされていません\",REPLAY:\"リプレイ\",ERROR:\"ネットワークの接続に問題が発生しました\",PLAY_TIPS:\"プレイ\",PAUSE_TIPS:\"一時停止\",PLAYNEXT_TIPS:\"次をプレイ\",DOWNLOAD_TIPS:\"ダウンロード\",ROTATE_TIPS:\"回転\",FULLSCREEN_TIPS:\"フルスクリーン\",EXITFULLSCREEN_TIPS:\"フルスクリーンを終了\",CSSFULLSCREEN_TIPS:\"シアターモード\",EXITCSSFULLSCREEN_TIPS:\"シアターモードを終了\",TEXTTRACK:\"字幕\",PIP:\"ミニプレーヤー\",SCREENSHOT:\"スクリーンショット\"},Object.defineProperty(e,\"lang\",{get:function(){return e.config&&t[e.config.lang]||t.en},set:function(e){\"Object\"===n.typeOf(e)&&Object.keys(e).forEach(function(n){t[n]=e[n]})}})})},\"./src/controls/localPreview.js\":\n/*!**************************************!*\\\n  !*** ./src/controls/localPreview.js ***!\n  \\**************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";(function(e){return e&&e.__esModule?e:{default:e}})(n(/*! ../player */\"./src/player.js\")).default.install(\"localPreview\",function(){var e=this,t=e.root;function n(n){e.uploadFile=n.files[0];var r=URL.createObjectURL(e.uploadFile);util.hasClass(t,\"xgplayer-nostart\")?(e.config.url=r,e.start()):(e.src=r,e.play())}e.on(\"upload\",n),e.once(\"destroy\",function t(){e.off(\"upload\",n),e.off(\"destroy\",t)})})},\"./src/controls/logger.js\":\n/*!********************************!*\\\n  !*** ./src/controls/logger.js ***!\n  \\********************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=o(n(/*! ../player */\"./src/player.js\")),a=o(n(/*! ../utils/sniffer */\"./src/utils/sniffer.js\")),i=o(n(/*! ./collect */\"./src/controls/collect.js\"));function o(e){return e&&e.__esModule?e:{default:e}}r.default.install(\"logger\",function(){var e=this,t=r.default.util;if(!0!==e.config.noLog){var n=function(){e.video.played;var t=l(e.logParams.played),n=(new Date).getTime();c();var r={url:e.logParams.pluginSrc?e.logParams.pluginSrc:e.logParams.playSrc,vid:e.config.vid,bc:e.logParams.bc-1>0?e.logParams.bc-1:0,bb:e.logParams.bc-1>0?1:0,bu_acu_t:e.logParams.bu_acu_t,pt:e.logParams.pt,vt:e.logParams.vt,vd:1e3*e.logParams.vd,watch_dur:parseFloat((1e3*t).toFixed(3)),cur_play_pos:parseFloat((1e3*e.currentTime).toFixed(3)),et:n};window.__xigua_log_sdk__(\"c\",r)},o=function(){e.video.played;var t=l(e.logParams.played),n=(new Date).getTime();c();var r={url:e.logParams.pluginSrc?e.logParams.pluginSrc:e.logParams.playSrc,vid:e.config.vid,bc:e.logParams.bc-1>0?e.logParams.bc-1:0,bb:e.logParams.bc-1>0?1:0,bu_acu_t:e.logParams.bu_acu_t,pt:e.logParams.pt,vt:e.logParams.vt,vd:1e3*e.logParams.vd,watch_dur:parseFloat((1e3*t).toFixed(3)),cur_play_pos:parseFloat((1e3*e.currentTime).toFixed(3)),lt:n};window.__xigua_log_sdk__(\"d\",r)},s=function(t){e.video.played;var n=l(e.logParams.played);c();var r=(new Date).getTime();if(!(e.logParams.lastErrLog&&r-e.logParams.lastErrLog<=3e3)){e.logParams.lastErrLog=r;var a={url:e.logParams.pluginSrc?e.logParams.pluginSrc:e.logParams.playSrc,vid:e.config.vid,bc:e.logParams.bc-1>0?e.logParams.bc-1:0,bb:e.logParams.bc-1>0?1:0,bu_acu_t:e.logParams.bu_acu_t,pt:e.logParams.pt,vt:e.logParams.vt,vd:1e3*e.logParams.vd,watch_dur:parseFloat((1e3*n).toFixed(3)),err_msg:t.errd.msg,line:t.errd.line,et:r,cur_play_pos:parseFloat((1e3*e.currentTime).toFixed(3))};if(e.logParams.nologFunc&&e.logParams.nologFunc(e))return!0;window.__xigua_log_sdk__(\"e\",a)}};window.__xigua_log_sdk__||(window.__xigua_log_sdk__=new i.default(\"tracker\"),window.__xigua_log_sdk__.init({app_id:1300,channel:\"cn\",log:!1,disable_sdk_monitor:!0}),window.__xigua_log_sdk__(\"config\",{evtParams:{log_type:\"logger\",page_url:document.URL,domain:window.location.host,pver:e.version,ua:navigator.userAgent.toLowerCase()},disable_auto_pv:!0}),window.__xigua_log_sdk__.start()),e.config.uid&&window.__xigua_log_sdk__(\"config\",{user_unique_id:e.config.uid});var l=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=[],n=0;n<e.length;n++)if(!(!e[n].end||e[n].begin<0||e[n].end<0||e[n].end<e[n].begin))if(t.length<1)t.push({begin:e[n].begin,end:e[n].end});else for(var r=0;r<t.length;r++){var a=e[n].begin,i=e[n].end;if(i<t[r].begin){t.splice(r,0,{begin:a,end:i});break}if(!(a>t[r].end)){var o=t[r].begin,s=t[r].end;t[r].begin=Math.min(a,o),t[r].end=Math.max(i,s);break}if(r>t.length-2){t.push({begin:a,end:i});break}}for(var l=0,c=0;c<t.length;c++)l+=t[c].end-t[c].begin;return l},c=function(){e.logParams.pt&&e.logParams.vt||(e.logParams.pt=(new Date).getTime(),e.logParams.vt=e.logParams.pt),e.logParams.pt>e.logParams.vt&&(e.logParams.pt=e.logParams.vt)},u=function(n){if(t.hasClass(e.root,\"xgplayer-is-enter\")){var r=(new Date).getTime(),a={url:e.logParams.pluginSrc?e.logParams.pluginSrc:e.logParams.playSrc,vid:e.config.vid,pt:e.logParams.pt,lt:r};window.__xigua_log_sdk__(\"b\",a)}else if(t.hasClass(e.root,\"xgplayer-playing\")){var i=l(e.logParams.played),o=(new Date).getTime();c();var s={url:e.logParams.pluginSrc?e.logParams.pluginSrc:e.logParams.playSrc,vid:e.config.vid,bc:e.logParams.bc-1>0?e.logParams.bc-1:0,bb:e.logParams.bc-1>0?1:0,bu_acu_t:e.logParams.bu_acu_t,pt:e.logParams.pt,vt:e.logParams.vt,vd:1e3*e.logParams.vd,watch_dur:parseFloat((1e3*i).toFixed(3)),cur_play_pos:parseFloat((1e3*e.currentTime).toFixed(3)),lt:o};window.__xigua_log_sdk__(\"d\",s)}};\"pc\"===a.default.device?window.addEventListener(\"beforeunload\",u,!1):\"mobile\"===a.default.device&&window.addEventListener(\"pagehide\",u,!1),e.on(\"routechange\",u),e.on(\"ended\",n),e.on(\"urlchange\",o),e.on(\"error\",s),e.once(\"destroy\",function t(){\"pc\"===a.default.device?window.removeEventListener(\"beforeunload\",u):\"mobile\"===a.default.device&&window.removeEventListener(\"pagehide\",u),e.off(\"routechange\",u),e.off(\"ended\",n),e.off(\"urlchange\",o),e.off(\"error\",s),e.off(\"destroy\",t)})}})},\"./src/controls/memoryPlay.js\":\n/*!************************************!*\\\n  !*** ./src/controls/memoryPlay.js ***!\n  \\************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";(function(e){return e&&e.__esModule?e:{default:e}})(n(/*! ../player */\"./src/player.js\")).default.install(\"memoryPlay\",function(){var e=this;e.on(\"memoryPlayStart\",function(t){e.currentTime=t})})},\"./src/controls/mobile.js\":\n/*!********************************!*\\\n  !*** ./src/controls/mobile.js ***!\n  \\********************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../player */\"./src/player.js\"));r.default.install(\"mobile\",function(){var e=this,t=r.default.util,n=(e.controls,e.root);function a(t){e.config.autoplay&&e.start()}e.onElementTouchend=function(e,r){if(e.preventDefault(),e.stopPropagation(),t.hasClass(n,\"xgplayer-inactive\")?this.emit(\"focus\"):this.emit(\"blur\"),!this.config.closeVideoTouch&&!this.isTouchMove){if(t.hasClass(this.root,\"xgplayer-nostart\"))return!1;this.ended||(this.paused?this.play():this.pause())}},e.video.addEventListener(\"touchend\",function(t){e.onElementTouchend(t,e.video)},!1),e.video.addEventListener(\"touchstart\",function(){e.isTouchMove=!1}),e.video.addEventListener(\"touchmove\",function(){e.isTouchMove=!0}),e.once(\"ready\",a),e.once(\"destroy\",function t(){e.off(\"ready\",a),e.off(\"destroy\",t)})})},\"./src/controls/pc.js\":\n/*!****************************!*\\\n  !*** ./src/controls/pc.js ***!\n  \\****************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../player */\"./src/player.js\"));r.default.install(\"pc\",function(){var e=this,t=r.default.util,n=e.controls,a=e.root,i=0,o=void 0;function s(){clearTimeout(e.leavePlayerTimer),e.emit(\"focus\",e)}function l(){e.config.closePlayerBlur||(e.leavePlayerTimer=setTimeout(function(){e.emit(\"blur\",e)},e.config.leavePlayerTime||0))}function c(t){e.config.autoplay&&e.start()}e.onElementClick=function(e,n){e.preventDefault(),e.stopPropagation();var r=this;r.config.closeVideoClick||(i++,o&&clearTimeout(o),1===i?o=setTimeout(function(){if(t.hasClass(r.root,\"xgplayer-nostart\"))return!1;r.ended||(r.paused?r.play():r.pause()),i=0},200):i=0)},e.video.addEventListener(\"click\",function(t){e.onElementClick(t,e.video)},!1),e.onElementDblclick=function(e,t){if(e.preventDefault(),e.stopPropagation(),!this.config.closeVideoDblclick){var r=n.querySelector(\".xgplayer-fullscreen\");if(r){var a=void 0;document.createEvent?(a=document.createEvent(\"Event\")).initEvent(\"click\",!0,!0):a=new Event(\"click\"),r.dispatchEvent(a)}}},e.video.addEventListener(\"dblclick\",function(t){e.onElementDblclick(t,e.video)},!1),a.addEventListener(\"mouseenter\",s),a.addEventListener(\"mouseleave\",l),n.addEventListener(\"mouseenter\",function(t){e.userTimer&&clearTimeout(e.userTimer)},!1),n.addEventListener(\"mouseleave\",function(t){e.config.closeControlsBlur||e.emit(\"focus\",e)},!1),e.once(\"ready\",c),e.once(\"destroy\",function t(){a.removeEventListener(\"mouseenter\",s),a.removeEventListener(\"mouseleave\",l),e.off(\"ready\",c),e.off(\"destroy\",t)})})},\"./src/controls/pip.js\":\n/*!*****************************!*\\\n  !*** ./src/controls/pip.js ***!\n  \\*****************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../player */\"./src/player.js\"));r.default.install(\"pip\",function(){var e=this,t=r.default.util,n=e.root;function a(){t.hasClass(n,\"xgplayer-pip-active\")?e.exitPIP():e.getPIP()}e.on(\"pipBtnClick\",a),e.once(\"destroy\",function t(){e.off(\"pipBtnClick\",a),e.off(\"destroy\",t)})})},\"./src/controls/play.js\":\n/*!******************************!*\\\n  !*** ./src/controls/play.js ***!\n  \\******************************/\n/*! no static exports found */function(e,t,n){\"use strict\";(function(e){return e&&e.__esModule?e:{default:e}})(n(/*! ../player */\"./src/player.js\")).default.install(\"play\",function(){var e=this;function t(){e.ended||(e.paused?e.play():e.pause())}e.on(\"playBtnClick\",t),e.once(\"destroy\",function n(){e.off(\"playBtnClick\",t),e.off(\"destroy\",n)})})},\"./src/controls/playNext.js\":\n/*!**********************************!*\\\n  !*** ./src/controls/playNext.js ***!\n  \\**********************************/\n/*! no static exports found */function(e,t,n){\"use strict\";(function(e){return e&&e.__esModule?e:{default:e}})(n(/*! ../player */\"./src/player.js\")).default.install(\"playNext\",function(){var e=this,t=(e.root,e.config.playNext);function n(){e.currentVideoIndex+1<t.urlList.length?(e.currentVideoIndex++,e.video.autoplay=!0,e.src=t.urlList[e.currentVideoIndex],e.emit(\"playerNext\",e.currentVideoIndex+1)):e.emit(\"urlList last\")}e.currentVideoIndex=-1,e.on(\"playNextBtnClick\",n),e.once(\"destroy\",function t(){e.off(\"playNextBtnClick\",n),e.off(\"destroy\",t)})})},\"./src/controls/replay.js\":\n/*!********************************!*\\\n  !*** ./src/controls/replay.js ***!\n  \\********************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../player */\"./src/player.js\"));r.default.install(\"replay\",function(){var e=this,t=r.default.util,n=e.root;function a(){t.removeClass(n,\"replay\"),e.replay()}e.on(\"replayBtnClick\",a),e.on(\"ended\",function(){e.config.loop||t.addClass(n,\"replay\")}),e.once(\"destroy\",function t(){e.off(\"replayBtnClick\",a),e.off(\"destroy\",t)})})},\"./src/controls/rotate.js\":\n/*!********************************!*\\\n  !*** ./src/controls/rotate.js ***!\n  \\********************************/\n/*! no static exports found */function(e,t,n){\"use strict\";(function(e){return e&&e.__esModule?e:{default:e}})(n(/*! ../player */\"./src/player.js\")).default.install(\"rotate\",function(){var e=this,t=e.config.rotate;function n(){e.rotate(t.clockwise,t.innerRotate)}t&&(e.on(\"rotateBtnClick\",n),e.once(\"destroy\",function t(){e.off(\"rotateBtnClick\",n),e.off(\"destroy\",t)}))})},\"./src/controls/screenShot.js\":\n/*!************************************!*\\\n  !*** ./src/controls/screenShot.js ***!\n  \\************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";(function(e){return e&&e.__esModule?e:{default:e}})(n(/*! ../player */\"./src/player.js\")).default.install(\"screenShot\",function(){var e=this;e.root;if(e.config.screenShot){var t=document.createElement(\"canvas\"),n=t.getContext(\"2d\"),r=new Image;t.width=this.config.width||600,t.height=this.config.height||337.5;var a=function(e,t){var n=document.createElement(\"a\");n.href=e,n.download=t;var r=document.createEvent(\"MouseEvents\");r.initMouseEvent(\"click\",!0,!1,window,0,0,0,0,0,!1,!1,!1,!1,0,null),n.dispatchEvent(r)};e.on(\"screenShotBtnClick\",i),e.once(\"destroy\",function t(){e.off(\"screenShotBtnClick\",i),e.off(\"destroy\",t)})}function i(){r.onload=function(){n.drawImage(e.video,0,0,t.width,t.height),r.setAttribute(\"crossOrigin\",\"anonymous\"),r.src=t.toDataURL(\"image/png\").replace(\"image/png\",\"image/octet-stream\");var i=r.src.replace(/^data:image\\/[^;]+/,\"data:application/octet-stream\");a(i,\"截图.png\")}()}})},\"./src/controls/start.js\":\n/*!*******************************!*\\\n  !*** ./src/controls/start.js ***!\n  \\*******************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../player */\"./src/player.js\"));r.default.install(\"start\",function(){var e=this,t=e.root,n=r.default.util;function a(){n.removeClass(t,\"xgplayer-is-enter\")}function i(){n.removeClass(t,\"xgplayer-is-enter\")}function o(){n.hasClass(t,\"xgplayer-nostart\")?(n.removeClass(t,\"xgplayer-nostart\"),n.addClass(t,\"xgplayer-is-enter\"),e.on(\"canplay\",a),e.once(\"playing\",i),t.querySelector(\"video\")||e.start(),e.play()):e.paused&&(n.removeClass(t,\"xgplayer-nostart xgplayer-isloading\"),setTimeout(function(){e.play()},10))}e.on(\"startBtnClick\",o),e.once(\"destroy\",function t(){e.off(\"canplay\",a),e.off(\"playing\",i),e.off(\"startBtnClick\",o),e.off(\"destroy\",t)})})},\"./src/controls/volume.js\":\n/*!********************************!*\\\n  !*** ./src/controls/volume.js ***!\n  \\********************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../player */\"./src/player.js\"));r.default.install(\"volume\",function(){var e=this,t=e.root,n=r.default.util,a=void 0,i=void 0,o=void 0,s=void 0;function l(){e.volume=\"mobile\"===r.default.sniffer.device?1:e.config.volume,a=e.controls.querySelector(\".xgplayer-volume\"),i=a.querySelector(\".xgplayer-slider\"),o=a.querySelector(\".xgplayer-bar\"),s=a.querySelector(\".xgplayer-drag\"),a.querySelector(\".xgplayer-icon\")}function c(t){e.video.muted=!1,i.focus(),n.event(t);var r=o.getBoundingClientRect(),a=(t.clientX,t.clientY),l=s.getBoundingClientRect().height,c=!1,u=function(t){t.preventDefault(),t.stopPropagation(),n.event(t),c=!0;var i=l-t.clientY+a,o=i/r.height;s.style.height=i+\"px\",e.volume=Math.max(Math.min(o,1),0)},d=function t(a){if(a.preventDefault(),a.stopPropagation(),n.event(a),window.removeEventListener(\"mousemove\",u),window.removeEventListener(\"touchmove\",u),window.removeEventListener(\"mouseup\",t),window.removeEventListener(\"touchend\",t),!c){var o=r.height-(a.clientY-r.top),l=o/r.height;s.style.height=o+\"px\",l<=0&&(e.volume>0?s.volume=e.video.volume:l=s.volume),e.volume=Math.max(Math.min(l,1),0)}i.volume=e.volume,c=!1};return window.addEventListener(\"mousemove\",u),window.addEventListener(\"touchmove\",u),window.addEventListener(\"mouseup\",d),window.addEventListener(\"touchend\",d),!1}function u(){\"mobile\"===r.default.sniffer.device?e.video.muted?e.video.muted=!1:e.video.muted=!0:(e.video.muted=!1,e.volume<.1?e.volume=i.volume:e.volume=0)}function d(){n.addClass(t,\"xgplayer-volume-active\"),a&&a.focus()}function p(){n.removeClass(t,\"xgplayer-volume-active\")}e.once(\"canplay\",l),e.on(\"volumeBarClick\",c),e.on(\"volumeIconClick\",u),e.on(\"volumeIconEnter\",d),e.on(\"volumeIconLeave\",p);var f=null;function g(){f&&clearTimeout(f),f=setTimeout(function(){if(\"mobile\"===r.default.sniffer.device)n.removeClass(t,\"xgplayer-volume-muted\"),n.removeClass(t,\"xgplayer-volume-large\"),e.video.muted?n.addClass(t,\"xgplayer-volume-muted\"):n.addClass(t,\"xgplayer-volume-large\");else{n.removeClass(t,\"xgplayer-volume-muted\"),n.removeClass(t,\"xgplayer-volume-small\"),n.removeClass(t,\"xgplayer-volume-large\"),0===e.volume?n.addClass(t,\"xgplayer-volume-muted\"):e.volume<.5?n.addClass(t,\"xgplayer-volume-small\"):n.addClass(t,\"xgplayer-volume-large\");var a=o.getBoundingClientRect().height||76;s.style.height=e.volume*a+\"px\"}},50)}e.on(\"volumechange\",g),e.once(\"destroy\",function t(){e.off(\"canplay\",l),e.off(\"volumeBarClick\",c),e.off(\"volumeIconClick\",u),e.off(\"volumeIconEnter\",d),e.off(\"volumeIconLeave\",p),e.off(\"volumechange\",g),e.off(\"destroy\",t)})})},\"./src/error.js\":\n/*!**********************!*\\\n  !*** ./src/error.js ***!\n  \\**********************/\n/*! no static exports found */function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(/*! ../package.json */\"./package.json\");var a={network:{code:1,msg:\"视频下载错误\",remark:\"只要视频下载错误就使用此类型，无论是video本身的超时还是xhr的分段请求超时或者资源不存在\"},mse:{code:2,msg:\"流追加错误\",remark:\"追加流的时候如果类型不对、无法被正确解码则会触发此类错误\"},parse:{code:3,msg:\"解析错误\",remark:\"mp4、hls、flv我们都是使用js进行格式解析，如果解析失败则会触发此类错误\"},format:{code:4,msg:\"格式错误\",remark:\"如果浏览器不支持的格式导致播放错误\"},decoder:{code:5,msg:\"解码错误\",remark:\"浏览器解码异常会抛出此类型错误\"},runtime:{code:6,msg:\"语法错误\",remark:\"播放器语法错误\"},timeout:{code:7,msg:\"播放超时\",remark:\"播放过程中无法正常请求下一个分段导致播放中断\"},other:{code:8,msg:\"其他错误\",remark:\"不可知的错误或被忽略的错误类型\"}};t.default=function e(t,n,i,o,s,l,c,u){var d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:{line:\"\",handle:\"\",msg:\"\",version:\"\"};!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e);var p={};return p.playerVersion=r.version,p.errorType=t,p.domain=document.domain,p.duration=i,p.currentTime=n,p.networkState=o,p.readyState=s,p.currentSrc=c,p.src=l,p.ended=u,p.errd=d,p.ex=(a[t]||{}).msg,p},e.exports=t.default},\"./src/index.js\":\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/*! no static exports found */function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=E(n(/*! ./player */\"./src/player.js\")),a=E(n(/*! ./controls/volume.js */\"./src/controls/volume.js\")),i=E(n(/*! ./controls/start.js */\"./src/controls/start.js\")),o=E(n(/*! ./controls/screenShot.js */\"./src/controls/screenShot.js\")),s=E(n(/*! ./controls/rotate.js */\"./src/controls/rotate.js\")),l=E(n(/*! ./controls/replay.js */\"./src/controls/replay.js\")),c=E(n(/*! ./controls/playNext.js */\"./src/controls/playNext.js\")),u=E(n(/*! ./controls/play.js */\"./src/controls/play.js\")),d=E(n(/*! ./controls/pip.js */\"./src/controls/pip.js\")),p=E(n(/*! ./controls/pc.js */\"./src/controls/pc.js\")),f=E(n(/*! ./controls/mobile.js */\"./src/controls/mobile.js\")),g=E(n(/*! ./controls/memoryPlay.js */\"./src/controls/memoryPlay.js\")),y=E(n(/*! ./controls/logger.js */\"./src/controls/logger.js\")),h=E(n(/*! ./controls/localPreview.js */\"./src/controls/localPreview.js\")),x=E(n(/*! ./controls/i18n.js */\"./src/controls/i18n.js\")),m=E(n(/*! ./controls/fullscreen.js */\"./src/controls/fullscreen.js\")),v=E(n(/*! ./controls/download.js */\"./src/controls/download.js\")),b=E(n(/*! ./controls/definition.js */\"./src/controls/definition.js\")),k=E(n(/*! ./controls/danmu.js */\"./src/controls/danmu.js\")),w=E(n(/*! ./controls/cssFullscreen.js */\"./src/controls/cssFullscreen.js\")),_=E(n(/*! ./controls/collect.js */\"./src/controls/collect.js\"));E(n(/*! ./skin */\"./src/skin/index.js\"));function E(e){return e&&e.__esModule?e:{default:e}}var C={};function S(e,t,n){var r=e;t.map(function(e,a){r[e]=a==t.length-1?n:r[e]||{},r=r[e]})}S(C,[\"controls\",\"collect\"],_.default),S(C,[\"controls\",\"cssFullscreen\"],w.default),S(C,[\"controls\",\"danmu\"],k.default),S(C,[\"controls\",\"definition\"],b.default),S(C,[\"controls\",\"download\"],v.default),S(C,[\"controls\",\"fullscreen\"],m.default),S(C,[\"controls\",\"i18n\"],x.default),S(C,[\"controls\",\"localPreview\"],h.default),S(C,[\"controls\",\"logger\"],y.default),S(C,[\"controls\",\"memoryPlay\"],g.default),S(C,[\"controls\",\"mobile\"],f.default),S(C,[\"controls\",\"pc\"],p.default),S(C,[\"controls\",\"pip\"],d.default),S(C,[\"controls\",\"play\"],u.default),S(C,[\"controls\",\"playNext\"],c.default),S(C,[\"controls\",\"replay\"],l.default),S(C,[\"controls\",\"rotate\"],s.default),S(C,[\"controls\",\"screenShot\"],o.default),S(C,[\"controls\",\"start\"],i.default),S(C,[\"controls\",\"volume\"],a.default),t.default=r.default,e.exports=t.default},\"./src/player.js\":\n/*!***********************!*\\\n  !*** ./src/player.js ***!\n  \\***********************/\n/*! no static exports found */function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=f(n(/*! ./proxy */\"./src/proxy.js\")),i=f(n(/*! ./utils/util */\"./src/utils/util.js\")),o=f(n(/*! ./utils/database */\"./src/utils/database.js\")),s=f(n(/*! ./utils/sniffer */\"./src/utils/sniffer.js\")),l=f(n(/*! ./error */\"./src/error.js\")),c=f(n(/*! draggabilly */\"./node_modules/draggabilly/draggabilly.js\")),u=n(/*! ./utils/url */\"./src/utils/url.js\"),d=f(n(/*! downloadjs */\"./node_modules/downloadjs/download.js\")),p=n(/*! ../package.json */\"./package.json\");function f(e){return e&&e.__esModule?e:{default:e}}function g(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}var y=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t);var n=g(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));if(n.config=i.default.deepCopy({width:600,height:337.5,ignores:[],whitelist:[],lang:(document.documentElement.getAttribute(\"lang\")||navigator.language||\"zh-cn\").toLocaleLowerCase(),inactive:3e3,volume:.6,controls:!0,controlsList:[\"nodownload\"]},e),n.version=p.version,n.userTimer=null,n.waitTimer=null,n.database=new o.default,n.history=[],n.isProgressMoving=!1,n.root=i.default.findDom(document,\"#\"+n.config.id),n.controls=i.default.createDom(\"xg-controls\",\"\",{unselectable:\"on\",onselectstart:\"return false\"},\"xgplayer-controls\"),!n.root){var r=n.config.el;if(!r||1!==r.nodeType)return n.emit(\"error\",new l.default(\"use\",n.config.vid,{line:32,handle:\"Constructor\",msg:\"container id can't be empty\"})),!1,g(n,!1);n.root=r}if(i.default.addClass(n.root,\"xgplayer xgplayer-\"+s.default.device+\" xgplayer-nostart \"+(n.config.controls?\"\":\"no-controls\")),n.root.appendChild(n.controls),n.config.fluid?(n.root.style[\"max-width\"]=\"100%\",n.root.style.width=\"100%\",n.root.style.height=\"0\",n.root.style[\"padding-top\"]=100*n.config.height/n.config.width+\"%\",n.video.style.position=\"absolute\",n.video.style.top=\"0\",n.video.style.left=\"0\"):(n.config.width&&(\"number\"!=typeof n.config.width?n.root.style.width=n.config.width:n.root.style.width=n.config.width+\"px\"),n.config.height&&(\"number\"!=typeof n.config.height?n.root.style.height=n.config.height:n.root.style.height=n.config.height+\"px\")),n.config.execBeforePluginsCall&&n.config.execBeforePluginsCall.forEach(function(e){e.call(n,n)}),n.config.controlStyle&&\"String\"===i.default.typeOf(n.config.controlStyle)){var a=n;fetch(a.config.controlStyle,{method:\"GET\",headers:{Accept:\"application/json\"}}).then(function(e){e.ok&&e.json().then(function(e){for(var t in e)e.hasOwnProperty(t)&&(a.config[t]=e[t]);a.pluginsCall()})}).catch(function(e){console.log(\"Fetch错误:\"+e)})}else n.pluginsCall();n.ev.forEach(function(e){var t=Object.keys(e)[0],r=n[e[t]];r&&n.on(t,r)}),[\"focus\",\"blur\"].forEach(function(e){n.on(e,n[\"on\"+e.charAt(0).toUpperCase()+e.slice(1)])});var c=n;return n.mousemoveFunc=function(){c.emit(\"focus\"),c.config.closeFocusVideoFocus||c.video.focus()},n.root.addEventListener(\"mousemove\",n.mousemoveFunc),n.playFunc=function(){c.emit(\"focus\"),c.config.closePlayVideoFocus||c.video.focus()},c.once(\"play\",n.playFunc),n.getVideoSize=function(){if(this.video.videoWidth&&this.video.videoHeight){var e=c.root.getBoundingClientRect();\"auto\"===c.config.fitVideoSize?e.width/e.height>this.video.videoWidth/this.video.videoHeight?c.root.style.height=this.video.videoHeight/this.video.videoWidth*e.width+\"px\":c.root.style.width=this.video.videoWidth/this.video.videoHeight*e.height+\"px\":\"fixWidth\"===c.config.fitVideoSize?c.root.style.height=this.video.videoHeight/this.video.videoWidth*e.width+\"px\":\"fixHeight\"===c.config.fitVideoSize&&(c.root.style.width=this.video.videoWidth/this.video.videoHeight*e.height+\"px\")}},c.once(\"loadeddata\",n.getVideoSize),setTimeout(function(){n.emit(\"ready\")},0),n.config.keyShortcut&&\"on\"!==n.config.keyShortcut||[\"video\",\"controls\"].forEach(function(e){c[e].addEventListener(\"keydown\",function(e){c.onKeydown(e,c)})}),n.config.videoInit&&i.default.hasClass(n.root,\"xgplayer-nostart\")&&n.start(),c.config.rotate&&(c.on(\"requestFullscreen\",n.updateRotateDeg),c.on(\"exitFullscreen\",n.updateRotateDeg)),c.once(\"destroy\",function e(){c.root.removeEventListener(\"mousemove\",c.mousemoveFunc),c.off(\"destroy\",e)}),n}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.default),r(t,[{key:\"start\",value:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.config.url,r=this.root,a=this;n&&\"\"!==n||this.emit(\"urlNull\"),this.logParams.playSrc=n,this.canPlayFunc=function(){var e=a.video.play();void 0!==e&&e&&e.then(function(){a.emit(\"autoplay started\")}).catch(function(){a.emit(\"autoplay was prevented\"),t.util.addClass(a.root,\"xgplayer-is-autoplay\")}),a.off(\"canplay\",a.canPlayFunc)},\"String\"===i.default.typeOf(n)?this.video.src=n:n.forEach(function(t){e.video.appendChild(i.default.createDom(\"source\",\"\",{src:\"\"+t.src,type:\"\"+(t.type||\"\")}))}),this.logParams.pt=(new Date).getTime(),this.logParams.vt=this.logParams.pt,this.loadeddataFunc=function(){a.logParams.vt=(new Date).getTime(),a.logParams.pt>a.logParams.vt&&(a.logParams.pt=a.logParams.vt),a.logParams.vd=a.video.duration},this.once(\"loadeddata\",this.loadeddataFunc),this.config.autoplay&&this.on(\"canplay\",this.canPlayFunc),r.insertBefore(this.video,r.firstChild),setTimeout(function(){e.emit(\"complete\")},1)}},{key:\"reload\",value:function(){this.video.load(),this.reloadFunc=function(){this.play()},this.once(\"loadeddata\",this.reloadFunc)}},{key:\"destroy\",value:function(){var e=this,n=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],r=this;this.root.parentNode;for(var a in clearInterval(this.bulletResizeTimer),this._interval)clearInterval(this._interval[a]),this._interval[a]=null;function i(){if(this.emit(\"destroy\"),this.video.removeAttribute(\"src\"),this.video.load(),n){this.root.innerHTML=\"\";var e=this.root.className.split(\" \");e.length>0?this.root.className=e.filter(function(e){return e.indexOf(\"xgplayer\")<0}).join(\" \"):this.root.className=\"\"}for(var t in this)delete this[t];this.off(\"pause\",i)}this.ev.forEach(function(t){var n=Object.keys(t)[0],r=e[t[n]];r&&e.off(n,r)}),this.loadeddataFunc&&this.off(\"loadeddata\",this.loadeddataFunc),this.reloadFunc&&this.off(\"loadeddata\",this.reloadFunc),this.replayFunc&&this.off(\"play\",this.replayFunc),this.playFunc&&this.off(\"play\",this.playFunc),this.getVideoSize&&this.off(\"loadeddata\",this.getVideoSize),[\"focus\",\"blur\"].forEach(function(t){e.off(t,e[\"on\"+t.charAt(0).toUpperCase()+t.slice(1)])}),this.config.keyShortcut&&\"on\"!==this.config.keyShortcut||[\"video\",\"controls\"].forEach(function(t){e[t]&&e[t].removeEventListener(\"keydown\",function(e){r.onKeydown(e,r)})}),this.paused?i.call(this):(this.pause(),this.once(\"pause\",i)),function e(t,n,r){null===t&&(t=Function.prototype);var a=Object.getOwnPropertyDescriptor(t,n);if(void 0===a){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,n,r)}if(\"value\"in a)return a.value;var o=a.get;return void 0!==o?o.call(r):void 0}(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),\"destroy\",this).call(this)}},{key:\"replay\",value:function(){var e=this,t=this._replay;i.default.removeClass(this.root,\"xgplayer-ended\"),this.logParams={bc:0,bu_acu_t:0,played:[],pt:(new Date).getTime(),vt:(new Date).getTime(),vd:0},this.logParams.pt=(new Date).getTime(),this.logParams.vt=this.logParams.pt,this.replayFunc=function(){e.logParams.vt=(new Date).getTime(),e.logParams.pt>e.logParams.vt&&(e.logParams.pt=e.logParams.vt),e.logParams.vd=e.video.duration},this.once(\"play\",this.replayFunc),this.logParams.playSrc=this.video.currentSrc,t&&t instanceof Function?t():(this.currentTime=0,this.play())}},{key:\"getFullscreen\",value:function(e){e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT):this.video.webkitSupportsFullscreen?this.video.webkitEnterFullscreen():e.msRequestFullscreen?e.msRequestFullscreen():i.default.addClass(e,\"xgplayer-is-cssfullscreen\")}},{key:\"exitFullscreen\",value:function(e){document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.msExitFullscreen&&document.msExitFullscreen(),i.default.removeClass(e,\"xgplayer-is-cssfullscreen\")}},{key:\"getCssFullscreen\",value:function(){i.default.addClass(this.root,\"xgplayer-is-cssfullscreen\"),this.emit(\"requestCssFullscreen\")}},{key:\"exitCssFullscreen\",value:function(){i.default.removeClass(this.root,\"xgplayer-is-cssfullscreen\"),this.emit(\"exitCssFullscreen\")}},{key:\"download\",value:function(){var e=(0,u.getAbsoluteURL)(this.config.url);(0,d.default)(e)}},{key:\"pluginsCall\",value:function(){var e=this,n=this;if(t.plugins){var r=this.config.ignores;Object.keys(t.plugins).forEach(function(a){var i=t.plugins[a];r.some(function(e){return a===e||a===\"s_\"+e})||([\"pc\",\"tablet\",\"mobile\"].some(function(e){return e===a})?a===s.default.device&&setTimeout(function(){i.call(n,n)},0):i.call(e,e))})}}},{key:\"getPIP\",value:function(){var e=i.default.createDom(\"xg-pip-lay\",\"<div></div>\",{},\"xgplayer-pip-lay\");this.root.appendChild(e);var t=i.default.createDom(\"xg-pip-drag\",'<div class=\"drag-handle\"><span>点击按住可拖动视频</span></div>',{tabindex:9},\"xgplayer-pip-drag\");this.root.appendChild(t);new c.default(\".xgplayer\",{handle:\".drag-handle\"});i.default.addClass(this.root,\"xgplayer-pip-active\"),this.root.style.right=0,this.root.style.bottom=\"200px\",this.root.style.top=\"\",this.root.style.left=\"\",this.root.style.width=\"320px\",this.root.style.height=\"180px\",this.config.pipConfig&&(void 0!==this.config.pipConfig.top&&(this.root.style.top=this.config.pipConfig.top+\"px\",this.root.style.bottom=\"\"),void 0!==this.config.pipConfig.bottom&&(this.root.style.bottom=this.config.pipConfig.bottom+\"px\"),void 0!==this.config.pipConfig.left&&(this.root.style.left=this.config.pipConfig.left+\"px\",this.root.style.right=\"\"),void 0!==this.config.pipConfig.right&&(this.root.style.right=this.config.pipConfig.right+\"px\"),void 0!==this.config.pipConfig.width&&(this.root.style.width=this.config.pipConfig.width+\"px\"),void 0!==this.config.pipConfig.height&&(this.root.style.height=this.config.pipConfig.height+\"px\")),this.config.fluid&&(this.root.style[\"padding-top\"]=\"\");var n=this;[\"click\",\"touchend\"].forEach(function(t){e.addEventListener(t,function(e){e.preventDefault(),e.stopPropagation(),n.exitPIP()})})}},{key:\"exitPIP\",value:function(){i.default.removeClass(this.root,\"xgplayer-pip-active\"),this.root.style.right=\"\",this.root.style.bottom=\"\",this.root.style.top=\"\",this.root.style.left=\"\",this.config.fluid?(this.root.style.width=\"100%\",this.root.style.height=\"0\",this.root.style[\"padding-top\"]=100*this.config.height/this.config.width+\"%\"):(this.config.width&&(\"number\"!=typeof this.config.width?this.root.style.width=this.config.width:this.root.style.width=this.config.width+\"px\"),this.config.height&&(\"number\"!=typeof this.config.height?this.root.style.height=this.config.height:this.root.style.height=this.config.height+\"px\"));var e=i.default.findDom(this.root,\".xgplayer-pip-lay\");e&&e.parentNode&&e.parentNode.removeChild(e);var t=i.default.findDom(this.root,\".xgplayer-pip-drag\");t&&t.parentNode&&t.parentNode.removeChild(t)}},{key:\"updateRotateDeg\",value:function(){this.rotateDeg||(this.rotateDeg=0);var e=this.root.offsetWidth,t=this.root.offsetHeight,n=this.video.videoWidth,r=this.video.videoHeight;this.config.rotate.innerRotate;var a=void 0;if(.25===this.rotateDeg||.75===this.rotateDeg){if(this.config.rotate.innerRotate)if(n/r>t/e){a=t/(r/n>t/e?t*n/r:e)}else{a=e/(r/n>t/e?t:e*r/n)}else a=e>=t?e/t:t/e;a=parseFloat(a.toFixed(5))}else a=1;this.config.rotate.innerRotate?(this.video.style.transformOrigin=\"center center\",this.video.style.transform=\"rotate(\"+this.rotateDeg+\"turn) scale(\"+a+\")\",this.video.style.webKitTransform=\"rotate(\"+this.rotateDeg+\"turn) scale(\"+a+\")\"):(this.root.style.transformOrigin=\"center center\",this.root.style.transform=\"rotate(\"+this.rotateDeg+\"turn) scale(1)\",this.root.style.webKitTransform=\"rotate(\"+this.rotateDeg+\"turn) scale(1)\")}},{key:\"rotate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=(!(arguments.length>1&&void 0!==arguments[1])||arguments[1],arguments.length>2&&void 0!==arguments[2]?arguments[2]:1);this.rotateDeg||(this.rotateDeg=0);var n=e?1:-1;this.rotateDeg=(this.rotateDeg+1+.25*n*t)%1,this.updateRotateDeg(),this.emit(\"rotate\",360*this.rotateDeg)}},{key:\"onFocus\",value:function(){var e=this;i.default.removeClass(this.root,\"xgplayer-inactive\"),e.userTimer&&clearTimeout(e.userTimer),e.userTimer=setTimeout(function(){e.emit(\"blur\")},e.config.inactive)}},{key:\"onBlur\",value:function(){this.paused||this.ended||i.default.addClass(this.root,\"xgplayer-inactive\")}},{key:\"onPlay\",value:function(){i.default.addClass(this.root,\"xgplayer-playing\"),i.default.removeClass(this.root,\"xgplayer-pause\")}},{key:\"onPause\",value:function(){i.default.addClass(this.root,\"xgplayer-pause\"),this.userTimer&&clearTimeout(this.userTimer),this.emit(\"focus\")}},{key:\"onEnded\",value:function(){i.default.addClass(this.root,\"xgplayer-ended\"),i.default.removeClass(this.root,\"xgplayer-playing\")}},{key:\"onSeeking\",value:function(){}},{key:\"onSeeked\",value:function(){this.waitTimer&&clearTimeout(this.waitTimer),i.default.removeClass(this.root,\"xgplayer-isloading\")}},{key:\"onWaiting\",value:function(){var e=this;e.waitTimer&&clearTimeout(e.waitTimer),e.waitTimer=setTimeout(function(){i.default.addClass(e.root,\"xgplayer-isloading\")},500)}},{key:\"onPlaying\",value:function(){this.waitTimer&&clearTimeout(this.waitTimer),i.default.removeClass(this.root,\"xgplayer-isloading xgplayer-nostart xgplayer-pause xgplayer-ended xgplayer-is-error xgplayer-replay\"),i.default.addClass(this.root,\"xgplayer-playing\")}},{key:\"onKeydown\",value:function(e,t){var n=e||window.event;if(!n||37!==n.keyCode&&38!==n.keyCode&&39!==n.keyCode&&40!==n.keyCode&&32!==n.keyCode||t.emit(\"focus\"),!n||40!==n.keyCode&&38!==n.keyCode)n&&39===n.keyCode?t.currentTime+10<=t.duration?t.currentTime+=10:t.currentTime=t.duration-1:n&&37===n.keyCode?t.currentTime-10>=0?t.currentTime-=10:t.currentTime=0:n&&32===n.keyCode&&(t.paused?t.play():t.pause());else{if(t.controls){var r=t.controls.querySelector(\".xgplayer-slider\");r&&(i.default.hasClass(r,\"xgplayer-none\")&&i.default.removeClass(r,\"xgplayer-none\"),t.sliderTimer&&clearTimeout(t.sliderTimer),t.sliderTimer=setTimeout(function(){i.default.addClass(r,\"xgplayer-none\")},t.config.inactive))}n&&40===n.keyCode?t.volume-.1>=0?t.volume=parseFloat((t.volume-.1).toFixed(1)):t.volume=0:n&&38===n.keyCode&&(t.volume+.1<=1?t.volume=parseFloat((t.volume+.1).toFixed(1)):t.volume=1)}}}],[{key:\"install\",value:function(e,n){t.plugins||(t.plugins={}),t.plugins[e]||(t.plugins[e]=n)}},{key:\"use\",value:function(e,n){t.plugins||(t.plugins={}),t.plugins[e]=n}}]),t}();y.util=i.default,y.sniffer=s.default,y.Errors=l.default,t.default=y,e.exports=t.default},\"./src/proxy.js\":\n/*!**********************!*\\\n  !*** ./src/proxy.js ***!\n  \\**********************/\n/*! no static exports found */function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=s(n(/*! event-emitter */\"./node_modules/event-emitter/index.js\")),i=s(n(/*! ./utils/util */\"./src/utils/util.js\")),o=s(n(/*! ./error */\"./src/error.js\"));function s(e){return e&&e.__esModule?e:{default:e}}var l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.logParams={bc:0,bu_acu_t:0,played:[]},this._hasStart=!1,this.videoConfig={controls:!1,autoplay:t.autoplay,playsinline:t.playsinline,\"webkit-playsinline\":t.playsinline,\"x5-playsinline\":t.playsinline,\"x5-video-player-type\":t[\"x5-video-player-type\"],\"x5-video-player-fullscreen\":t[\"x5-video-player-fullscreen\"],\"x5-video-orientation\":t[\"x5-video-orientation\"],airplay:t.airplay,\"webkit-airplay\":t.airplay,tabindex:2,mediaType:t.mediaType||\"video\"},t.loop&&(this.videoConfig.loop=\"loop\");var n=\"\";if(t.textTrack&&Array.isArray(t.textTrack)&&(navigator.userAgent.indexOf(\"Chrome\")>-1||navigator.userAgent.indexOf(\"Firefox\")>-1)&&(t.textTrack.some(function(e){if(e.src&&e.label&&e.default)return n+='<track src=\"'+e.src+'\" ',e.kind&&(n+='kind=\"'+e.kind+'\" '),n+='label=\"'+e.label+'\" ',e.srclang&&(n+='srclang=\"'+e.srclang+'\" '),n+=(e.default?\"default\":\"\")+\">\",!0}),this.videoConfig.crossorigin=\"anonymous\"),t.textTrackStyle){var r=document.createElement(\"style\");this.textTrackStyle=r,document.head.appendChild(r);var s=\"\";for(var l in t.textTrackStyle)s+=l+\": \"+t.textTrackStyle[l]+\";\";var c=t.id?\"#\"+t.id:t.el.id?\"#\"+t.el.id:\".\"+t.el.className;r.sheet.insertRule?r.sheet.insertRule(c+\" video::cue { \"+s+\" }\",0):r.sheet.addRule&&r.sheet.addRule(c+\" video::cue\",s)}this.video=i.default.createDom(this.videoConfig.mediaType,n,this.videoConfig,\"\"),t.autoplay&&(this.video.autoplay=!0,t.autoplayMuted&&(this.video.muted=!0)),this.ev=[\"play\",\"playing\",\"pause\",\"ended\",\"error\",\"seeking\",\"seeked\",\"timeupdate\",\"waiting\",\"canplay\",\"canplaythrough\",\"durationchange\",\"volumechange\",\"loadeddata\"].map(function(e){return function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}({},e,\"on\"+e.charAt(0).toUpperCase()+e.slice(1))}),(0,a.default)(this),this._interval={};var u=\"0,0\",d=this;this.ev.forEach(function(e){d.evItem=Object.keys(e)[0];var t=Object.keys(e)[0];d.video.addEventListener(Object.keys(e)[0],function(){d.logParams&&(\"play\"===t?d.hasStart=!0:\"waiting\"===t?(d.logParams.bc++,d.inWaitingStart=(new Date).getTime()):\"playing\"===t?d.inWaitingStart&&(d.logParams.bu_acu_t+=(new Date).getTime()-d.inWaitingStart,d.inWaitingStart=void 0):\"loadeddata\"===t?d.logParams.played.push({begin:0,end:-1}):\"seeking\"===t?d.logParams.played.push({begin:d.video.currentTime,end:-1}):d&&d.logParams&&d.logParams.played&&\"timeupdate\"===t&&(d.logParams.played.length<1&&d.logParams.played.push({begin:d.video.currentTime,end:-1}),d.logParams.played[d.logParams.played.length-1].end=d.video.currentTime),\"error\"===t?d.video.error&&d.emit(t,new o.default(\"other\",d.currentTime,d.duration,d.networkState,d.readyState,d.currentSrc,d.src,d.ended,{line:41,msg:d.error,handle:\"Constructor\"})):d.emit(t,d),d.hasOwnProperty(\"_interval\")&&([\"ended\",\"error\",\"timeupdate\"].indexOf(t)<0?(clearInterval(d._interval.bufferedChange),i.default.setInterval(d,\"bufferedChange\",function(){for(var e=[],t=0,n=d.video.buffered.length;t<n;t++)e.push([d.video.buffered.start(t),d.video.buffered.end(t)]);e.toString()!==u&&(u=e.toString(),d.emit(\"bufferedChange\",e))},200)):\"timeupdate\"!==t&&i.default.clearInterval(d,\"bufferedChange\")))},!1)})}return r(e,[{key:\"destroy\",value:function(){this.textTrackStyle&&this.textTrackStyle.parentNode.removeChild(this.textTrackStyle)}},{key:\"play\",value:function(){this.video.play()}},{key:\"pause\",value:function(){this.video.pause()}},{key:\"canPlayType\",value:function(){this.video.canPlayType()}},{key:\"getBufferedRange\",value:function(){var e=[0,0],t=this.video,n=t.buffered,r=t.currentTime;if(n)for(var a=0,i=n.length;a<i&&(e[0]=n.start(a),e[1]=n.end(a),!(e[0]<=r&&r<=e[1]));a++);return e[0]-r<=0&&r-e[1]<=0?e:[0,0]}},{key:\"hasStart\",get:function(){return this._hasStart},set:function(e){\"boolean\"!=typeof e||!0!==e||this._hasStart||(this._hasStart=!0,this.emit(\"hasstart\"))}},{key:\"autoplay\",set:function(e){this.video.autoplay=e},get:function(){return this.video.autoplay}},{key:\"buffered\",get:function(){return this.video.buffered}},{key:\"crossOrigin\",get:function(){return this.video.crossOrigin},set:function(e){this.video.crossOrigin=e}},{key:\"currentSrc\",get:function(){return this.video.currentSrc},set:function(e){this.video.currentSrc=e}},{key:\"currentTime\",get:function(){return this.video.currentTime},set:function(e){this.video.currentTime=e}},{key:\"defaultMuted\",get:function(){return this.video.defaultMuted},set:function(e){this.video.defaultMuted=e}},{key:\"duration\",get:function(){return this.video.duration}},{key:\"ended\",get:function(){return this.video.ended}},{key:\"error\",get:function(){var e=this.video.error;if(!e)return null;var t=[{en:\"MEDIA_ERR_ABORTED\",cn:\"取回过程被用户中止\"},{en:\"MEDIA_ERR_NETWORK\",cn:\"当下载时发生错误\"},{en:\"MEDIA_ERR_DECODE\",cn:\"当解码时发生错误\"},{en:\"MEDIA_ERR_SRC_NOT_SUPPORTED\",cn:\"不支持音频/视频\"}];return this.lang?this.lang[t[e.code-1].en]:t[e.code-1].en}},{key:\"loop\",get:function(){return this.video.loop},set:function(e){this.video.loop=e}},{key:\"muted\",get:function(){return this.video.muted},set:function(e){this.video.muted=e}},{key:\"networkState\",get:function(){var e=[{en:\"NETWORK_EMPTY\",cn:\"音频/视频尚未初始化\"},{en:\"NETWORK_IDLE\",cn:\"音频/视频是活动的且已选取资源，但并未使用网络\"},{en:\"NETWORK_LOADING\",cn:\"浏览器正在下载数据\"},{en:\"NETWORK_NO_SOURCE\",cn:\"未找到音频/视频来源\"}];return this.lang?this.lang[e[this.video.networkState].en]:e[this.video.networkState].en}},{key:\"paused\",get:function(){return this.video.paused}},{key:\"playbackRate\",get:function(){return this.video.playbackRate},set:function(e){this.video.playbackRate=e}},{key:\"played\",get:function(){return this.video.played}},{key:\"preload\",get:function(){return this.video.preload},set:function(e){this.video.preload=e}},{key:\"readyState\",get:function(){var e=[{en:\"HAVE_NOTHING\",cn:\"没有关于音频/视频是否就绪的信息\"},{en:\"HAVE_METADATA\",cn:\"关于音频/视频就绪的元数据\"},{en:\"HAVE_CURRENT_DATA\",cn:\"关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒\"},{en:\"HAVE_FUTURE_DATA\",cn:\"当前及至少下一帧的数据是可用的\"},{en:\"HAVE_ENOUGH_DATA\",cn:\"可用数据足以开始播放\"}];return this.lang?this.lang[e[this.video.readyState].en]:e[this.video.readyState]}},{key:\"seekable\",get:function(){return this.video.seekable}},{key:\"seeking\",get:function(){return this.video.seeking}},{key:\"src\",get:function(){return this.video.src},set:function(e){var t=this;i.default.hasClass(this.root,\"xgplayer-ended\")||this.emit(\"urlchange\",JSON.parse(JSON.stringify(t.logParams))),this.logParams={bc:0,bu_acu_t:0,played:[],pt:(new Date).getTime(),vt:(new Date).getTime(),vd:0},this.video.pause(),this.video.src=e,this.logParams.playSrc=e,this.logParams.pt=(new Date).getTime(),this.logParams.vt=this.logParams.pt,this.once(\"loadeddata\",function e(){t.logParams.vt=(new Date).getTime(),t.logParams.pt>t.logParams.vt&&(t.logParams.pt=t.logParams.vt),t.logParams.vd=t.video.duration,t.off(\"loadeddata\",e)})}},{key:\"volume\",get:function(){return this.video.volume},set:function(e){this.video.volume=e}},{key:\"fullscreen\",get:function(){return i.default.hasClass(this.root,\"xgplayer-is-fullscreen\")||i.default.hasClass(this.root,\"xgplayer-fullscreen-active\")}},{key:\"bullet\",get:function(){return!!i.default.findDom(this.root,\"xg-bullet\")&&i.default.hasClass(i.default.findDom(this.root,\"xg-bullet\"),\"xgplayer-has-bullet\")}},{key:\"textTrack\",get:function(){return i.default.hasClass(this.root,\"xgplayer-is-textTrack\")}},{key:\"pip\",get:function(){return i.default.hasClass(this.root,\"xgplayer-pip-active\")}}]),e}();t.default=l,e.exports=t.default},\"./src/skin/assets/download.svg\":\n/*!**************************************!*\\\n  !*** ./src/skin/assets/download.svg ***!\n  \\**************************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\">\\n  <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n    <g transform=\"translate(-488.000000, -340.000000)\" fill=\"#FFFFFF\">\\n      <g id=\"Group-2\">\\n        <g id=\"volme_big-copy\" transform=\"translate(488.000000, 340.000000)\">\\n          <rect id=\"Rectangle-18\" x=\"11\" y=\"4\" width=\"2\" height=\"12\" rx=\"1\"></rect>\\n          <rect id=\"Rectangle-2\" x=\"3\" y=\"18\" width=\"18\" height=\"2\" rx=\"1\"></rect>\\n          <rect id=\"Rectangle-2\" transform=\"translate(4.000000, 17.500000) rotate(90.000000) translate(-4.000000, -17.500000) \" x=\"1.5\" y=\"16.5\" width=\"5\" height=\"2\" rx=\"1\"></rect><rect id=\"Rectangle-2-Copy-3\" transform=\"translate(20.000000, 17.500000) rotate(90.000000) translate(-20.000000, -17.500000) \" x=\"17.5\" y=\"16.5\" width=\"5\" height=\"2\" rx=\"1\"></rect>\\n          <path d=\"M9.48791171,8.26502656 L9.48791171,14.2650266 C9.48791171,14.8173113 9.04019646,15.2650266 8.48791171,15.2650266 C7.93562696,15.2650266 7.48791171,14.8173113 7.48791171,14.2650266 L7.48791171,7.26502656 C7.48791171,6.71274181 7.93562696,6.26502656 8.48791171,6.26502656 L15.4879117,6.26502656 C16.0401965,6.26502656 16.4879117,6.71274181 16.4879117,7.26502656 C16.4879117,7.81731131 16.0401965,8.26502656 15.4879117,8.26502656 L9.48791171,8.26502656 Z\" id=\"Combined-Shape\" transform=\"translate(11.987912, 10.765027) scale(1, -1) rotate(45.000000) translate(-11.987912, -10.765027) \"></path>\\n        </g>\\n      </g>\\n    </g>\\n  </g>\\n</svg>\\n'},\"./src/skin/assets/exitCssFull.svg\":\n/*!*****************************************!*\\\n  !*** ./src/skin/assets/exitCssFull.svg ***!\n  \\*****************************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\\n  <path transform=\"scale(0.028 0.028)\" d=\"M834.56 81.92H189.44c-59.392 0-107.52 48.128-107.52 107.52v645.12c0 59.392 48.128 107.52 107.52 107.52h645.12c59.392 0 107.52-48.128 107.52-107.52V189.44c0-59.392-48.128-107.52-107.52-107.52zM458.24 727.04c0 14.848-12.288 26.624-26.624 26.624S404.48 741.888 404.48 727.04v-69.632L289.28 773.12c-10.752 10.24-27.648 10.24-37.888 0-10.24-10.752-10.24-27.648 0-37.888L366.592 619.52H296.96c-14.848 0-26.624-12.288-26.624-26.624s12.288-26.624 26.624-26.624h134.144c14.848 0 26.624 12.288 26.624 26.624V727.04z m0-295.936c0 14.848-12.288 26.624-26.624 26.624H296.96c-14.848 0-26.624-12.288-26.624-26.624S282.112 404.48 296.96 404.48h69.632L251.392 289.28c-10.24-10.752-10.24-27.648 0-37.888 5.12-5.12 12.288-7.68 18.944-7.68 6.656 0 13.824 2.56 18.944 7.68L404.48 366.592V296.96c0-14.848 12.288-26.624 26.624-26.624s26.624 12.288 26.624 26.624v134.144zM773.12 773.12c-10.752 10.24-27.648 10.24-37.888 0L619.52 657.408V727.04c0 14.848-12.288 26.624-26.624 26.624s-26.624-11.776-26.624-26.624v-134.144c0-14.848 12.288-26.624 26.624-26.624H727.04c14.848 0 26.624 12.288 26.624 26.624s-12.288 26.624-26.624 26.624h-69.632l115.2 115.2c10.752 10.752 10.752 27.648 0.512 38.4z m0-483.84L657.408 404.48H727.04c14.848 0 26.624 12.288 26.624 26.624 0 14.848-12.288 26.624-26.624 26.624h-134.144c-14.848 0-26.624-12.288-26.624-26.624V296.96c0-14.848 12.288-26.624 26.624-26.624s26.624 12.288 26.624 26.624v69.632L734.72 250.88c5.12-5.12 12.288-7.68 18.944-7.68s13.824 2.56 18.944 7.68c10.752 10.752 10.752 27.648 0.512 38.4z\"></path>\\n</svg>\\n'},\"./src/skin/assets/exitFull.svg\":\n/*!**************************************!*\\\n  !*** ./src/skin/assets/exitFull.svg ***!\n  \\**************************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\\n  <path transform=\"scale(0.0320625 0.0320625)\" d=\"M682 342h128v84h-212v-212h84v128zM598 810v-212h212v84h-128v128h-84zM342 342v-128h84v212h-212v-84h128zM214 682v-84h212v212h-84v-128h-128z\"></path>\\n</svg>\\n'},\"./src/skin/assets/loading.svg\":\n/*!*************************************!*\\\n  !*** ./src/skin/assets/loading.svg ***!\n  \\*************************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewbox=\"0 0 100 100\">\\n  <path d=\"M100,50A50,50,0,1,1,50,0\"></path>\\n</svg>\\n'},\"./src/skin/assets/panel.svg\":\n/*!***********************************!*\\\n  !*** ./src/skin/assets/panel.svg ***!\n  \\***********************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 40 40\" width=\"40\" height=\"40\">\\n  <path fill=\"#f85959\" transform=\"scale(0.8 0.8)\" d=\"M36.5,18.73a1.19,1.19,0,0,0,1-1.14V16.33a1.2,1.2,0,0,0-1-1.13l-.61-.08a1.75,1.75,0,0,1-1.3-.86l-.21-.36-.2-.36A1.72,1.72,0,0,1,34,12l.23-.58a1.18,1.18,0,0,0-.5-1.42l-1.1-.62a1.18,1.18,0,0,0-1.47.3l-.39.51a1.82,1.82,0,0,1-1.41.72c-.44,0-1.88-.27-2.22-.7l-.39-.49a1.18,1.18,0,0,0-1.48-.28l-1.09.64a1.19,1.19,0,0,0-.47,1.43l.25.59a1.87,1.87,0,0,1-.08,1.58c-.26.37-1.17,1.5-1.71,1.58l-.63.09a1.19,1.19,0,0,0-1,1.14l0,1.27a1.17,1.17,0,0,0,1,1.12l.61.08a1.74,1.74,0,0,1,1.3.87l.21.36.2.35A1.69,1.69,0,0,1,24,22.08l-.23.59a1.19,1.19,0,0,0,.5,1.42l1.1.62a1.19,1.19,0,0,0,1.48-.31l.38-.5a1.83,1.83,0,0,1,1.41-.72c.44,0,1.88.25,2.22.69l.39.49a1.18,1.18,0,0,0,1.48.28L33.86,24a1.19,1.19,0,0,0,.47-1.43L34.09,22a1.84,1.84,0,0,1,.07-1.58c.26-.37,1.17-1.5,1.72-1.58ZM31,18.94a2.76,2.76,0,0,1-4.65-1.2A2.71,2.71,0,0,1,27,15.13a2.76,2.76,0,0,1,4.64,1.2A2.7,2.7,0,0,1,31,18.94Z\"/>\\n  <path fill=\"#f85959\" transform=\"scale(0.8 0.8)\" d=\"M32,0H3.59A3.59,3.59,0,0,0,0,3.59v17A3.59,3.59,0,0,0,3.59,24.2H19.72a12.59,12.59,0,0,1-.81-1.2A11.73,11.73,0,0,1,35.54,7.28V3.59A3.59,3.59,0,0,0,32,0ZM13,14.18H4.29a1.52,1.52,0,0,1,0-3H13a1.52,1.52,0,0,1,0,3ZM16.45,8H4.29a1.51,1.51,0,0,1,0-3H16.45a1.51,1.51,0,1,1,0,3Z\"/>\\n</svg>\\n'},\"./src/skin/assets/pause.svg\":\n/*!***********************************!*\\\n  !*** ./src/skin/assets/pause.svg ***!\n  \\***********************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\\n  <path transform=\"scale(0.0320625 0.0320625)\" d=\"M598,214h170v596h-170v-596zM256 810v-596h170v596h-170z\"></path>\\n</svg>\\n'},\"./src/skin/assets/play.svg\":\n/*!**********************************!*\\\n  !*** ./src/skin/assets/play.svg ***!\n  \\**********************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\\n  <path transform=\"scale(0.0320625 0.0320625)\" d=\"M576,363L810,512L576,661zM342,214L576,363L576,661L342,810z\"></path>\\n</svg>\\n'},\"./src/skin/assets/playNext.svg\":\n/*!**************************************!*\\\n  !*** ./src/skin/assets/playNext.svg ***!\n  \\**************************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\\n  <path transform=\"scale(0.038 0.028)\" d=\"M800 380v768h-128v-352l-320 320v-704l320 320v-352z\"></path>\\n</svg>\\n'},\"./src/skin/assets/replay.svg\":\n/*!************************************!*\\\n  !*** ./src/skin/assets/replay.svg ***!\n  \\************************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg class=\"xgplayer-replay-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"78\" height=\"78\" viewbox=\"0 0 78 78\">\\n  <path d=\"M8.22708362,13.8757234 L11.2677371,12.6472196 C11.7798067,12.4403301 12.3626381,12.6877273 12.5695276,13.1997969 L12.9441342,14.1269807 C13.1510237,14.6390502 12.9036264,15.2218816 12.3915569,15.4287712 L6.8284538,17.6764107 L5.90126995,18.0510173 C5.38920044,18.2579068 4.80636901,18.0105096 4.5994795,17.49844 L1.97723335,11.0081531 C1.77034384,10.4960836 2.0177411,9.91325213 2.52981061,9.70636262 L3.45699446,9.33175602 C3.96906396,9.12486652 4.5518954,9.37226378 4.75878491,9.88433329 L5.67885163,12.1615783 C7.99551726,6.6766934 13.3983951,3 19.5,3 C27.7842712,3 34.5,9.71572875 34.5,18 C34.5,26.2842712 27.7842712,33 19.5,33 C15.4573596,33 11.6658607,31.3912946 8.87004692,28.5831991 C8.28554571,27.9961303 8.28762719,27.0463851 8.87469603,26.4618839 C9.46176488,25.8773827 10.4115101,25.8794641 10.9960113,26.466533 C13.2344327,28.7147875 16.263503,30 19.5,30 C26.127417,30 31.5,24.627417 31.5,18 C31.5,11.372583 26.127417,6 19.5,6 C14.4183772,6 9.94214483,9.18783811 8.22708362,13.8757234 Z\"></path>\\n</svg>\\n'},\"./src/skin/assets/requestCssFull.svg\":\n/*!********************************************!*\\\n  !*** ./src/skin/assets/requestCssFull.svg ***!\n  \\********************************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\\n  <path transform=\"scale(0.028 0.028)\" d=\"M843.617212 67.898413 175.411567 67.898413c-61.502749 0-111.367437 49.856501-111.367437 111.367437l0 668.205645c0 61.510936 49.864688 111.367437 111.367437 111.367437L843.617212 958.838931c61.510936 0 111.367437-49.856501 111.367437-111.367437L954.984648 179.26585C954.984648 117.754914 905.12917 67.898413 843.617212 67.898413zM398.146441 736.104057c15.380292 0 27.842115 12.461823 27.842115 27.842115 0 15.379269-12.461823 27.841092-27.842115 27.841092L259.725858 791.787264c-7.785314 0-14.781658-3.217275-19.838837-8.365528-5.383614-4.577249-8.791224-11.228739-8.791224-19.475564L231.095797 624.736621c0-15.371082 12.471033-27.842115 27.842115-27.842115 15.380292 0 27.842115 12.471033 27.842115 27.842115l-0.61603 71.426773 133.036969-133.037992 39.378869 39.378869L324.962651 736.113267 398.146441 736.104057zM419.199942 463.611943 286.162974 330.565764l0.61603 71.435982c0 15.380292-12.461823 27.842115-27.842115 27.842115-15.371082 0-27.842115-12.461823-27.842115-27.842115L231.094774 262.791172c0-8.256034 3.40761-14.908548 8.791224-19.476587 5.057179-5.148253 12.053524-8.374738 19.838837-8.374738l138.420583 0.00921c15.380292 0 27.842115 12.461823 27.842115 27.842115s-12.461823 27.842115-27.842115 27.842115l-73.175603-0.00921 133.607974 133.607974L419.199942 463.611943zM787.932981 763.946172c0 8.247848-3.40761 14.899338-8.791224 19.475564-5.057179 5.148253-12.053524 8.365528-19.839861 8.365528L620.881314 791.787264c-15.379269 0-27.841092-12.461823-27.841092-27.841092 0-15.380292 12.461823-27.842115 27.841092-27.842115l73.185836 0.00921L560.449967 602.50427l39.378869-39.378869L732.875015 696.163393l-0.62524-71.426773c0-15.371082 12.462846-27.842115 27.842115-27.842115 15.380292 0 27.842115 12.471033 27.842115 27.842115L787.934005 763.946172zM787.932981 402.000724c0 15.380292-12.461823 27.842115-27.842115 27.842115-15.379269 0-27.842115-12.461823-27.842115-27.842115l0.62524-71.435982L599.828836 463.611943l-39.378869-39.378869 133.617184-133.607974-73.185836 0.00921c-15.379269 0-27.841092-12.461823-27.841092-27.842115s12.461823-27.842115 27.841092-27.842115l138.421606-0.00921c7.785314 0 14.781658 3.226484 19.839861 8.374738 5.383614 4.568039 8.791224 11.219529 8.791224 19.476587L787.934005 402.000724z\"></path>\\n</svg>\\n'},\"./src/skin/assets/requestFull.svg\":\n/*!*****************************************!*\\\n  !*** ./src/skin/assets/requestFull.svg ***!\n  \\*****************************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\\n  <path transform=\"scale(0.0320625 0.0320625)\" d=\"M598 214h212v212h-84v-128h-128v-84zM726 726v-128h84v212h-212v-84h128zM214 426v-212h212v84h-128v128h-84zM298 598v128h128v84h-212v-212h84z\"></path>\\n</svg>\\n'},\"./src/skin/assets/rotate.svg\":\n/*!************************************!*\\\n  !*** ./src/skin/assets/rotate.svg ***!\n  \\************************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 40 40\" fill=\"none\">\\n  <g clip-path=\"url(#clip0)\">\\n    <path transform=\"scale(1.5 1.5)\" d=\"M11.6665 9.16663H4.1665C2.78579 9.16663 1.6665 10.2859 1.6665 11.6666V15.8333C1.6665 17.214 2.78579 18.3333 4.1665 18.3333H11.6665C13.0472 18.3333 14.1665 17.214 14.1665 15.8333V11.6666C14.1665 10.2859 13.0472 9.16663 11.6665 9.16663Z\" fill=\"white\"/>\\n    <path transform=\"scale(1.5 1.5)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.88148 4.06298C3.75371 4.21005 3.67667 4.40231 3.67749 4.61242C3.67847 4.87253 3.79852 5.10435 3.98581 5.25646L6.99111 8.05895C7.32771 8.37283 7.85502 8.35443 8.16891 8.01782C8.48279 7.68122 8.46437 7.15391 8.12778 6.84003L6.62061 5.43457L9.8198 5.4224C9.82848 5.42239 9.8372 5.42221 9.84591 5.4219C10.9714 5.38233 12.0885 5.6285 13.0931 6.13744C14.0976 6.64635 14.957 7.40148 15.5908 8.33234C16.2246 9.2632 16.6122 10.3394 16.7177 11.4606C16.823 12.5819 16.6427 13.7115 16.1934 14.7442C16.0098 15.1661 16.203 15.6571 16.6251 15.8408C17.0471 16.0243 17.5381 15.8311 17.7216 15.4091C18.2833 14.1183 18.5087 12.7063 18.3771 11.3047C18.2453 9.90318 17.7607 8.55792 16.9684 7.39433C16.1761 6.23073 15.1021 5.28683 13.8463 4.65065C12.5946 4.01651 11.203 3.70872 9.80072 3.75583L6.43415 3.76862L7.96326 2.12885C8.27715 1.79225 8.25872 1.26494 7.92213 0.951061C7.58553 0.63718 7.05822 0.655585 6.74433 0.99219L3.90268 4.0395C3.89545 4.04724 3.88841 4.05509 3.88154 4.06303L3.88148 4.06298Z\" fill=\"white\"/>\\n  </g>\\n  <defs>\\n    <clipPath id=\"clip0\">\\n      <rect width=\"40\" height=\"40\" fill=\"white\"/>\\n    </clipPath>\\n  </defs>\\n</svg>\\n'},\"./src/skin/assets/startPause.svg\":\n/*!****************************************!*\\\n  !*** ./src/skin/assets/startPause.svg ***!\n  \\****************************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\" viewBox=\"0 0 70 70\">\\n  <path transform=\"scale(0.04 0.04)\" d=\"M598,214h170v596h-170v-596zM256 810v-596h170v596h-170z\"></path>\\n</svg>\\n'},\"./src/skin/assets/startPlay.svg\":\n/*!***************************************!*\\\n  !*** ./src/skin/assets/startPlay.svg ***!\n  \\***************************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\" viewBox=\"0 0 70 70\">\\n  <path transform=\"scale(0.04,0.04)\" d=\"M576,363L810,512L576,661zM342,214L576,363L576,661L342,810z\"></path>\\n</svg>\\n'},\"./src/skin/assets/volumeLarge.svg\":\n/*!*****************************************!*\\\n  !*** ./src/skin/assets/volumeLarge.svg ***!\n  \\*****************************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\\n  <path transform=\"scale(0.0220625 0.0220625)\" d=\"M358.4 358.4h-204.8v307.2h204.8l256 256v-819.2l-256 256z\"></path>\\n  <path transform=\"scale(0.0220625 0.0220625)\" d=\"M940.632 837.632l-72.192-72.192c65.114-64.745 105.412-154.386 105.412-253.44s-40.299-188.695-105.396-253.424l-0.016-0.016 72.192-72.192c83.639 83.197 135.401 198.37 135.401 325.632s-51.762 242.434-135.381 325.612l-0.020 0.020zM795.648 693.248l-72.704-72.704c27.756-27.789 44.921-66.162 44.921-108.544s-17.165-80.755-44.922-108.546l0.002 0.002 72.704-72.704c46.713 46.235 75.639 110.363 75.639 181.248s-28.926 135.013-75.617 181.227l-0.021 0.021z\"></path>\\n</svg>\\n'},\"./src/skin/assets/volumeMuted.svg\":\n/*!*****************************************!*\\\n  !*** ./src/skin/assets/volumeMuted.svg ***!\n  \\*****************************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\\n  <path transform=\"scale(0.0220625 0.0220625)\" d=\"M358.4 358.4h-204.8v307.2h204.8l256 256v-819.2l-256 256z\"></path>\\n  <path transform=\"scale(0.0220625 0.0220625)\" d=\"M920.4 439.808l-108.544-109.056-72.704 72.704 109.568 108.544-109.056 108.544 72.704 72.704 108.032-109.568 108.544 109.056 72.704-72.704-109.568-108.032 109.056-108.544-72.704-72.704-108.032 109.568z\"></path>\\n</svg>\\n'},\"./src/skin/assets/volumeSmall.svg\":\n/*!*****************************************!*\\\n  !*** ./src/skin/assets/volumeSmall.svg ***!\n  \\*****************************************/\n/*! exports provided: default */function(e,t,n){\"use strict\";n.r(t),t.default='<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\\n  <path transform=\"scale(0.0220625 0.0220625)\" d=\"M358.4 358.4h-204.8v307.2h204.8l256 256v-819.2l-256 256z\"></path>\\n  <path transform=\"scale(0.0220625 0.0220625)\" d=\"M795.648 693.248l-72.704-72.704c27.756-27.789 44.921-66.162 44.921-108.544s-17.165-80.755-44.922-108.546l0.002 0.002 72.704-72.704c46.713 46.235 75.639 110.363 75.639 181.248s-28.926 135.013-75.617 181.227l-0.021 0.021zM795.648 693.248l-72.704-72.704c27.756-27.789 44.921-66.162 44.921-108.544s-17.165-80.755-44.922-108.546l0.002 0.002 72.704-72.704c46.713 46.235 75.639 110.363 75.639 181.248s-28.926 135.013-75.617 181.227l-0.021 0.021z\"></path>\\n</svg>\\n'},\"./src/skin/controls/cssFullscreen.js\":\n/*!********************************************!*\\\n  !*** ./src/skin/controls/cssFullscreen.js ***!\n  \\********************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=o(n(/*! ../../player */\"./src/player.js\")),a=o(n(/*! ../assets/requestCssFull.svg */\"./src/skin/assets/requestCssFull.svg\")),i=o(n(/*! ../assets/exitCssFull.svg */\"./src/skin/assets/exitCssFull.svg\"));function o(e){return e&&e.__esModule?e:{default:e}}r.default.install(\"s_cssFullscreen\",function(){var e=this,t=r.default.util;if(e.config.cssFullscreen){var n=t.createDom(\"xg-cssfullscreen\",'<xg-icon class=\"xgplayer-icon\">\\n                                             <div class=\"xgplayer-icon-requestfull\">'+a.default+'</div>\\n                                             <div class=\"xgplayer-icon-exitfull\">'+i.default+\"</div>\\n                                           </xg-icon>\",{},\"xgplayer-cssfullscreen\"),o={};o.requestfull=e.lang.CSSFULLSCREEN_TIPS,o.exitfull=e.lang.EXITCSSFULLSCREEN_TIPS;var s=t.createDom(\"xg-tips\",'<span class=\"xgplayer-tip-requestfull\">'+o.requestfull+'</span>\\n                                        <span class=\"xgplayer-tip-exitfull\">'+o.exitfull+\"</span>\",{},\"xgplayer-tips\");n.appendChild(s),e.once(\"ready\",function(){e.controls.appendChild(n)}),[\"click\",\"touchend\"].forEach(function(t){n.addEventListener(t,function(t){t.preventDefault(),t.stopPropagation(),e.emit(\"cssFullscreenBtnClick\")})})}})},\"./src/skin/controls/danmu.js\":\n/*!************************************!*\\\n  !*** ./src/skin/controls/danmu.js ***!\n  \\************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=o(n(/*! ../../player */\"./src/player.js\")),a=o(n(/*! danmu.js */\"./node_modules/danmu.js/dist/index.js\")),i=o(n(/*! ../assets/panel.svg */\"./src/skin/assets/panel.svg\"));function o(e){return e&&e.__esModule?e:{default:e}}r.default.install(\"s_danmu\",function(){var e=this,t=e.root,n=r.default.util;if(e.config.danmu){var o=n.createDom(\"xg-danmu\",\"\",{},\"xgplayer-danmu\");e.once(\"ready\",function(){t.appendChild(o)});var s=n.deepCopy({container:o,player:e.video,comments:[],area:{start:0,end:1}},e.config.danmu),l=void 0;e.config.danmu.panel&&(l=r.default.util.createDom(\"xg-panel\",'<xg-panel-icon class=\"xgplayer-panel-icon\">\\n                                                '+i.default+'\\n                                              </xg-panel-icon>\\n                                              <xg-panel-slider class=\"xgplayer-panel-slider\">\\n                                                <xg-hidemode class=\"xgplayer-hidemode\">\\n                                                  <p class=\"xgplayer-hidemode-font\">屏蔽类型</p>\\n                                                  <ul class=\"xgplayer-hidemode-radio\">\\n                                                    <li class=\"xgplayer-hidemode-scroll\" id=\"false\">滚动</li><li class=\"xgplayer-hidemode-top\" id=\"false\">顶部</li><li class=\"xgplayer-hidemode-bottom\" id=\"false\">底部</li><li class=\"xgplayer-hidemode-color\" id=\"false\">色彩</li>\\n                                                  </ul>\\n                                                </xg-hidemode>\\n                                                <xg-transparency class=\"xgplayer-transparency\">\\n                                                  <span>不透明度</span>\\n                                                  <input class=\"xgplayer-transparency-line xgplayer-transparency-color xgplayer-transparency-bar xgplayer-transparency-gradient\" type=\"range\" min=\"0\" max=\"100\" step=\"0.1\" value=\"50\"></input>\\n                                                </xg-transparency>\\n                                                <xg-showarea class=\"xgplayer-showarea\">\\n                                                  <div class=\"xgplayer-showarea-name\">显示区域</div>\\n                                                  <div class=\"xgplayer-showarea-control\">\\n                                                    <div class=\"xgplayer-showarea-control-up\">\\n                                                      <span class=\"xgplayer-showarea-control-up-item xgplayer-showarea-onequarters\">1/4</span>\\n                                                      <span class=\"xgplayer-showarea-control-up-item xgplayer-showarea-twoquarters selected-color\">1/2</span>\\n                                                      <span class=\"xgplayer-showarea-control-up-item xgplayer-showarea-threequarters\">3/4</span>\\n                                                      <span class=\"xgplayer-showarea-control-up-item xgplayer-showarea-full\">1</span>\\n                                                    </div>\\n                                                    <div class=\"xgplayer-showarea-control-down\">\\n                                                      <div class=\"xgplayer-showarea-control-down-dots\">\\n                                                        <span class=\"xgplayer-showarea-onequarters-dot\"></span>\\n                                                        <span class=\"xgplayer-showarea-twoquarters-dot\"></span>\\n                                                        <span class=\"xgplayer-showarea-threequarters-dot\"></span>\\n                                                        <span class=\"xgplayer-showarea-full-dot\"></span>\\n                                                      </div>\\n                                                      <input class=\"xgplayer-showarea-line xgplayer-showarea-color xgplayer-showarea-bar xgplayer-gradient\" type=\"range\" min=\"1\" max=\"4\" step=\"1\" value=\"1\">\\n                                                    </div>\\n                                                  </div>\\n                                                </xg-showarea>\\n                                                <xg-danmuspeed class=\"xgplayer-danmuspeed\">\\n                                                  <div class=\"xgplayer-danmuspeed-name\">弹幕速度</div>\\n                                                  <div class=\"xgplayer-danmuspeed-control\">\\n                                                    <div class=\"xgplayer-danmuspeed-control-up\">\\n                                                      <span class=\"xgplayer-danmuspeed-control-up-item xgplayer-danmuspeed-small\">慢</span>\\n                                                      <span class=\"xgplayer-danmuspeed-control-up-item xgplayer-danmuspeed-middle selected-color\">中</span>\\n                                                      <span class=\"xgplayer-danmuspeed-control-up-item xgplayer-danmuspeed-large\">快</span>\\n                                                    </div>\\n                                                    <div class=\"xgplayer-danmuspeed-control-down\">\\n                                                      <div class=\"xgplayer-danmuspeed-control-down-dots\">\\n                                                        <span class=\"xgplayer-danmuspeed-small-dot\"></span>\\n                                                        <span class=\"xgplayer-danmuspeed-middle-dot\"></span>\\n                                                        <span class=\"xgplayer-danmuspeed-large-dot\"></span>\\n                                                      </div>\\n                                                      <input class=\"xgplayer-danmuspeed-line xgplayer-danmuspeed-color xgplayer-danmuspeed-bar xgplayer-gradient\" type=\"range\" min=\"50\" max=\"150\" step=\"50\" value=\"100\">\\n                                                    </div>\\n                                                  </div>\\n                                                </xg-danmuspeed>\\n                                                <xg-danmufont class=\"xgplayer-danmufont\">\\n                                                  <div class=\"xgplayer-danmufont-name\">字体大小</div>\\n                                                  <div class=\"xgplayer-danmufont-control\">\\n                                                    <div class=\"xgplayer-danmufont-control-up\">\\n                                                      <span class=\"xgplayer-danmufont-control-up-item xgplayer-danmufont-small\">小</span>\\n                                                      <span class=\"xgplayer-danmufont-control-up-item xgplayer-danmufont-middle\">中</span>\\n                                                      <span class=\"xgplayer-danmufont-control-up-item xgplayer-danmufont-large selected-color\">大</span>\\n                                                    </div>\\n                                                    <div class=\"xgplayer-danmufont-control-down\">\\n                                                      <div class=\"xgplayer-danmufont-control-down-dots\">\\n                                                        <span class=\"xgplayer-danmufont-small-dot\"></span>\\n                                                        <span class=\"xgplayer-danmufont-middle-dot\"></span>\\n                                                        <span class=\"xgplayer-danmufont-large-dot\"></span>\\n                                                      </div>\\n                                                      <input class=\"xgplayer-danmufont-line xgplayer-danmufont-color xgplayer-danmufont-bar xgplayer-gradient\" type=\"range\" min=\"20\" max=\"30\" step=\"5\" value=\"25\">\\n                                                    </div>\\n                                                  </div>\\n                                                </xg-danmufont>\\n                                              </xg-panel-slider>',{tabindex:7},\"xgplayer-panel\"),e.once(\"ready\",function(){e.controls.appendChild(l)})),e.once(\"complete\",function(){var t=new a.default(s);if(e.emit(\"initDefaultDanmu\",t),e.danmu=t,e.config.danmu.panel){var n=l.querySelector(\".xgplayer-panel-slider\"),i=void 0;[\"mouseenter\",\"touchend\",\"click\"].forEach(function(e){l.addEventListener(e,function(e){e.preventDefault(),e.stopPropagation(),r.default.util.addClass(n,\"xgplayer-panel-active\"),l.focus(),i=!0})}),l.addEventListener(\"mouseleave\",function(e){e.preventDefault(),e.stopPropagation(),r.default.util.removeClass(n,\"xgplayer-panel-active\"),i=!1}),n.addEventListener(\"mouseleave\",function(e){e.preventDefault(),e.stopPropagation(),!1===i&&r.default.util.removeClass(n,\"xgplayer-panel-active\")});var o=e.config.danmu,c={scroll:l.querySelector(\".xgplayer-hidemode-scroll\"),top:l.querySelector(\".xgplayer-hidemode-top\"),bottom:l.querySelector(\".xgplayer-hidemode-bottom\"),color:l.querySelector(\".xgplayer-hidemode-color\")},u=function(t){var n=t;[\"touchend\",\"click\"].forEach(function(t){c[n].addEventListener(t,function(t){\"true\"!==c[n].getAttribute(\"id\")?(c[n].style.color=\"#f85959\",c[n].setAttribute(\"id\",\"true\"),e.danmu.hide(n)):(c[n].style.color=\"#aaa\",c[n].setAttribute(\"id\",\"false\"),e.danmu.show(n))})})};for(var d in c)u(d);var p=l.querySelector(\".xgplayer-transparency-line\"),f=l.querySelector(\".xgplayer-transparency-gradient\"),g=50;if(f.style.background=\"linear-gradient(to right, #f85959 0%, #f85959 \"+g+\"%, #aaa \"+g+\"%, #aaa)\",p.addEventListener(\"input\",function(e){e.preventDefault(),e.stopPropagation(),g=e.target.value,f.style.background=\"linear-gradient(to right, #f85959 0%, #f85959 \"+g+\"%, #aaa \"+g+\"%, #aaa)\",o.comments.forEach(function(e){e.style.opacity=g/100})}),l.querySelector(\".xgplayer-showarea-line\").addEventListener(\"input\",function(t){t.preventDefault(),t.stopPropagation();var n=t.target.value;e.danmu.config.area.end=n/100,e.config.danmu.area.end=n/100,e.danmu.bulletBtn.main.channel.resize()}),l.querySelector(\".xgplayer-danmuspeed-line\").addEventListener(\"input\",function(e){e.preventDefault(),e.stopPropagation();var t=e.target.value;o.comments.forEach(function(e){e.duration=100*(200-t)})}),l.querySelector(\".xgplayer-danmufont-line\").addEventListener(\"input\",function(e){e.preventDefault(),e.stopPropagation();var t=e.target.value;o.comments.forEach(function(e){e.style.fontSize=t+\"px\"})}),navigator.userAgent.indexOf(\"Firefox\")>-1)for(var y=0;y<n.querySelectorAll(\"input\").length;y++)n.querySelectorAll(\"input\")[y].style.marginTop=\"10px\"}})}})},\"./src/skin/controls/definition.js\":\n/*!*****************************************!*\\\n  !*** ./src/skin/controls/definition.js ***!\n  \\*****************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../../player */\"./src/player.js\"));r.default.install(\"s_definition\",function(){var e=this,t=e.root,n=r.default.util,a=r.default.sniffer,i=void 0,o=n.createDom(\"xg-definition\",\"\",{tabindex:3},\"xgplayer-definition\");function s(){var r=e.definitionList,a=[\"<ul>\"],i=e.config.url,s=document.createElement(\"a\");e.switchURL?[\"mp4\",\"hls\",\"__flv__\",\"dash\"].every(function(t){return!e[t]||(e[t].url&&(s.href=e[t].url),\"__flv__\"===t&&(e[t]._options?s.href=e[t]._options.url:s.href=e[t]._mediaDataSource.url),i=s.href,!1)}):i=e.currentSrc||e.src,e.hls&&(s.href=e.hls.url,i=s.href),r.forEach(function(t){s.href=t.url,e.dash?a.push(\"<li url='\"+t.url+\"' cname='\"+t.name+\"' class='\"+(t.selected?\"selected\":\"\")+\"'>\"+t.name+\"</li>\"):a.push(\"<li url='\"+t.url+\"' cname='\"+t.name+\"' class='\"+(s.href===i?\"selected\":\"\")+\"'>\"+t.name+\"</li>\")});var l=r.filter(function(t){return s.href=t.url,e.dash?!0===t.selected:s.href===i});a.push(\"</ul><p class='name'>\"+(l[0]||{name:\"\"}).name+\"</p>\");var c=t.querySelector(\".xgplayer-definition\");if(c){c.innerHTML=a.join(\"\");var u=c.querySelector(\".name\");e.config.definitionActive&&\"hover\"!==e.config.definitionActive||u.addEventListener(\"mouseenter\",function(t){t.preventDefault(),t.stopPropagation(),n.addClass(e.root,\"xgplayer-definition-active\"),c.focus()})}else{o.innerHTML=a.join(\"\");var d=o.querySelector(\".name\");e.config.definitionActive&&\"hover\"!==e.config.definitionActive||d.addEventListener(\"mouseenter\",function(t){t.preventDefault(),t.stopPropagation(),n.addClass(e.root,\"xgplayer-definition-active\"),o.focus()}),e.controls.appendChild(o)}}function l(r){e.definitionList=r,r&&r instanceof Array&&r.length>1&&(n.addClass(t,\"xgplayer-is-definition\"),e.on(\"canplay\",s))}function c(){e.currentTime=e.curTime,i||e.play()}\"mobile\"===a.device&&(e.config.definitionActive=\"click\"),e.on(\"resourceReady\",l),[\"touchend\",\"click\"].forEach(function(t){o.addEventListener(t,function(t){t.preventDefault(),t.stopPropagation();var r=e.definitionList,s=t.target||t.srcElement,l=document.createElement(\"a\");if(s&&\"li\"===s.tagName.toLocaleLowerCase()){e.emit(\"beforeDefinitionChange\",l.href);var u,d=void 0;if(Array.prototype.forEach.call(s.parentNode.childNodes,function(e){n.hasClass(e,\"selected\")&&(d=e.getAttribute(\"cname\"),n.removeClass(e,\"selected\"))}),e.dash&&r.forEach(function(e){e.selected=!1,e.name===s.innerHTML&&(e.selected=!0)}),n.addClass(s,\"selected\"),u=s.getAttribute(\"cname\"),s.parentNode.nextSibling.innerHTML=\"\"+s.getAttribute(\"cname\"),l.href=s.getAttribute(\"url\"),e.switchURL){var p=document.createElement(\"a\");[\"mp4\",\"hls\",\"__flv__\",\"dash\"].every(function(t){return!e[t]||(e[t].url&&(p.href=e[t].url),\"__flv__\"===t&&(e[t]._options?p.href=e[t]._options.url:p.href=e[t]._mediaDataSource.url),!1)}),p.href===l.href||e.ended||e.switchURL(l.href)}else e.hls&&(document.createElement(\"a\"),e.hls.url),l.href!==e.currentSrc&&(e.curTime=e.currentTime,i=e.paused,e.ended||(e.src=l.href,e.once(\"canplay\",c)));e.emit(\"definitionChange\",{from:d,to:u}),\"mobile\"===a.device&&n.removeClass(e.root,\"xgplayer-definition-active\")}else\"click\"!==e.config.definitionActive||!s||\"p\"!==s.tagName.toLocaleLowerCase()&&\"em\"!==s.tagName.toLocaleLowerCase()||(n.addClass(e.root,\"xgplayer-definition-active\"),o.focus());e.emit(\"focus\")},!1)}),o.addEventListener(\"mouseleave\",function(e){e.preventDefault(),e.stopPropagation(),n.removeClass(t,\"xgplayer-definition-active\")}),e.once(\"destroy\",function t(){e.off(\"resourceReady\",l),e.off(\"canplay\",s),e.off(\"canplay\",c),e.off(\"destroy\",t)})})},\"./src/skin/controls/download.js\":\n/*!***************************************!*\\\n  !*** ./src/skin/controls/download.js ***!\n  \\***************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=i(n(/*! ../../player */\"./src/player.js\")),a=i(n(/*! ../assets/download.svg */\"./src/skin/assets/download.svg\"));function i(e){return e&&e.__esModule?e:{default:e}}r.default.install(\"s_download\",function(){var e=this,t=r.default.util;if(e.config.download){var n=t.createDom(\"xg-download\",'<xg-icon class=\"xgplayer-icon\">'+a.default+\"</xg-icon>\",{},\"xgplayer-download\"),i=e.lang.DOWNLOAD_TIPS,o=t.createDom(\"xg-tips\",'<span class=\"xgplayer-tip-download\">'+i+\"</span>\",{},\"xgplayer-tips\");n.appendChild(o),e.once(\"ready\",function(){e.controls.appendChild(n)}),[\"click\",\"touchend\"].forEach(function(t){n.addEventListener(t,function(t){t.preventDefault(),t.stopPropagation(),e.emit(\"downloadBtnClick\")})})}})},\"./src/skin/controls/enter.js\":\n/*!************************************!*\\\n  !*** ./src/skin/controls/enter.js ***!\n  \\************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../../player */\"./src/player.js\"));r.default.install(\"s_enter\",function(){for(var e=this.root,t=r.default.util,n=\"\",a=1;a<=12;a++)n+='<div class=\"xgplayer-enter-bar'+a+'\"></div>';var i=t.createDom(\"xg-enter\",'<div class=\"xgplayer-enter-spinner\">\\n                                                  '+n+\"\\n                                                </div>\",{},\"xgplayer-enter\");e.appendChild(i)})},\"./src/skin/controls/error.js\":\n/*!************************************!*\\\n  !*** ./src/skin/controls/error.js ***!\n  \\************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../../player */\"./src/player.js\"));r.default.install(\"s_error\",function(){var e=this,t=e.root,n=r.default.util,a=n.createDom(\"xg-error\",'<em class=\"xgplayer-error-text\">请<span class=\"xgplayer-error-refresh\">刷新</span>试试</em>',{},\"xgplayer-error\");e.once(\"ready\",function(){t.appendChild(a)});var i=a.querySelector(\".xgplayer-error-text\"),o=null;function s(){e.error?i.innerHTML=e.error:e.config.lang&&\"zh-cn\"===e.config.lang?i.innerHTML=e.lang.ERROR+'，请<span class=\"xgplayer-error-refresh\">刷新</span>试试':i.innerHTML=e.lang.ERROR+'，please try to <span class=\"xgplayer-error-refresh\">refresh</span>',n.addClass(e.root,\"xgplayer-is-error\"),(o=a.querySelector(\".xgplayer-error-refresh\"))&&[\"touchend\",\"click\"].forEach(function(t){o.addEventListener(t,function(t){t.preventDefault(),t.stopPropagation();var n=t.target||t.srcElement;n&&\"span\"===n.tagName.toLocaleLowerCase()&&(e.controls.style.display=\"flex\",e.reload())})})}e.on(\"error\",s),e.once(\"destroy\",function t(){e.off(\"error\",s),e.off(\"destroy\",t)})})},\"./src/skin/controls/flex.js\":\n/*!***********************************!*\\\n  !*** ./src/skin/controls/flex.js ***!\n  \\***********************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../../player */\"./src/player.js\"));r.default.install(\"s_flex\",function(){this.root;var e=r.default.util.createDom(\"xg-placeholder\",\"\",{},\"xgplayer-placeholder\");this.controls.appendChild(e)})},\"./src/skin/controls/fullscreen.js\":\n/*!*****************************************!*\\\n  !*** ./src/skin/controls/fullscreen.js ***!\n  \\*****************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=o(n(/*! ../../player */\"./src/player.js\")),a=o(n(/*! ../assets/requestFull.svg */\"./src/skin/assets/requestFull.svg\")),i=o(n(/*! ../assets/exitFull.svg */\"./src/skin/assets/exitFull.svg\"));function o(e){return e&&e.__esModule?e:{default:e}}r.default.install(\"s_fullscreen\",function(){var e=this,t=r.default.util,n=e.config.fullscreenBtn?e.config.fullscreenBtn:{},o=void 0;o=\"img\"===n.type?t.createImgBtn(\"fullscreen\",n.url.request,n.width,n.height):t.createDom(\"xg-fullscreen\",'<xg-icon class=\"xgplayer-icon\">\\n                                             <div class=\"xgplayer-icon-requestfull\">'+a.default+'</div>\\n                                             <div class=\"xgplayer-icon-exitfull\">'+i.default+\"</div>\\n                                           </xg-icon>\",{},\"xgplayer-fullscreen\");var s={};s.requestfull=e.lang.FULLSCREEN_TIPS,s.exitfull=e.lang.EXITFULLSCREEN_TIPS;var l=t.createDom(\"xg-tips\",'<span class=\"xgplayer-tip-requestfull\">'+s.requestfull+'</span>\\n                                        <span class=\"xgplayer-tip-exitfull\">'+s.exitfull+\"</span>\",{},\"xgplayer-tips\");o.appendChild(l),e.once(\"ready\",function(){e.controls.appendChild(o)}),[\"click\",\"touchend\"].forEach(function(t){o.addEventListener(t,function(t){t.preventDefault(),t.stopPropagation(),e.emit(\"fullscreenBtnClick\")})})})},\"./src/skin/controls/loading.js\":\n/*!**************************************!*\\\n  !*** ./src/skin/controls/loading.js ***!\n  \\**************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=i(n(/*! ../../player */\"./src/player.js\")),a=i(n(/*! ../assets/loading.svg */\"./src/skin/assets/loading.svg\"));function i(e){return e&&e.__esModule?e:{default:e}}r.default.install(\"s_loading\",function(){var e=this.root,t=r.default.util.createDom(\"xg-loading\",\"\"+a.default,{},\"xgplayer-loading\");this.once(\"ready\",function(){e.appendChild(t)})})},\"./src/skin/controls/localPreview.js\":\n/*!*******************************************!*\\\n  !*** ./src/skin/controls/localPreview.js ***!\n  \\*******************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../../player */\"./src/player.js\"));r.default.install(\"s_localPreview\",function(){var e=this,t=(e.root,r.default.util);if(e.config.preview&&e.config.preview.uploadEl){var n=t.createDom(\"xg-preview\",'<input type=\"file\">',{},\"xgplayer-preview\"),a=n.querySelector(\"input\");e.config.preview.uploadEl.appendChild(n),a.onchange=function(){e.emit(\"upload\",a)}}})},\"./src/skin/controls/memoryPlay.js\":\n/*!*****************************************!*\\\n  !*** ./src/skin/controls/memoryPlay.js ***!\n  \\*****************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../../player */\"./src/player.js\"));r.default.install(\"s_memoryPlay\",function(){var e=this,t=r.default.util,n=e.config.lastPlayTime||0,a=e.config.lastPlayTimeHideDelay||0,i=null;if(!(n<=0)){(i=t.createDom(\"xg-memoryplay\",'<div class=\"xgplayer-memoryplay-spot\"><div class=\"xgplayer-progress-tip\">您上次观看到 <span class=\"xgplayer-lasttime\">'+t.format(n)+'</span> ，为您自动续播 <span class=\"btn-close\"><svg viewBox=\"64 64 896 896\" focusable=\"false\" class=\"\" data-icon=\"close\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 0 0 203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\"></path></svg></span></div></div>',{},\"xgplayer-memoryplay\")).addEventListener(\"mouseover\",function(e){e.stopPropagation()});var o=function(){i&&i.parentNode.removeChild(i),i=null};i.querySelector(\".xgplayer-progress-tip .btn-close\").addEventListener(\"click\",o),e.once(\"play\",function(){e.root.appendChild(i),e.emit(\"memoryPlayStart\",n),a>0&&setTimeout(function(){o()},1e3*a)}),e.once(\"ended\",o)}})},\"./src/skin/controls/pip.js\":\n/*!**********************************!*\\\n  !*** ./src/skin/controls/pip.js ***!\n  \\**********************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../../player */\"./src/player.js\"));r.default.install(\"s_pip\",function(){var e=this,t=r.default.util;if(e.config.pip){var n=e.lang.PIP,a=t.createDom(\"xg-pip\",'<p class=\"name\"><span>'+n+\"</span></p>\",{tabindex:9},\"xgplayer-pip\");e.once(\"ready\",function(){e.controls.appendChild(a)}),[\"click\",\"touchend\"].forEach(function(t){a.addEventListener(t,function(t){t.preventDefault(),t.stopPropagation(),e.emit(\"pipBtnClick\")})})}})},\"./src/skin/controls/play.js\":\n/*!***********************************!*\\\n  !*** ./src/skin/controls/play.js ***!\n  \\***********************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=o(n(/*! ../../player */\"./src/player.js\")),a=o(n(/*! ../assets/play.svg */\"./src/skin/assets/play.svg\")),i=o(n(/*! ../assets/pause.svg */\"./src/skin/assets/pause.svg\"));function o(e){return e&&e.__esModule?e:{default:e}}r.default.install(\"s_play\",function(){var e=this,t=r.default.util,n=e.config.playBtn?e.config.playBtn:{},o=void 0;o=\"img\"===n.type?t.createImgBtn(\"play\",n.url.play,n.width,n.height):t.createDom(\"xg-play\",'<xg-icon class=\"xgplayer-icon\">\\n                                      <div class=\"xgplayer-icon-play\">'+a.default+'</div>\\n                                      <div class=\"xgplayer-icon-pause\">'+i.default+\"</div>\\n                                     </xg-icon>\",{},\"xgplayer-play\");var s={};s.play=e.lang.PLAY_TIPS,s.pause=e.lang.PAUSE_TIPS;var l=t.createDom(\"xg-tips\",'<span class=\"xgplayer-tip-play\">'+s.play+'</span>\\n                                        <span class=\"xgplayer-tip-pause\">'+s.pause+\"</span>\",{},\"xgplayer-tips\");o.appendChild(l),e.once(\"ready\",function(){e.controls.appendChild(o)}),[\"click\",\"touchend\"].forEach(function(t){o.addEventListener(t,function(t){t.preventDefault(),t.stopPropagation(),e.emit(\"playBtnClick\")})})})},\"./src/skin/controls/playNext.js\":\n/*!***************************************!*\\\n  !*** ./src/skin/controls/playNext.js ***!\n  \\***************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=i(n(/*! ../../player */\"./src/player.js\")),a=i(n(/*! ../assets/playNext.svg */\"./src/skin/assets/playNext.svg\"));function i(e){return e&&e.__esModule?e:{default:e}}r.default.install(\"s_playNext\",function(){var e=this,t=r.default.util,n=e.config.playNext;if(n&&n.urlList){var i=t.createDom(\"xg-playnext\",'<xg-icon class=\"xgplayer-icon\">'+a.default+\"</xg-icon>\",{},\"xgplayer-playnext\"),o=e.lang.PLAYNEXT_TIPS,s=t.createDom(\"xg-tips\",'<span class=\"xgplayer-tip-playnext\">'+o+\"</span>\",{},\"xgplayer-tips\");i.appendChild(s),e.once(\"ready\",function(){e.controls.appendChild(i)}),[\"click\",\"touchend\"].forEach(function(t){i.addEventListener(t,function(t){t.preventDefault(),t.stopPropagation(),e.emit(\"playNextBtnClick\")})})}})},\"./src/skin/controls/playbackRate.js\":\n/*!*******************************************!*\\\n  !*** ./src/skin/controls/playbackRate.js ***!\n  \\*******************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../../player */\"./src/player.js\"));r.default.install(\"s_playbackRate\",function(){var e=this,t=r.default.util;if(!e.config.playbackRate)return!1;e.config.playbackRate.sort(function(e,t){return t-e});var n=t.createDom(\"xg-playbackrate\",\" \",{},\"xgplayer-playbackrate\"),a=[];e.config.playbackRate.forEach(function(e){a.push({name:\"\"+e,rate:e+\"x\",selected:!1})});var i=1,o=[\"<ul>\"];a.forEach(function(t){e.config.defaultPlaybackRate&&e.config.defaultPlaybackRate.toString()===t.name?(t.selected=!0,i=e.config.defaultPlaybackRate,e.once(\"playing\",function(){e.video.playbackRate=e.config.defaultPlaybackRate})):\"1.0\"!==t.name&&\"1\"!==t.name||e.config.defaultPlaybackRate&&1!==e.config.defaultPlaybackRate||(t.selected=!0),o.push(\"<li cname='\"+t.name+\"' class='\"+(t.selected?\"selected\":\"\")+\"'>\"+t.rate+\"</li>\")}),o.push(\"</ul><p class='name'>\"+i+\"x</p>\");var s=e.root.querySelector(\".xgplayer-playbackrate\");if(s){if(s.innerHTML=o.join(\"\"),!s)return;s.querySelector(\".name\").addEventListener(\"mouseenter\",function(n){n.preventDefault(),n.stopPropagation(),t.addClass(e.root,\"xgplayer-playbackrate-active\"),s.focus()})}else{if(n.innerHTML=o.join(\"\"),!n)return;n.querySelector(\".name\").addEventListener(\"mouseenter\",function(r){r.preventDefault(),r.stopPropagation(),t.addClass(e.root,\"xgplayer-playbackrate-active\"),n.focus()}),e.once(\"ready\",function(){e.controls.appendChild(n)})}[\"touchend\",\"click\"].forEach(function(r){n.addEventListener(r,function(r){r.stopPropagation(),r.preventDefault();var o=r.target;if(o&&\"li\"===o.tagName.toLocaleLowerCase()){var s,l=void 0;a.forEach(function(n){n.selected=!1,o.textContent.replace(/\\s+/g,\"\")===n.rate&&(Array.prototype.forEach.call(o.parentNode.childNodes,function(e){t.hasClass(e,\"selected\")&&(l=parseFloat(e.getAttribute(\"cname\")),t.removeClass(e,\"selected\"))}),n.selected=!0,e.video.playbackRate=1*n.name,i=1*n.name)}),t.addClass(o,\"selected\"),s=parseFloat(o.getAttribute(\"cname\")),o.parentNode.nextSibling.innerHTML=o.getAttribute(\"cname\")+\"x\",e.emit(\"playbackrateChange\",{from:l,to:s})}else!o||\"p\"!==o.tagName.toLocaleLowerCase()&&\"span\"!==o.tagName.toLocaleLowerCase()||(t.addClass(e.root,\"xgplayer-playbackrate-active\"),n.focus());e.emit(\"focus\")},!1)}),n.addEventListener(\"mouseleave\",function(n){n.preventDefault(),n.stopPropagation(),t.removeClass(e.root,\"xgplayer-playbackrate-active\")}),e.on(\"play\",function(){e.video.playbackRate.toFixed(1)!==i.toFixed(1)&&(e.video.playbackRate=i)})})},\"./src/skin/controls/poster.js\":\n/*!*************************************!*\\\n  !*** ./src/skin/controls/poster.js ***!\n  \\*************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../../player */\"./src/player.js\"));r.default.install(\"s_poster\",function(){var e=this.root,t=r.default.util;if(this.config.poster){var n=t.createDom(\"xg-poster\",\"\",{},\"xgplayer-poster\");n.style.backgroundImage=\"url(\"+this.config.poster+\")\",e.appendChild(n)}})},\"./src/skin/controls/progress.js\":\n/*!***************************************!*\\\n  !*** ./src/skin/controls/progress.js ***!\n  \\***************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../../player */\"./src/player.js\"));r.default.install(\"s_progress\",function(){var e=this,t=r.default.util,n=t.createDom(\"xg-progress\",'<xg-outer class=\"xgplayer-progress-outer\">\\n                                                   <xg-cache class=\"xgplayer-progress-cache\"></xg-cache>\\n                                                   <xg-played class=\"xgplayer-progress-played\">\\n                                                     <xg-progress-btn class=\"xgplayer-progress-btn\"></xg-progress-btn>\\n                                                     <xg-point class=\"xgplayer-progress-point xgplayer-tips\"></xg-point>\\n                                                     <xg-thumbnail class=\"xgplayer-progress-thumbnail xgplayer-tips\"></xg-thumbnail>\\n                                                   </xgplayer-played>\\n                                                 </xg-outer>',{tabindex:1},\"xgplayer-progress\"),a=void 0;e.controls.appendChild(n);var i=n.querySelector(\".xgplayer-progress-played\"),o=(n.querySelector(\".xgplayer-progress-btn\"),n.querySelector(\".xgplayer-progress-outer\")),s=n.querySelector(\".xgplayer-progress-cache\"),l=n.querySelector(\".xgplayer-progress-point\"),c=n.querySelector(\".xgplayer-progress-thumbnail\");function u(r,a){r.addEventListener(\"mouseenter\",function(e){a&&(t.addClass(r,\"xgplayer-progress-dot-show\"),t.addClass(n,\"xgplayer-progress-dot-active\"))}),r.addEventListener(\"mouseleave\",function(e){a&&(t.removeClass(r,\"xgplayer-progress-dot-show\"),t.removeClass(n,\"xgplayer-progress-dot-active\"))}),r.addEventListener(\"touchend\",function(i){i.stopPropagation(),a&&(t.hasClass(r,\"xgplayer-progress-dot-show\")||Object.keys(e.dotArr).forEach(function(n){e.dotArr[n]&&t.removeClass(e.dotArr[n],\"xgplayer-progress-dot-show\")}),t.toggleClass(r,\"xgplayer-progress-dot-show\"),t.toggleClass(n,\"xgplayer-progress-dot-active\"))})}function d(){e.config.progressDot&&\"Array\"===t.typeOf(e.config.progressDot)&&e.config.progressDot.forEach(function(n){if(n.time>=0&&n.time<=e.duration){var r=t.createDom(\"xg-progress-dot\",n.text?'<span class=\"xgplayer-progress-tip\">'+n.text+\"</span>\":\"\",{},\"xgplayer-progress-dot\");r.style.left=n.time/e.duration*100+\"%\",o.appendChild(r),e.dotArr[n.time]=r,u(r,n.text)}})}e.dotArr={},e.once(\"canplay\",d),e.addProgressDot=function(n,r){if(!e.dotArr[n]&&n>=0&&n<=e.duration){var a=t.createDom(\"xg-progress-dot\",\"\",{},\"xgplayer-progress-dot\");a.style.left=n/e.duration*100+\"%\",o.appendChild(a),e.dotArr[n]=a,u(a,r)}},e.removeProgressDot=function(t){if(t>=0&&t<=e.duration&&e.dotArr[t]){var n=e.dotArr[t];n.parentNode.removeChild(n),n=null,e.dotArr[t]=null}},e.removeAllProgressDot=function(){Object.keys(e.dotArr).forEach(function(t){if(e.dotArr[t]){var n=e.dotArr[t];n.parentNode.removeChild(n),n=null,e.dotArr[t]=null}})};var p=0,f=0,g=0,y=0,h=0,x=0,m=[];e.config.thumbnail&&(p=e.config.thumbnail.pic_num,f=e.config.thumbnail.width,g=e.config.thumbnail.height,y=e.config.thumbnail.col,h=e.config.thumbnail.row,m=e.config.thumbnail.urls,c.style.width=f+\"px\",c.style.height=g+\"px\"),[\"touchstart\",\"mousedown\"].forEach(function(r){n.addEventListener(r,function(r){if(r.stopPropagation(),t.event(r),r._target===l||!e.config.allowSeekAfterEnded&&e.ended)return!0;n.focus(),a=n.getBoundingClientRect().width;var o=i.getBoundingClientRect().left,s=function(n){n.stopPropagation(),t.event(n),e.isProgressMoving=!0;var r=n.clientX-o;r>a&&(r=a);var s=r/a*e.duration;if(i.style.width=100*r/a+\"%\",\"video\"!==e.videoConfig.mediaType||e.dash||e.config.closeMoveSeek){var l=t.findDom(e.controls,\".xgplayer-time\");l&&(l.innerHTML=\"<span>\"+t.format(s||0)+\"</span><em>\"+t.format(e.duration))}else e.currentTime=Number(s).toFixed(1);e.emit(\"focus\")},c=function r(l){if(l.stopPropagation(),t.event(l),window.removeEventListener(\"mousemove\",s),window.removeEventListener(\"touchmove\",s,{passive:!1}),window.removeEventListener(\"mouseup\",r),window.removeEventListener(\"touchend\",r),n.blur(),!e.isProgressMoving||\"audio\"===e.videoConfig.mediaType||e.dash||e.config.closeMoveSeek){var c=l.clientX-o;c>a&&(c=a);var u=c/a*e.duration;i.style.width=100*c/a+\"%\",e.currentTime=Number(u).toFixed(1)}e.emit(\"focus\"),e.isProgressMoving=!1};return window.addEventListener(\"mousemove\",s),window.addEventListener(\"touchmove\",s,{passive:!1}),window.addEventListener(\"mouseup\",c),window.addEventListener(\"touchend\",c),!0})}),n.addEventListener(\"mouseenter\",function(r){if(!e.config.allowSeekAfterEnded&&e.ended)return!0;var a=n.getBoundingClientRect().left,i=n.getBoundingClientRect().width,o=function(r){var o=(r.clientX-a)/i*e.duration;o=o<0?0:o,l.textContent=t.format(o);var s=l.getBoundingClientRect().width;if(e.config.thumbnail){x=e.duration/p;var u=Math.floor(o/x);c.style.backgroundImage=\"url(\"+m[Math.ceil((u+1)/(y*h))-1]+\")\";var d=u+1-y*h*(Math.ceil((u+1)/(y*h))-1),v=Math.ceil(d/h)-1,b=d-v*h-1;c.style[\"background-position\"]=\"-\"+b*f+\"px -\"+v*g+\"px\";var k=r.clientX-a-f/2;k=(k=k>0?k:0)<i-f?k:i-f,c.style.left=k+\"px\",c.style.top=-10-g+\"px\",c.style.display=\"block\",l.style.left=k+f/2-s/2+\"px\"}else{var w=r.clientX-a-s/2;w=(w=w>0?w:0)>i-s?i-s:w,l.style.left=w+\"px\"}t.hasClass(n,\"xgplayer-progress-dot-active\")?l.style.display=\"none\":l.style.display=\"block\"},s=function(e){o(e)};n.addEventListener(\"mousemove\",s,!1),n.addEventListener(\"mouseleave\",function e(t){n.removeEventListener(\"mousemove\",s,!1),n.removeEventListener(\"mouseleave\",e,!1),o(t),l.style.display=\"none\",c.style.display=\"none\"},!1),o(r)},!1);var v=function(){!a&&n&&(a=n.getBoundingClientRect().width),\"audio\"===e.videoConfig.mediaType&&e.isProgressMoving&&e.dash||(i.style.width=100*e.currentTime/e.duration+\"%\")};e.on(\"timeupdate\",v);var b=function(){var t=e.buffered;if(t&&t.length>0){for(var n=t.end(t.length-1),r=0,a=t.length;r<a;r++)if(e.currentTime>=t.start(r)&&e.currentTime<=t.end(r)){n=t.end(r);for(var i=r+1;i<t.length;i++)if(t.start(i)-t.end(i-1)>=2){n=t.end(i-1);break}break}s.style.width=n/e.duration*100+\"%\"}},k=[\"bufferedChange\",\"cacheupdate\",\"ended\",\"timeupdate\"];k.forEach(function(t){e.on(t,b)}),e.once(\"destroy\",function t(){e.removeAllProgressDot(),e.off(\"canplay\",d),e.off(\"timeupdate\",v),k.forEach(function(t){e.off(t,b)}),e.off(\"destroy\",t)})})},\"./src/skin/controls/replay.js\":\n/*!*************************************!*\\\n  !*** ./src/skin/controls/replay.js ***!\n  \\*************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=i(n(/*! ../../player */\"./src/player.js\")),a=i(n(/*! ../assets/replay.svg */\"./src/skin/assets/replay.svg\"));function i(e){return e&&e.__esModule?e:{default:e}}r.default.install(\"s_replay\",function(){var e=this,t=r.default.util,n=e.root,i=e.lang.REPLAY,o=t.createDom(\"xg-replay\",a.default+'\\n                                         <xg-replay-txt class=\"xgplayer-replay-txt\">'+i+\"</xg-replay-txt>\\n                                        \",{},\"xgplayer-replay\");function s(){var e=o.querySelector(\"path\");if(e){var t=window.getComputedStyle(e).getPropertyValue(\"transform\");if(\"string\"==typeof t&&t.indexOf(\"none\")>-1)return;e.setAttribute(\"transform\",t)}}e.once(\"ready\",function(){n.appendChild(o)}),e.on(\"ended\",s);var l=o.querySelector(\"svg\");[\"click\",\"touchend\"].forEach(function(t){l.addEventListener(t,function(t){t.preventDefault(),t.stopPropagation(),e.emit(\"replayBtnClick\")})}),e.once(\"destroy\",function t(){e.off(\"ended\",s),e.off(\"destroy\",t)})})},\"./src/skin/controls/rotate.js\":\n/*!*************************************!*\\\n  !*** ./src/skin/controls/rotate.js ***!\n  \\*************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=i(n(/*! ../../player */\"./src/player.js\")),a=i(n(/*! ../assets/rotate.svg */\"./src/skin/assets/rotate.svg\"));function i(e){return e&&e.__esModule?e:{default:e}}r.default.install(\"s_rotate\",function(){var e=this,t=r.default.util;if(e.config.rotate){var n=t.createDom(\"xg-rotate\",'<xg-icon class=\"xgplayer-icon\">'+a.default+\"</xg-icon>\",{},\"xgplayer-rotate\"),i=e.lang.ROTATE_TIPS,o=t.createDom(\"xg-tips\",'<span class=\"xgplayer-tip-rotate\">'+i+\"</span>\",{},\"xgplayer-tips\");n.appendChild(o),e.once(\"ready\",function(){e.controls.appendChild(n)}),[\"click\",\"touchend\"].forEach(function(t){n.addEventListener(t,function(t){t.preventDefault(),t.stopPropagation(),e.emit(\"rotateBtnClick\")})})}})},\"./src/skin/controls/screenShot.js\":\n/*!*****************************************!*\\\n  !*** ./src/skin/controls/screenShot.js ***!\n  \\*****************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../../player */\"./src/player.js\"));r.default.install(\"s_screenShot\",function(){var e=this,t=r.default.util;if(e.config.screenShot){var n=e.lang.SCREENSHOT,a=t.createDom(\"xg-screenshot\",'<p class=\"name\"><span>'+n+\"</span></p>\",{tabindex:11},\"xgplayer-screenshot\");e.once(\"ready\",function(){e.controls.appendChild(a)}),[\"click\",\"touchend\"].forEach(function(t){a.addEventListener(t,function(t){t.preventDefault(),t.stopPropagation(),e.emit(\"screenShotBtnClick\")})})}})},\"./src/skin/controls/start.js\":\n/*!************************************!*\\\n  !*** ./src/skin/controls/start.js ***!\n  \\************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=o(n(/*! ../../player */\"./src/player.js\")),a=o(n(/*! ../assets/startPlay.svg */\"./src/skin/assets/startPlay.svg\")),i=o(n(/*! ../assets/startPause.svg */\"./src/skin/assets/startPause.svg\"));function o(e){return e&&e.__esModule?e:{default:e}}r.default.install(\"s_start\",function(){var e=this,t=e.root,n=r.default.util,o=n.createDom(\"xg-start\",'<div class=\"xgplayer-icon-play\">'+a.default+'</div>\\n                                      <div class=\"xgplayer-icon-pause\">'+i.default+\"</div>\",{},\"xgplayer-start\");e.once(\"ready\",function(){t.appendChild(o)}),o.onclick=function(t){t.preventDefault(),t.stopPropagation(),e.emit(\"startBtnClick\")},e.once(\"ready\",function(){n.addClass(e.root,\"xgplayer-skin-default\"),e.config&&(e.config.lang&&\"en\"===e.config.lang?n.addClass(e.root,\"lang-is-en\"):\"jp\"===e.config.lang&&n.addClass(e.root,\"lang-is-jp\"))})})},\"./src/skin/controls/textTrack.js\":\n/*!****************************************!*\\\n  !*** ./src/skin/controls/textTrack.js ***!\n  \\****************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../../player */\"./src/player.js\"));r.default.install(\"s_textTrack\",function(){if(!(navigator.userAgent.indexOf(\"Chrome\")<0)){var e=this,t=e.root,n=r.default.util,a=(r.default.sniffer,e.controls,n.createDom(\"xg-texttrack\",\"\",{tabindex:7},\"xgplayer-texttrack\")),i=e.config.textTrack;i&&Array.isArray(i)&&i.length>1&&(n.addClass(e.root,\"xgplayer-is-texttrack\"),e.on(\"canplay\",function(){var r=[\"<ul>\"];r.push(\"<li class=''}'>关闭</li>\"),i.forEach(function(e){r.push(\"<li class='\"+(e.default?\"selected\":\"\")+\"'>\"+e.label+\"</li>\")});var o=e.lang.TEXTTRACK;r.push('</ul><p class=\"name\"><em>'+o+\"</em></p>\");var s=t.querySelector(\".xgplayer-texttrack\");if(s){s.innerHTML=r.join(\"\");var l=s.querySelector(\".name\");e.config.textTrackActive&&\"hover\"!==e.config.textTrackActive||l.addEventListener(\"mouseenter\",function(e){e.preventDefault(),e.stopPropagation(),n.addClass(t,\"xgplayer-texttrack-active\"),s.focus()})}else{a.innerHTML=r.join(\"\");var c=a.querySelector(\".name\");e.config.textTrackActive&&\"hover\"!==e.config.textTrackActive||c.addEventListener(\"mouseenter\",function(t){t.preventDefault(),t.stopPropagation(),n.addClass(e.root,\"xgplayer-texttrack-active\"),a.focus()}),e.controls.appendChild(a)}})),[\"touchend\",\"click\"].forEach(function(t){a.addEventListener(t,function(t){t.preventDefault(),t.stopPropagation();var r=t.target||t.srcElement;if(r&&\"li\"===r.tagName.toLocaleLowerCase()){Array.prototype.forEach.call(r.parentNode.childNodes,function(e){n.removeClass(e,\"selected\")}),n.addClass(r,\"selected\");var o=e.root.getElementsByTagName(\"Track\");\"关闭\"===r.innerHTML?(o[0].track.mode=\"hidden\",n.removeClass(e.root,\"xgplayer-texttrack-active\")):(n.hasClass(e.root,\"xgplayer-texttrack-active\")||n.addClass(e.root,\"xgplayer-texttrack-active\"),o[0].track.mode=\"showing\",i.some(function(e){if(e.label===r.innerHTML)return o[0].src=e.src,e.kind&&(o[0].kind=e.kind),o[0].label=e.label,e.srclang&&(o[0].srclang=e.srclang),!0}),e.emit(\"textTrackChange\",r.innerHTML))}else\"click\"!==e.config.textTrackActive||!r||\"p\"!==r.tagName.toLocaleLowerCase()&&\"em\"!==r.tagName.toLocaleLowerCase()||(n.addClass(e.root,\"xgplayer-texttrack-active\"),a.focus())},!1)}),a.addEventListener(\"mouseleave\",function(t){t.preventDefault(),t.stopPropagation(),n.removeClass(e.root,\"xgplayer-texttrack-active\")})}})},\"./src/skin/controls/time.js\":\n/*!***********************************!*\\\n  !*** ./src/skin/controls/time.js ***!\n  \\***********************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=function(e){return e&&e.__esModule?e:{default:e}}(n(/*! ../../player */\"./src/player.js\"));r.default.install(\"s_time\",function(){var e=this,t=(e.root,r.default.util),n=t.createDom(\"xg-time\",\"<span>\"+(e.currentTime||t.format(0))+\"</span>\\n                                           <em>\"+(e.duration||t.format(0))+\"</em>\",{},\"xgplayer-time\");e.once(\"ready\",function(){e.controls.appendChild(n)});var a=function(){\"audio\"===e.videoConfig.mediaType&&e.isProgressMoving&&e.dash||(n.innerHTML=\"<span>\"+t.format(e.currentTime||0)+\"</span><em>\"+t.format(e.duration)+\"</em>\")};e.on(\"durationchange\",a),e.on(\"timeupdate\",a),e.once(\"destroy\",function t(){e.off(\"durationchange\",a),e.off(\"timeupdate\",a),e.off(\"destroy\",t)})})},\"./src/skin/controls/volume.js\":\n/*!*************************************!*\\\n  !*** ./src/skin/controls/volume.js ***!\n  \\*************************************/\n/*! no static exports found */function(e,t,n){\"use strict\";var r=s(n(/*! ../../player */\"./src/player.js\")),a=s(n(/*! ../assets/volumeMuted.svg */\"./src/skin/assets/volumeMuted.svg\")),i=s(n(/*! ../assets/volumeSmall.svg */\"./src/skin/assets/volumeSmall.svg\")),o=s(n(/*! ../assets/volumeLarge.svg */\"./src/skin/assets/volumeLarge.svg\"));function s(e){return e&&e.__esModule?e:{default:e}}r.default.install(\"s_volume\",function(){var e=this,t=r.default.util.createDom(\"xg-volume\",'<xg-icon class=\"xgplayer-icon\">\\n                                         <div class=\"xgplayer-icon-large\">'+o.default+'</div>\\n                                         <div class=\"xgplayer-icon-small\">'+i.default+'</div>\\n                                         <div class=\"xgplayer-icon-muted\">'+a.default+'</div>\\n                                       </xg-icon>\\n                                       <xg-slider class=\"xgplayer-slider\" tabindex=\"2\">\\n                                         <xg-bar class=\"xgplayer-bar\">\\n                                           <xg-drag class=\"xgplayer-drag\"></xg-drag>\\n                                         </xg-bar>\\n                                       </xg-slider>',{},\"xgplayer-volume\");e.once(\"ready\",function(){e.controls.appendChild(t)});var n=t.querySelector(\".xgplayer-slider\"),s=t.querySelector(\".xgplayer-bar\"),l=t.querySelector(\".xgplayer-drag\"),c=t.querySelector(\".xgplayer-icon\");l.style.height=100*e.config.volume+\"%\",n.volume=e.config.volume,s.addEventListener(\"mousedown\",function(t){t.preventDefault(),t.stopPropagation(),e.emit(\"volumeBarClick\",t)}),[\"click\",\"touchend\"].forEach(function(t){c.addEventListener(t,function(t){t.preventDefault(),t.stopPropagation(),e.emit(\"volumeIconClick\")})}),c.addEventListener(\"mouseenter\",function(t){t.preventDefault(),t.stopPropagation(),e.emit(\"volumeIconEnter\")}),[\"blur\",\"mouseleave\"].forEach(function(n){t.addEventListener(n,function(t){t.preventDefault(),t.stopPropagation(),e.emit(\"volumeIconLeave\")})})})},\"./src/skin/index.js\":\n/*!***************************!*\\\n  !*** ./src/skin/index.js ***!\n  \\***************************/\n/*! no static exports found */function(e,t,n){\"use strict\";n(/*! ./style/index.scss */\"./src/skin/style/index.scss\"),n(/*! ./controls/enter.js */\"./src/skin/controls/enter.js\"),n(/*! ./controls/play.js */\"./src/skin/controls/play.js\"),n(/*! ./controls/start.js */\"./src/skin/controls/start.js\"),n(/*! ./controls/poster.js */\"./src/skin/controls/poster.js\"),n(/*! ./controls/flex.js */\"./src/skin/controls/flex.js\"),n(/*! ./controls/fullscreen.js */\"./src/skin/controls/fullscreen.js\"),n(/*! ./controls/cssFullscreen.js */\"./src/skin/controls/cssFullscreen.js\"),n(/*! ./controls/volume.js */\"./src/skin/controls/volume.js\"),n(/*! ./controls/definition.js */\"./src/skin/controls/definition.js\"),n(/*! ./controls/loading.js */\"./src/skin/controls/loading.js\"),n(/*! ./controls/progress.js */\"./src/skin/controls/progress.js\"),n(/*! ./controls/time.js */\"./src/skin/controls/time.js\"),n(/*! ./controls/replay.js */\"./src/skin/controls/replay.js\"),n(/*! ./controls/playbackRate.js */\"./src/skin/controls/playbackRate.js\"),n(/*! ./controls/localPreview.js */\"./src/skin/controls/localPreview.js\"),n(/*! ./controls/download.js */\"./src/skin/controls/download.js\"),n(/*! ./controls/danmu.js */\"./src/skin/controls/danmu.js\"),n(/*! ./controls/pip.js */\"./src/skin/controls/pip.js\"),n(/*! ./controls/playNext.js */\"./src/skin/controls/playNext.js\"),n(/*! ./controls/rotate.js */\"./src/skin/controls/rotate.js\"),n(/*! ./controls/screenShot.js */\"./src/skin/controls/screenShot.js\"),n(/*! ./controls/textTrack.js */\"./src/skin/controls/textTrack.js\"),n(/*! ./controls/error.js */\"./src/skin/controls/error.js\"),n(/*! ./controls/memoryPlay.js */\"./src/skin/controls/memoryPlay.js\")},\"./src/skin/style/index.scss\":\n/*!***********************************!*\\\n  !*** ./src/skin/style/index.scss ***!\n  \\***********************************/\n/*! no static exports found */function(e,t,n){var r=n(/*! !../../../node_modules/css-loader??ref--5-1!../../../node_modules/postcss-loader/lib!../../../node_modules/sass-loader/lib/loader.js!./index.scss */\"./node_modules/css-loader/index.js?!./node_modules/postcss-loader/lib/index.js!./node_modules/sass-loader/lib/loader.js!./src/skin/style/index.scss\");\"string\"==typeof r&&(r=[[e.i,r,\"\"]]);var a={hmr:!0,transform:void 0,insertInto:void 0};n(/*! ../../../node_modules/style-loader/lib/addStyles.js */\"./node_modules/style-loader/lib/addStyles.js\")(r,a);r.locals&&(e.exports=r.locals)},\"./src/utils/database.js\":\n/*!*******************************!*\\\n  !*** ./src/utils/database.js ***!\n  \\*******************************/\n/*! no static exports found */function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var a=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{name:\"xgplayer\",version:1,db:null,ojstore:{name:\"xg-m4a\",keypath:\"vid\"}};!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.indexedDB=window.indexedDB||window.webkitindexedDB,this.IDBKeyRange=window.IDBKeyRange||window.webkitIDBKeyRange,this.myDB=t}return r(e,[{key:\"openDB\",value:function(e){var t=this,n=this,r=this.myDB.version||1,a=n.indexedDB.open(n.myDB.name,r);a.onerror=function(e){},a.onsuccess=function(r){t.myDB.db=r.target.result,e.call(n)},a.onupgradeneeded=function(e){var t=e.target.result;e.target.transaction;t.objectStoreNames.contains(n.myDB.ojstore.name)||t.createObjectStore(n.myDB.ojstore.name,{keyPath:n.myDB.ojstore.keypath})}}},{key:\"deletedb\",value:function(){this.indexedDB.deleteDatabase(this.myDB.name)}},{key:\"closeDB\",value:function(){this.myDB.db.close()}},{key:\"addData\",value:function(e,t){for(var n=this.myDB.db.transaction(e,\"readwrite\").objectStore(e),r=void 0,a=0;a<t.length;a++)(r=n.add(t[a])).onerror=function(){},r.onsuccess=function(){}}},{key:\"putData\",value:function(e,t){for(var n=this.myDB.db.transaction(e,\"readwrite\").objectStore(e),r=void 0,a=0;a<t.length;a++)(r=n.put(t[a])).onerror=function(){},r.onsuccess=function(){}}},{key:\"getDataByKey\",value:function(e,t,n){var r=this,a=this.myDB.db.transaction(e,\"readwrite\").objectStore(e).get(t);a.onerror=function(){n.call(r,null)},a.onsuccess=function(e){var t=e.target.result;n.call(r,t)}}},{key:\"deleteData\",value:function(e,t){this.myDB.db.transaction(e,\"readwrite\").objectStore(e).delete(t)}},{key:\"clearData\",value:function(e){this.myDB.db.transaction(e,\"readwrite\").objectStore(e).clear()}}]),e}();t.default=a,e.exports=t.default},\"./src/utils/sniffer.js\":\n/*!******************************!*\\\n  !*** ./src/utils/sniffer.js ***!\n  \\******************************/\n/*! no static exports found */function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r={get device(){return r.os.isPc?\"pc\":\"mobile\"},get browser(){var e=navigator.userAgent.toLowerCase(),t={ie:/rv:([\\d.]+)\\) like gecko/,firfox:/firefox\\/([\\d.]+)/,chrome:/chrome\\/([\\d.]+)/,opera:/opera.([\\d.]+)/,safari:/version\\/([\\d.]+).*safari/};return[].concat(Object.keys(t).filter(function(n){return t[n].test(e)}))[0]},get os(){var e=navigator.userAgent,t=/(?:Windows Phone)/.test(e),n=/(?:SymbianOS)/.test(e)||t,r=/(?:Android)/.test(e),a=/(?:Firefox)/.test(e),i=/(?:iPad|PlayBook)/.test(e)||r&&!/(?:Mobile)/.test(e)||a&&/(?:Tablet)/.test(e),o=/(?:iPhone)/.test(e)&&!i;return{isTablet:i,isPhone:o,isAndroid:r,isPc:!(o||r||n||i),isSymbian:n,isWindowsPhone:t,isFireFox:a}}};t.default=r,e.exports=t.default},\"./src/utils/url.js\":\n/*!**************************!*\\\n  !*** ./src/utils/url.js ***!\n  \\**************************/\n/*! no static exports found */function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});t.getAbsoluteURL=function(e){if(!e.match(/^https?:\\/\\//)){var t=document.createElement(\"div\");t.innerHTML='<a href=\"'+e+'\">x</a>',e=t.firstChild.href}return e}},\"./src/utils/util.js\":\n/*!***************************!*\\\n  !*** ./src/utils/util.js ***!\n  \\***************************/\n/*! no static exports found */function(module,exports,__webpack_require__){\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var util={createDom:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"div\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"\",a=document.createElement(e);return a.className=r,a.innerHTML=t,Object.keys(n).forEach(function(t){var r=t,i=n[t];\"video\"===e||\"audio\"===e?i&&a.setAttribute(r,i):a.setAttribute(r,i)}),a},hasClass:function(e,t){return!!e&&(e.classList?Array.prototype.some.call(e.classList,function(e){return e===t}):!!e.className.match(new RegExp(\"(\\\\s|^)\"+t+\"(\\\\s|$)\")))},addClass:function(e,t){e&&(e.classList?t.replace(/(^\\s+|\\s+$)/g,\"\").split(/\\s+/g).forEach(function(t){t&&e.classList.add(t)}):util.hasClass(e,t)||(e.className+=\" \"+t))},removeClass:function(e,t){e&&(e.classList?t.split(/\\s+/g).forEach(function(t){e.classList.remove(t)}):util.hasClass(e,t)&&t.split(/\\s+/g).forEach(function(t){var n=new RegExp(\"(\\\\s|^)\"+t+\"(\\\\s|$)\");e.className=e.className.replace(n,\" \")}))},toggleClass:function(e,t){e&&t.split(/\\s+/g).forEach(function(t){util.hasClass(e,t)?util.removeClass(e,t):util.addClass(e,t)})},findDom:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:document,t=arguments[1],n=void 0;try{n=e.querySelector(t)}catch(r){0===t.indexOf(\"#\")&&(n=e.getElementById(t.slice(1)))}return n},padStart:function(e,t,n){for(var r=String(n),a=t>>0,i=Math.ceil(a/r.length),o=[],s=String(e);i--;)o.push(r);return o.join(\"\").substring(0,a-s.length)+s},format:function(e){if(window.isNaN(e))return\"\";var t=util.padStart(Math.floor(e/3600),2,0),n=util.padStart(Math.floor((e-3600*t)/60),2,0),r=util.padStart(Math.floor(e-3600*t-60*n),2,0);return(\"00\"===t?[n,r]:[t,n,r]).join(\":\")},event:function(e){if(e.touches){var t=e.touches[0]||e.changedTouches[0];e.clientX=t.clientX||0,e.clientY=t.clientY||0,e.offsetX=t.pageX-t.target.offsetLeft,e.offsetY=t.pageY-t.target.offsetTop}e._target=e.target||e.srcElement},typeOf:function(e){return Object.prototype.toString.call(e).match(/([^\\s.*]+)(?=]$)/g)[0]},deepCopy:function(e,t){if(\"Object\"===util.typeOf(t)&&\"Object\"===util.typeOf(e))return Object.keys(t).forEach(function(n){\"Object\"!==util.typeOf(t[n])||t[n]instanceof Node?\"Array\"===util.typeOf(t[n])?e[n]=\"Array\"===util.typeOf(e[n])?e[n].concat(t[n]):t[n]:e[n]=t[n]:e[n]?util.deepCopy(e[n],t[n]):e[n]=t[n]}),e},getBgImage:function(e){var t=(e.currentStyle||window.getComputedStyle(e,null)).backgroundImage;if(!t||\"none\"===t)return\"\";var n=document.createElement(\"a\");return n.href=t.replace(/url\\(\"|\"\\)/g,\"\"),n.href},copyDom:function(e){if(e&&1===e.nodeType){var t=document.createElement(e.tagName);return Array.prototype.forEach.call(e.attributes,function(e){t.setAttribute(e.name,e.value)}),e.innerHTML&&(t.innerHTML=e.innerHTML),t}return\"\"},setInterval:function(e,t,n,r){e._interval[t]||(e._interval[t]=setInterval(n.bind(e),r))},clearInterval:function(e,t){clearInterval(e._interval[t]),e._interval[t]=null},createImgBtn:function(e,t,n,r){var a=util.createDom(\"xg-\"+e,\"\",{},\"xgplayer-\"+e+\"-img\");if(a.style.backgroundImage='url(\"'+t+'\")',n&&r){var i=void 0,o=void 0,s=void 0;[\"px\",\"rem\",\"em\",\"pt\",\"dp\",\"vw\",\"vh\",\"vm\",\"%\"].every(function(e){return!(n.indexOf(e)>-1&&r.indexOf(e)>-1)||(i=parseFloat(n.slice(0,n.indexOf(e)).trim()),o=parseFloat(r.slice(0,r.indexOf(e)).trim()),s=e,!1)}),a.style.width=\"\"+i+s,a.style.height=\"\"+o+s,a.style.backgroundSize=\"\"+i+s+\" \"+o+s,a.style.margin=\"start\"===e?\"-\"+o/2+s+\" auto auto -\"+i/2+s:\"auto 5px auto 5px\"}return a},Hex2RGBA:function(hex,alpha){var rgb=[];if(/^\\#[0-9A-F]{3}$/i.test(hex)){var sixHex=\"#\";hex.replace(/[0-9A-F]/gi,function(e){sixHex+=e+e}),hex=sixHex}return/^#[0-9A-F]{6}$/i.test(hex)?(hex.replace(/[0-9A-F]{2}/gi,function(kw){rgb.push(eval(\"0x\"+kw))}),\"rgba(\"+rgb.join(\",\")+\", \"+alpha+\")\"):\"rgba(255, 255, 255, 0.1)\"}};exports.default=util,module.exports=exports.default},0:\n/*!****************************!*\\\n  !*** multi ./src/index.js ***!\n  \\****************************/\n/*! no static exports found */function(e,t,n){e.exports=n(/*! ./src/index.js */\"./src/index.js\")}})});\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://xgplayer/../xgplayer/dist/index.js?");

/***/ }),

=======
>>>>>>> 6568d0dd7c2d795ab5b1bd65773d4c1f5f98fc06
/***/ "./src/flv-live-mobile.js":
/*!********************************!*\
  !*** ./src/flv-live-mobile.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
<<<<<<< HEAD
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return FlvController; });\n/* harmony import */ var xgplayer_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xgplayer-loader */ \"../xgplayer-loader/index.js\");\n/* harmony import */ var xgplayer_loader__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xgplayer_loader__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var xgplayer_demux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! xgplayer-demux */ \"../xgplayer-demux/index.js\");\n/* harmony import */ var xgplayer_demux__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(xgplayer_demux__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var xgplayer_remux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! xgplayer-remux */ \"../xgplayer-remux/index.js\");\n/* harmony import */ var xgplayer_remux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(xgplayer_remux__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var xgplayer_buffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! xgplayer-buffer */ \"../xgplayer-buffer/index.js\");\n/* harmony import */ var xgplayer_buffer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(xgplayer_buffer__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xgplayer-utils */ \"../xgplayer-utils/index.js\");\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(xgplayer_utils__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var xgplayer_codec__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! xgplayer-codec */ \"../xgplayer-codec/index.js\");\n/* harmony import */ var xgplayer_codec__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(xgplayer_codec__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var xgplayer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! xgplayer */ \"../xgplayer/dist/index.js\");\n/* harmony import */ var xgplayer__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(xgplayer__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\n\nconst DEMUX_EVENTS = xgplayer_utils__WEBPACK_IMPORTED_MODULE_4__[\"EVENTS\"].DEMUX_EVENTS;\nconst LOADER_EVENTS = xgplayer_utils__WEBPACK_IMPORTED_MODULE_4__[\"EVENTS\"].LOADER_EVENTS\nconst BROWSER_EVENTS = xgplayer_utils__WEBPACK_IMPORTED_MODULE_4__[\"EVENTS\"].BROWSER_EVENTS\n\nconst Tag = 'FLVController'\n\nclass Logger {\n  warn () {}\n}\n\nclass FlvController {\n  constructor (player) {\n    this.TAG = Tag\n    this._player = player\n\n    this.video = this._player.video;\n    this.state = {\n      initSegmentArrived: false\n    }\n  }\n\n  init () {\n    this._context.registry('FETCH_LOADER', xgplayer_loader__WEBPACK_IMPORTED_MODULE_0__[\"FetchLoader\"])\n    this._context.registry('LOADER_BUFFER', xgplayer_buffer__WEBPACK_IMPORTED_MODULE_3__[\"XgBuffer\"])\n    this._context.registry('PRE_SOURCE_BUFFER', xgplayer_buffer__WEBPACK_IMPORTED_MODULE_3__[\"PreSource\"])\n\n    this._context.registry('FLV_DEMUXER', xgplayer_demux__WEBPACK_IMPORTED_MODULE_1__[\"FlvDemuxer\"])\n\n    this._context.registry('MP4_REMUXER', xgplayer_remux__WEBPACK_IMPORTED_MODULE_2__[\"Mp4Remuxer\"])\n    this._context.registry('TRACKS', xgplayer_buffer__WEBPACK_IMPORTED_MODULE_3__[\"Tracks\"])\n\n    this._context.registry('COMPATIBILITY', xgplayer_codec__WEBPACK_IMPORTED_MODULE_5__[\"Compatibility\"])\n    this._context.registry('PAGE_VISIBILITY', xgplayer_utils__WEBPACK_IMPORTED_MODULE_4__[\"PageVisibility\"])\n\n    this._context.registry('LOGGER', Logger)\n\n    this.initListeners()\n  }\n\n  initListeners () {\n    this.on(LOADER_EVENTS.LOADER_DATALOADED, this._handleLoaderDataLoaded.bind(this))\n    this.on(LOADER_EVENTS.LOADER_ERROR, this._handleNetworkError.bind(this))\n\n    this.on(DEMUX_EVENTS.MEDIA_INFO, this._handleMediaInfo.bind(this))\n    this.on(DEMUX_EVENTS.METADATA_PARSED, this._handleMetadataParsed.bind(this))\n    this.on(DEMUX_EVENTS.DEMUX_COMPLETE, this._handleDemuxComplete.bind(this))\n    this.on(DEMUX_EVENTS.DEMUX_ERROR, this._handleDemuxError.bind(this))\n\n  }\n\n  _handleMediaInfo () {\n    if (!this._context.mediaInfo) {\n      this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('failed to get mediainfo'))\n    }\n  }\n\n  _handleLoaderDataLoaded () {\n    this.emitTo('FLV_DEMUXER', DEMUX_EVENTS.DEMUX_START)\n  }\n\n  _handleMetadataParsed (type) {\n    if (type === 'audio') {\n      // 将音频meta信息交给audioContext，不走remux封装\n      const { audioTrack } = this._context.getInstance('TRACKS')\n      if (audioTrack && audioTrack.meta) {\n        this._setMetaToAudio(audioTrack.meta)\n      }\n    } else {\n      const { videoTrack } = this._context.getInstance('TRACKS')\n      if (videoTrack && videoTrack.meta) {\n        this._setMetaToVideo(videoTrack.meta)\n      }\n    }\n  }\n\n  _handleDemuxComplete () {\n    if(this._player.video) {\n      const { videoTrack, audioTrack } = this._context.getInstance('TRACKS');\n      this._player.video.onDemuxComplete(videoTrack, audioTrack);\n    }\n  }\n\n  _handleAppendInitSegment () {\n    this.state.initSegmentArrived = true\n  //  this.mse.addSourceBuffers()\n  }\n\n\n  _handleNetworkError () {\n    this._player.emit('error', new xgplayer__WEBPACK_IMPORTED_MODULE_6___default.a.Errors('network', this._player.config.url))\n  }\n\n  _handleDemuxError () {\n    this._player.emit('error', new xgplayer__WEBPACK_IMPORTED_MODULE_6___default.a.Errors('parse', this._player.config.url))\n  }\n\n\n  _setMetaToAudio (audioMeta) {\n    if (this._player.video) {\n      this._player.video.setAudioMeta(audioMeta);\n    }\n  }\n\n  _setMetaToVideo (videoMeta) {\n    if (this._player.video) {\n      this._player.video.setVideoMeta(videoMeta);\n    }\n  }\n\n  seek () {\n    if (!this.state.initSegmentArrived) {\n      this.loadData()\n    }\n  }\n\n  loadData () {\n    this.emit(LOADER_EVENTS.LADER_START, this._player.config.url)\n  }\n\n  pause () {\n    const loader = this._context.getInstance('FETCH_LOADER')\n\n    if (loader) {\n      loader.cancel()\n    }\n  }\n\n  /**\n   * 保证当前播放的视频以gop为单位\n   * @param videoTrack\n   */\n  static resolveVideoGOP (videoTrack) {\n    const { samples } = videoTrack;\n    if (!samples.length) {\n      return;\n    }\n\n    let firstIframeIdx = null\n    let lastIframeIdx = null\n\n    if (videoTrack.tempSamples && videoTrack.tempSamples.length) {\n      // 将缓存帧放置到队列的头部\n      samples.unshift.apply(samples, videoTrack.tempSamples);\n    }\n\n    // 寻找第一个I帧\n    for (let i = 0, len = samples.length; i < len; i++) {\n      const current = samples[i];\n      if (current.isKeyframe) {\n        firstIframeIdx = i;\n        break;\n      }\n    }\n\n    // 寻找最后一个I帧\n    for (let i = samples.length - 1; i > 0; i++) {\n      const current = samples[i]\n\n      if (current.isKeyframe) {\n        lastIframeIdx = i;\n        break;\n      }\n    }\n\n    if (firstIframeIdx !== 0) {\n      samples.splice(0, firstIframeIdx - 1)\n    }\n\n    videoTrack.samples = samples.slice(0, lastIframeIdx)\n    const rest = samples.slice(lastIframeIdx)\n    if (videoTrack.tempSamples) {\n      videoTrack.tempSamples.push.apply(videoTrack.tempSamples, rest)\n    } else {\n      // 将剩下的帧缓存，等待一个完整的gop\n      videoTrack.tempSamples = rest\n    }\n  }\n}\n\n\n//# sourceURL=webpack://xgplayer/./src/flv-live-mobile.js?");
=======
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return FlvController; });\n/* harmony import */ var xgplayer_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xgplayer-loader */ \"../xgplayer-loader/index.js\");\n/* harmony import */ var xgplayer_loader__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xgplayer_loader__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var xgplayer_demux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! xgplayer-demux */ \"../xgplayer-demux/index.js\");\n/* harmony import */ var xgplayer_demux__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(xgplayer_demux__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var xgplayer_remux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! xgplayer-remux */ \"../xgplayer-remux/index.js\");\n/* harmony import */ var xgplayer_remux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(xgplayer_remux__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var xgplayer_buffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! xgplayer-buffer */ \"../xgplayer-buffer/index.js\");\n/* harmony import */ var xgplayer_buffer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(xgplayer_buffer__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xgplayer-utils */ \"../xgplayer-utils/index.js\");\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(xgplayer_utils__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var xgplayer_codec__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! xgplayer-codec */ \"../xgplayer-codec/index.js\");\n/* harmony import */ var xgplayer_codec__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(xgplayer_codec__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var xgplayer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! xgplayer */ \"xgplayer\");\n/* harmony import */ var xgplayer__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(xgplayer__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\n\nconst DEMUX_EVENTS = xgplayer_utils__WEBPACK_IMPORTED_MODULE_4__[\"EVENTS\"].DEMUX_EVENTS;\nconst LOADER_EVENTS = xgplayer_utils__WEBPACK_IMPORTED_MODULE_4__[\"EVENTS\"].LOADER_EVENTS\nconst BROWSER_EVENTS = xgplayer_utils__WEBPACK_IMPORTED_MODULE_4__[\"EVENTS\"].BROWSER_EVENTS\n\nconst Tag = 'FLVController'\n\nclass Logger {\n  warn () {}\n}\n\nclass FlvController {\n  constructor (player) {\n    this.TAG = Tag\n    this._player = player\n\n    this.video = this._player.video;\n    this.state = {\n      initSegmentArrived: false\n    }\n  }\n\n  init () {\n    this._context.registry('FETCH_LOADER', xgplayer_loader__WEBPACK_IMPORTED_MODULE_0__[\"FetchLoader\"])\n    this._context.registry('LOADER_BUFFER', xgplayer_buffer__WEBPACK_IMPORTED_MODULE_3__[\"XgBuffer\"])\n    this._context.registry('PRE_SOURCE_BUFFER', xgplayer_buffer__WEBPACK_IMPORTED_MODULE_3__[\"PreSource\"])\n\n    this._context.registry('FLV_DEMUXER', xgplayer_demux__WEBPACK_IMPORTED_MODULE_1__[\"FlvDemuxer\"])\n\n    this._context.registry('MP4_REMUXER', xgplayer_remux__WEBPACK_IMPORTED_MODULE_2__[\"Mp4Remuxer\"])\n    this._context.registry('TRACKS', xgplayer_buffer__WEBPACK_IMPORTED_MODULE_3__[\"Tracks\"])\n\n    this._context.registry('COMPATIBILITY', xgplayer_codec__WEBPACK_IMPORTED_MODULE_5__[\"Compatibility\"])\n    this._context.registry('PAGE_VISIBILITY', xgplayer_utils__WEBPACK_IMPORTED_MODULE_4__[\"PageVisibility\"])\n\n    this._context.registry('LOGGER', Logger)\n\n    this.initListeners()\n  }\n\n  initListeners () {\n    this.on(LOADER_EVENTS.LOADER_DATALOADED, this._handleLoaderDataLoaded.bind(this))\n    this.on(LOADER_EVENTS.LOADER_ERROR, this._handleNetworkError.bind(this))\n\n    this.on(DEMUX_EVENTS.MEDIA_INFO, this._handleMediaInfo.bind(this))\n    this.on(DEMUX_EVENTS.METADATA_PARSED, this._handleMetadataParsed.bind(this))\n    this.on(DEMUX_EVENTS.DEMUX_COMPLETE, this._handleDemuxComplete.bind(this))\n    this.on(DEMUX_EVENTS.DEMUX_ERROR, this._handleDemuxError.bind(this))\n\n  }\n\n  _handleMediaInfo () {\n    if (!this._context.mediaInfo) {\n      this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('failed to get mediainfo'))\n    }\n  }\n\n  _handleLoaderDataLoaded () {\n    this.emitTo('FLV_DEMUXER', DEMUX_EVENTS.DEMUX_START)\n  }\n\n  _handleMetadataParsed (type) {\n    if (type === 'audio') {\n      // 将音频meta信息交给audioContext，不走remux封装\n      const { audioTrack } = this._context.getInstance('TRACKS')\n      if (audioTrack && audioTrack.meta) {\n        this._setMetaToAudio(audioTrack.meta)\n      }\n    } else {\n      const { videoTrack } = this._context.getInstance('TRACKS')\n      if (videoTrack && videoTrack.meta) {\n        this._setMetaToVideo(videoTrack.meta)\n      }\n    }\n  }\n\n  _handleDemuxComplete () {\n    if(this._player.video) {\n      const { videoTrack, audioTrack } = this._context.getInstance('TRACKS');\n      this._player.video.onDemuxComplete(videoTrack, audioTrack);\n    }\n  }\n\n  _handleAppendInitSegment () {\n    this.state.initSegmentArrived = true\n  //  this.mse.addSourceBuffers()\n  }\n\n\n  _handleNetworkError () {\n    this._player.emit('error', new xgplayer__WEBPACK_IMPORTED_MODULE_6___default.a.Errors('network', this._player.config.url))\n  }\n\n  _handleDemuxError () {\n    this._player.emit('error', new xgplayer__WEBPACK_IMPORTED_MODULE_6___default.a.Errors('parse', this._player.config.url))\n  }\n\n\n  _setMetaToAudio (audioMeta) {\n    if (this._player.video) {\n      this._player.video.setAudioMeta(audioMeta);\n    }\n  }\n\n  _setMetaToVideo (videoMeta) {\n    if (this._player.video) {\n      this._player.video.setVideoMeta(videoMeta);\n    }\n  }\n\n  seek () {\n    if (!this.state.initSegmentArrived) {\n      this.loadData()\n    }\n  }\n\n  loadData () {\n    this.emit(LOADER_EVENTS.LADER_START, this._player.config.url)\n  }\n\n  pause () {\n    const loader = this._context.getInstance('FETCH_LOADER')\n\n    if (loader) {\n      loader.cancel()\n    }\n  }\n\n  /**\n   * 保证当前播放的视频以gop为单位\n   * @param videoTrack\n   */\n  static resolveVideoGOP (videoTrack) {\n    const { samples } = videoTrack;\n    if (!samples.length) {\n      return;\n    }\n\n    let firstIframeIdx = null\n    let lastIframeIdx = null\n\n    if (videoTrack.tempSamples && videoTrack.tempSamples.length) {\n      // 将缓存帧放置到队列的头部\n      samples.unshift.apply(samples, videoTrack.tempSamples);\n    }\n\n    // 寻找第一个I帧\n    for (let i = 0, len = samples.length; i < len; i++) {\n      const current = samples[i];\n      if (current.isKeyframe) {\n        firstIframeIdx = i;\n        break;\n      }\n    }\n\n    // 寻找最后一个I帧\n    for (let i = samples.length - 1; i > 0; i++) {\n      const current = samples[i]\n\n      if (current.isKeyframe) {\n        lastIframeIdx = i;\n        break;\n      }\n    }\n\n    if (firstIframeIdx !== 0) {\n      samples.splice(0, firstIframeIdx - 1)\n    }\n\n    videoTrack.samples = samples.slice(0, lastIframeIdx)\n    const rest = samples.slice(lastIframeIdx)\n    if (videoTrack.tempSamples) {\n      videoTrack.tempSamples.push.apply(videoTrack.tempSamples, rest)\n    } else {\n      // 将剩下的帧缓存，等待一个完整的gop\n      videoTrack.tempSamples = rest\n    }\n  }\n}\n\n\n//# sourceURL=webpack://xgplayer/./src/flv-live-mobile.js?");
>>>>>>> 6568d0dd7c2d795ab5b1bd65773d4c1f5f98fc06

/***/ }),

/***/ "./src/mobile.js":
/*!***********************!*\
  !*** ./src/mobile.js ***!
  \***********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
<<<<<<< HEAD
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var xgplayer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xgplayer */ \"../xgplayer/dist/index.js\");\n/* harmony import */ var xgplayer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xgplayer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! xgplayer-utils */ \"../xgplayer-utils/index.js\");\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _flv_live_mobile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./flv-live-mobile */ \"./src/flv-live-mobile.js\");\n\n\n\nconst flvAllowedEvents = xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__[\"EVENTS\"].FlvAllowedEvents;\n\nclass FlvPlayer extends xgplayer__WEBPACK_IMPORTED_MODULE_0___default.a {\n  constructor (config) {\n    if (!config.mediaType) {\n      config.mediaType = 'mobile-video'\n    }\n    super(config)\n    this.video.width = Number.parseInt(config.width || 600)\n    this.video.height = Number.parseInt(config.height || 337.5)\n    this.video.style.outline = 'none';\n    this.context = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__[\"Context\"](flvAllowedEvents)\n    this.initEvents()\n  }\n\n  start () {\n    this.initFlv()\n    this.context.init()\n    this.flv.seek(0);\n    super.start(this.config.url);\n    this.play();\n  }\n\n  initFlvEvents (flv) {\n    const player = this;\n    flv.once(xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__[\"EVENTS\"].REMUX_EVENTS.INIT_SEGMENT, () => {\n      xgplayer__WEBPACK_IMPORTED_MODULE_0___default.a.util.addClass(player.root, 'xgplayer-is-live')\n      if (!xgplayer__WEBPACK_IMPORTED_MODULE_0___default.a.util.findDom(this.root, 'xg-live')) {\n        const live = xgplayer__WEBPACK_IMPORTED_MODULE_0___default.a.util.createDom('xg-live', '正在直播', {}, 'xgplayer-live')\n        player.controls.appendChild(live)\n      }\n    })\n\n    flv.once(xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__[\"EVENTS\"].LOADER_EVENTS.LOADER_COMPLETE, () => {\n      // 直播完成，待播放器播完缓存后发送关闭事件\n      if (!player.paused) {\n        const timer = setInterval(() => {\n          const end = player.getBufferedRange()[1]\n          if (Math.abs(player.currentTime - end) < 0.5) {\n            player.emit('ended')\n            window.clearInterval(timer)\n          }\n        }, 200)\n      }\n    })\n    flv.on(xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__[\"EVENTS\"].BROWSER_EVENTS.VISIBILITY_CHANGE, (hidden) => {\n      if (hidden) {\n        this.pause()\n      }\n    })\n  }\n\n  initEvents () {\n    this.on('timeupdate', () => {\n      this.loadData()\n    })\n\n    this.on('seeking', () => {\n      const time = this.currentTime\n      const range = this.getBufferedRange()\n      if (time > range[1] || time < range[0]) {\n        this.flv.seek(this.currentTime)\n      }\n    })\n  }\n\n  initFlv () {\n    const flv = this.context.registry('FLV_CONTROLLER', _flv_live_mobile__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this)\n    this.initFlvEvents(flv)\n    this.flv = flv\n  }\n\n  play () {\n    if (this._hasStart && this.paused) {\n      this._destroy()\n      this.context = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__[\"Context\"](flvAllowedEvents)\n      const flv = this.context.registry('FLV_CONTROLLER', _flv_live_mobile__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this)\n      this.initFlvEvents(flv)\n      this.flv = flv\n      this.context.init()\n      this.loadData()\n      super.start()\n      super.play()\n    } else {\n      super.play()\n      this.addLiveFlag();\n    }\n  }\n\n  pause () {\n    super.pause()\n    if (this.flv) {\n      this.flv.pause()\n    }\n  }\n\n  loadData (time = this.currentTime) {\n    if (this.flv) {\n      this.flv.seek(time)\n    }\n  }\n  destroy () {\n    this._destroy()\n    super.destroy();\n  }\n\n  addLiveFlag () {\n    const player = this;\n    xgplayer__WEBPACK_IMPORTED_MODULE_0___default.a.util.addClass(player.root, 'xgplayer-is-live')\n    if (!xgplayer__WEBPACK_IMPORTED_MODULE_0___default.a.util.findDom(this.root, 'xg-live')) {\n      const live = xgplayer__WEBPACK_IMPORTED_MODULE_0___default.a.util.createDom('xg-live', '正在直播', {}, 'xgplayer-live')\n      player.controls.appendChild(live)\n    }\n  }\n\n  _destroy () {\n    this.context.destroy()\n    this.flv = null\n    this.context = null\n  }\n\n  get src () {\n    return this.currentSrc\n  }\n\n  set src (url) {\n    this.player.config.url = url\n    if (!this.paused) {\n      this.pause()\n      this.once('pause', () => {\n        this.start(url)\n      })\n      this.once('canplay', () => {\n        this.play()\n      })\n    } else {\n      this.start(url)\n    }\n    this.once('canplay', () => {\n      this.currentTime = 0\n    })\n  }\n}\n\nmodule.exports = FlvPlayer\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"../../node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack://xgplayer/./src/mobile.js?");
=======
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var xgplayer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xgplayer */ \"xgplayer\");\n/* harmony import */ var xgplayer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xgplayer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! xgplayer-utils */ \"../xgplayer-utils/index.js\");\n/* harmony import */ var xgplayer_utils__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _flv_live_mobile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./flv-live-mobile */ \"./src/flv-live-mobile.js\");\n\n\n\nconst flvAllowedEvents = xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__[\"EVENTS\"].FlvAllowedEvents;\n\nclass FlvPlayer extends xgplayer__WEBPACK_IMPORTED_MODULE_0___default.a {\n  constructor (config) {\n    if (!config.mediaType) {\n      config.mediaType = 'mobile-video'\n    }\n    super(config)\n    this.video.width = Number.parseInt(config.width || 600)\n    this.video.height = Number.parseInt(config.height || 337.5)\n    this.video.style.outline = 'none';\n    this.context = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__[\"Context\"](flvAllowedEvents)\n    this.initEvents()\n  }\n\n  start () {\n    this.initFlv()\n    this.context.init()\n    this.flv.seek(0);\n    super.start(this.config.url);\n    this.play();\n  }\n\n  initFlvEvents (flv) {\n    const player = this;\n    flv.once(xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__[\"EVENTS\"].REMUX_EVENTS.INIT_SEGMENT, () => {\n      xgplayer__WEBPACK_IMPORTED_MODULE_0___default.a.util.addClass(player.root, 'xgplayer-is-live')\n      if (!xgplayer__WEBPACK_IMPORTED_MODULE_0___default.a.util.findDom(this.root, 'xg-live')) {\n        const live = xgplayer__WEBPACK_IMPORTED_MODULE_0___default.a.util.createDom('xg-live', '正在直播', {}, 'xgplayer-live')\n        player.controls.appendChild(live)\n      }\n    })\n\n    flv.once(xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__[\"EVENTS\"].LOADER_EVENTS.LOADER_COMPLETE, () => {\n      // 直播完成，待播放器播完缓存后发送关闭事件\n      if (!player.paused) {\n        const timer = setInterval(() => {\n          const end = player.getBufferedRange()[1]\n          if (Math.abs(player.currentTime - end) < 0.5) {\n            player.emit('ended')\n            window.clearInterval(timer)\n          }\n        }, 200)\n      }\n    })\n    flv.on(xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__[\"EVENTS\"].BROWSER_EVENTS.VISIBILITY_CHANGE, (hidden) => {\n      if (hidden) {\n        this.pause()\n      }\n    })\n  }\n\n  initEvents () {\n    this.on('timeupdate', () => {\n      this.loadData()\n    })\n\n    this.on('seeking', () => {\n      const time = this.currentTime\n      const range = this.getBufferedRange()\n      if (time > range[1] || time < range[0]) {\n        this.flv.seek(this.currentTime)\n      }\n    })\n  }\n\n  initFlv () {\n    const flv = this.context.registry('FLV_CONTROLLER', _flv_live_mobile__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this)\n    this.initFlvEvents(flv)\n    this.flv = flv\n  }\n\n  play () {\n    if (this._hasStart && this.paused) {\n      this._destroy()\n      this.context = new xgplayer_utils__WEBPACK_IMPORTED_MODULE_1__[\"Context\"](flvAllowedEvents)\n      const flv = this.context.registry('FLV_CONTROLLER', _flv_live_mobile__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this)\n      this.initFlvEvents(flv)\n      this.flv = flv\n      this.context.init()\n      this.loadData()\n      super.start()\n      super.play()\n    } else {\n      super.play()\n      this.addLiveFlag();\n    }\n  }\n\n  pause () {\n    super.pause()\n    if (this.flv) {\n      this.flv.pause()\n    }\n  }\n\n  loadData (time = this.currentTime) {\n    if (this.flv) {\n      this.flv.seek(time)\n    }\n  }\n  destroy () {\n    this._destroy()\n    super.destroy();\n  }\n\n  addLiveFlag () {\n    const player = this;\n    xgplayer__WEBPACK_IMPORTED_MODULE_0___default.a.util.addClass(player.root, 'xgplayer-is-live')\n    if (!xgplayer__WEBPACK_IMPORTED_MODULE_0___default.a.util.findDom(this.root, 'xg-live')) {\n      const live = xgplayer__WEBPACK_IMPORTED_MODULE_0___default.a.util.createDom('xg-live', '正在直播', {}, 'xgplayer-live')\n      player.controls.appendChild(live)\n    }\n  }\n\n  _destroy () {\n    this.context.destroy()\n    this.flv = null\n    this.context = null\n  }\n\n  get src () {\n    return this.currentSrc\n  }\n\n  set src (url) {\n    this.player.config.url = url\n    if (!this.paused) {\n      this.pause()\n      this.once('pause', () => {\n        this.start(url)\n      })\n      this.once('canplay', () => {\n        this.play()\n      })\n    } else {\n      this.start(url)\n    }\n    this.once('canplay', () => {\n      this.currentTime = 0\n    })\n  }\n}\n\nmodule.exports = FlvPlayer\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"../../node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack://xgplayer/./src/mobile.js?");
>>>>>>> 6568d0dd7c2d795ab5b1bd65773d4c1f5f98fc06

/***/ }),

/***/ 0:
/*!*****************************!*\
  !*** multi ./src/mobile.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./src/mobile.js */\"./src/mobile.js\");\n\n\n//# sourceURL=webpack://xgplayer/multi_./src/mobile.js?");

/***/ }),

/***/ "xgplayer":
/*!***************************!*\
  !*** external "xgplayer" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_xgplayer__;\n\n//# sourceURL=webpack://xgplayer/external_%22xgplayer%22?");

/***/ })

/******/ });
});